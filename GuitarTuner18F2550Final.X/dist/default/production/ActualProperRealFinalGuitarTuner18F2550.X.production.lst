

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Mar 24 17:30:10 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataBANK1
    42  001B4A                     __pidataBANK1:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _frequencyList
    46  001B4A  CD                 	db	205
    47  001B4B  82                 	db	130
    48  001B4C  41                 	db	65
    49  001B4D  8F                 	db	143
    50  001B4E  8A                 	db	138
    51  001B4F  41                 	db	65
    52  001B50  CD                 	db	205
    53  001B51  92                 	db	146
    54  001B52  41                 	db	65
    55  001B53  9A                 	db	154
    56  001B54  9B                 	db	155
    57  001B55  41                 	db	65
    58  001B56  CD                 	db	205
    59  001B57  A4                 	db	164
    60  001B58  41                 	db	65
    61  001B59  A4                 	db	164
    62  001B5A  AE                 	db	174
    63  001B5B  41                 	db	65
    64  001B5C  F6                 	db	246
    65  001B5D  B8                 	db	184
    66  001B5E  41                 	db	65
    67  001B5F  00                 	db	0
    68  001B60  C4                 	db	196
    69  001B61  41                 	db	65
    70  001B62  AE                 	db	174
    71  001B63  CF                 	db	207
    72  001B64  41                 	db	65
    73  001B65  00                 	db	0
    74  001B66  DC                 	db	220
    75  001B67  41                 	db	65
    76  001B68  1F                 	db	31
    77  001B69  E9                 	db	233
    78  001B6A  41                 	db	65
    79  001B6B  F6                 	db	246
    80  001B6C  F6                 	db	246
    81  001B6D  41                 	db	65
    82  001B6E  CD                 	db	205
    83  001B6F  02                 	db	2
    84  001B70  42                 	db	66
    85  001B71  8F                 	db	143
    86  001B72  0A                 	db	10
    87  001B73  42                 	db	66
    88  001B74  CD                 	db	205
    89  001B75  12                 	db	18
    90  001B76  42                 	db	66
    91  001B77  9A                 	db	154
    92  001B78  1B                 	db	27
    93  001B79  42                 	db	66
    94  001B7A  CD                 	db	205
    95  001B7B  24                 	db	36
    96  001B7C  42                 	db	66
    97  001B7D  A4                 	db	164
    98  001B7E  2E                 	db	46
    99  001B7F  42                 	db	66
   100  001B80  F6                 	db	246
   101  001B81  38                 	db	56
   102  001B82  42                 	db	66
   103  001B83  00                 	db	0
   104  001B84  44                 	db	68
   105  001B85  42                 	db	66
   106  001B86  AE                 	db	174
   107  001B87  4F                 	db	79
   108  001B88  42                 	db	66
   109  001B89  00                 	db	0
   110  001B8A  5C                 	db	92
   111  001B8B  42                 	db	66
   112  001B8C  1F                 	db	31
   113  001B8D  69                 	db	105
   114  001B8E  42                 	db	66
   115  001B8F  F6                 	db	246
   116  001B90  76                 	db	118
   117  001B91  42                 	db	66
   118  001B92  CD                 	db	205
   119  001B93  82                 	db	130
   120  001B94  42                 	db	66
   121  001B95  8F                 	db	143
   122  001B96  8A                 	db	138
   123  001B97  42                 	db	66
   124  001B98  CD                 	db	205
   125  001B99  92                 	db	146
   126  001B9A  42                 	db	66
   127  001B9B  9A                 	db	154
   128  001B9C  9B                 	db	155
   129  001B9D  42                 	db	66
   130  001B9E  CD                 	db	205
   131  001B9F  A4                 	db	164
   132  001BA0  42                 	db	66
   133  001BA1  A4                 	db	164
   134  001BA2  AE                 	db	174
   135  001BA3  42                 	db	66
   136  001BA4  F6                 	db	246
   137  001BA5  B8                 	db	184
   138  001BA6  42                 	db	66
   139  001BA7  00                 	db	0
   140  001BA8  C4                 	db	196
   141  001BA9  42                 	db	66
   142  001BAA  AE                 	db	174
   143  001BAB  CF                 	db	207
   144  001BAC  42                 	db	66
   145  001BAD  00                 	db	0
   146  001BAE  DC                 	db	220
   147  001BAF  42                 	db	66
   148  001BB0  1F                 	db	31
   149  001BB1  E9                 	db	233
   150  001BB2  42                 	db	66
   151  001BB3  F6                 	db	246
   152  001BB4  F6                 	db	246
   153  001BB5  42                 	db	66
   154  001BB6  CD                 	db	205
   155  001BB7  02                 	db	2
   156  001BB8  43                 	db	67
   157  001BB9  8F                 	db	143
   158  001BBA  0A                 	db	10
   159  001BBB  43                 	db	67
   160  001BBC  CD                 	db	205
   161  001BBD  12                 	db	18
   162  001BBE  43                 	db	67
   163  001BBF  9A                 	db	154
   164  001BC0  1B                 	db	27
   165  001BC1  43                 	db	67
   166  001BC2  CD                 	db	205
   167  001BC3  24                 	db	36
   168  001BC4  43                 	db	67
   169  001BC5  A4                 	db	164
   170  001BC6  2E                 	db	46
   171  001BC7  43                 	db	67
   172  001BC8  F6                 	db	246
   173  001BC9  38                 	db	56
   174  001BCA  43                 	db	67
   175  001BCB  00                 	db	0
   176  001BCC  44                 	db	68
   177  001BCD  43                 	db	67
   178  001BCE  AE                 	db	174
   179  001BCF  4F                 	db	79
   180  001BD0  43                 	db	67
   181  001BD1  00                 	db	0
   182  001BD2  5C                 	db	92
   183  001BD3  43                 	db	67
   184  001BD4  1F                 	db	31
   185  001BD5  69                 	db	105
   186  001BD6  43                 	db	67
   187  001BD7  F6                 	db	246
   188  001BD8  76                 	db	118
   189  001BD9  43                 	db	67
   190  001BDA  CD                 	db	205
   191  001BDB  82                 	db	130
   192  001BDC  43                 	db	67
   193  001BDD  8F                 	db	143
   194  001BDE  8A                 	db	138
   195  001BDF  43                 	db	67
   196  001BE0  CD                 	db	205
   197  001BE1  92                 	db	146
   198  001BE2  43                 	db	67
   199  001BE3  8F                 	db	143
   200  001BE4  9B                 	db	155
   201  001BE5  43                 	db	67
   202  001BE6  CD                 	db	205
   203  001BE7  A4                 	db	164
   204  001BE8  43                 	db	67
   205  001BE9  A4                 	db	164
   206  001BEA  AE                 	db	174
   207  001BEB  43                 	db	67
   208  001BEC  F6                 	db	246
   209  001BED  B8                 	db	184
   210  001BEE  43                 	db	67
   211  001BEF  00                 	db	0
   212  001BF0  C4                 	db	196
   213  001BF1  43                 	db	67
   214  001BF2  AE                 	db	174
   215  001BF3  CF                 	db	207
   216  001BF4  43                 	db	67
   217  001BF5  00                 	db	0
   218  001BF6  DC                 	db	220
   219  001BF7  43                 	db	67
   220  001BF8  1F                 	db	31
   221  001BF9  E9                 	db	233
   222  001BFA  43                 	db	67
   223  001BFB  F6                 	db	246
   224  001BFC  F6                 	db	246
   225  001BFD  43                 	db	67
   226  001BFE  CD                 	db	205
   227  001BFF  02                 	db	2
   228  001C00  44                 	db	68
   229  001C01  8F                 	db	143
   230  001C02  0A                 	db	10
   231  001C03  44                 	db	68
   232  001C04  CD                 	db	205
   233  001C05  12                 	db	18
   234  001C06  44                 	db	68
   235  001C07  9A                 	db	154
   236  001C08  1B                 	db	27
   237  001C09  44                 	db	68
   238  001C0A  00                 	db	0
   239  001C0B  00                 	db	0
   240  001C0C  00                 	db	0
   241  001C0D  00                 	db	0
   242  001C0E  00                 	db	0
   243  001C0F  00                 	db	0
   244                           
   245                           	psect	smallconst
   246  000800                     __psmallconst:
   247                           	opt stack 0
   248  000800  00                 	db	0
   249  000801                     _blank:
   250                           	opt stack 0
   251  000801  00                 	db	0
   252  000802  00                 	db	0
   253  000803  00                 	db	0
   254  000804  00                 	db	0
   255  000805  00                 	db	0
   256  000806  00                 	db	0
   257  000807  00                 	db	0
   258  000808  00                 	db	0
   259  000809                     __end_of_blank:
   260                           	opt stack 0
   261  000809                     _noteA:
   262                           	opt stack 0
   263  000809  3C                 	db	60
   264  00080A  42                 	db	66
   265  00080B  42                 	db	66
   266  00080C  42                 	db	66
   267  00080D  7E                 	db	126
   268  00080E  42                 	db	66
   269  00080F  42                 	db	66
   270  000810  42                 	db	66
   271  000811                     __end_of_noteA:
   272                           	opt stack 0
   273  000811                     _noteB:
   274                           	opt stack 0
   275  000811  7C                 	db	124
   276  000812  42                 	db	66
   277  000813  42                 	db	66
   278  000814  7C                 	db	124
   279  000815  42                 	db	66
   280  000816  42                 	db	66
   281  000817  42                 	db	66
   282  000818  7C                 	db	124
   283  000819                     __end_of_noteB:
   284                           	opt stack 0
   285  000819                     _noteC:
   286                           	opt stack 0
   287  000819  3E                 	db	62
   288  00081A  40                 	db	64
   289  00081B  40                 	db	64
   290  00081C  40                 	db	64
   291  00081D  40                 	db	64
   292  00081E  40                 	db	64
   293  00081F  40                 	db	64
   294  000820  3E                 	db	62
   295  000821                     __end_of_noteC:
   296                           	opt stack 0
   297  000821                     _noteD:
   298                           	opt stack 0
   299  000821  7C                 	db	124
   300  000822  42                 	db	66
   301  000823  42                 	db	66
   302  000824  42                 	db	66
   303  000825  42                 	db	66
   304  000826  42                 	db	66
   305  000827  42                 	db	66
   306  000828  7C                 	db	124
   307  000829                     __end_of_noteD:
   308                           	opt stack 0
   309  000829                     _noteE:
   310                           	opt stack 0
   311  000829  7E                 	db	126
   312  00082A  40                 	db	64
   313  00082B  40                 	db	64
   314  00082C  78                 	db	120
   315  00082D  40                 	db	64
   316  00082E  40                 	db	64
   317  00082F  40                 	db	64
   318  000830  7E                 	db	126
   319  000831                     __end_of_noteE:
   320                           	opt stack 0
   321  000831                     _noteF:
   322                           	opt stack 0
   323  000831  7E                 	db	126
   324  000832  40                 	db	64
   325  000833  40                 	db	64
   326  000834  78                 	db	120
   327  000835  40                 	db	64
   328  000836  40                 	db	64
   329  000837  40                 	db	64
   330  000838  40                 	db	64
   331  000839                     __end_of_noteF:
   332                           	opt stack 0
   333  000839                     _noteFlat:
   334                           	opt stack 0
   335  000839  20                 	db	32
   336  00083A  20                 	db	32
   337  00083B  20                 	db	32
   338  00083C  20                 	db	32
   339  00083D  38                 	db	56
   340  00083E  24                 	db	36
   341  00083F  24                 	db	36
   342  000840  38                 	db	56
   343  000841                     __end_of_noteFlat:
   344                           	opt stack 0
   345  000841                     _noteG:
   346                           	opt stack 0
   347  000841  3C                 	db	60
   348  000842  42                 	db	66
   349  000843  40                 	db	64
   350  000844  40                 	db	64
   351  000845  4E                 	db	78
   352  000846  42                 	db	66
   353  000847  42                 	db	66
   354  000848  3C                 	db	60
   355  000849                     __end_of_noteG:
   356                           	opt stack 0
   357  000849                     _noteSharp:
   358                           	opt stack 0
   359  000849  24                 	db	36
   360  00084A  24                 	db	36
   361  00084B  FF                 	db	255
   362  00084C  24                 	db	36
   363  00084D  24                 	db	36
   364  00084E  FF                 	db	255
   365  00084F  24                 	db	36
   366  000850  24                 	db	36
   367  000851                     __end_of_noteSharp:
   368                           	opt stack 0
   369  0000                     _TMR0	set	4054
   370  0000                     _ADCON1	set	4033
   371  0000                     _INTCONbits	set	4082
   372  0000                     _PORTAbits	set	3968
   373  0000                     _T0CON	set	4053
   374  0000                     _TRISA	set	3986
   375  0000                     _TRISB	set	3987
   376  0000                     _TRISC	set	3988
   377  0000                     _UCFGbits	set	3951
   378  0000                     _UCONbits	set	3949
   379  0000                     _RA0	set	31744
   380  0000                     _RA2	set	31746
   381  0000                     _RA4	set	31748
   382  0000                     _TMR0IE	set	32661
   383  0000                     _TMR0IF	set	32658
   384                           
   385                           ; #config settings
   386  000851  00                 	db	0	; dummy byte at the end
   387  0000                     
   388                           	psect	cinit
   389  002062                     __pcinit:
   390                           	opt stack 0
   391  002062                     start_initialization:
   392                           	opt stack 0
   393  002062                     __initialization:
   394                           	opt stack 0
   395                           
   396                           ; Clear objects allocated to COMRAM (4 bytes)
   397  002062  6A50               	clrf	(__pbssCOMRAM+3)& (0+255),c
   398  002064  6A4F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   399  002066  6A4E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   400  002068  6A4D               	clrf	__pbssCOMRAM& (0+255),c
   401                           
   402                           ; Initialize objects allocated to BANK1 (198 bytes)
   403                           ; load TBLPTR registers with __pidataBANK1
   404  00206A  0E4A               	movlw	low __pidataBANK1
   405  00206C  6EF6               	movwf	tblptrl,c
   406  00206E  0E1B               	movlw	high __pidataBANK1
   407  002070  6EF7               	movwf	tblptrh,c
   408  002072  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   409  002074  6EF8               	movwf	tblptru,c
   410  002076  EE01  F000         	lfsr	0,__pdataBANK1
   411  00207A  EE10 F0C6          	lfsr	1,198
   412  00207E                     copy_data0:
   413  00207E  0009               	tblrd		*+
   414  002080  CFF5 FFEE          	movff	tablat,postinc0
   415  002084  50E5               	movf	postdec1,w,c
   416  002086  50E1               	movf	fsr1l,w,c
   417  002088  E1FA               	bnz	copy_data0
   418  00208A                     end_of_initialization:
   419                           	opt stack 0
   420  00208A                     __end_of__initialization:
   421                           	opt stack 0
   422  00208A  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   423  00208C  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   424  00208E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   425  002090  6EF8               	movwf	tblptru,c
   426  002092  0E08               	movlw	high __Lsmallconst
   427  002094  6EF7               	movwf	tblptrh,c
   428  002096  0100               	movlb	0
   429  002098  EFC9  F00C         	goto	_main	;jump to C main() function
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           postdec1	equ	0xFE5
   436                           fsr1l	equ	0xFE1
   437                           
   438                           	psect	bssCOMRAM
   439  00004D                     __pbssCOMRAM:
   440                           	opt stack 0
   441  00004D                     _tickCount:
   442                           	opt stack 0
   443  00004D                     	ds	4
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           postinc0	equ	0xFEE
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	dataBANK1
   453  000100                     __pdataBANK1:
   454                           	opt stack 0
   455  000100                     _frequencyList:
   456                           	opt stack 0
   457  000100                     	ds	198
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           postdec1	equ	0xFE5
   464                           fsr1l	equ	0xFE1
   465                           
   466                           	psect	cstackBANK0
   467  000060                     __pcstackBANK0:
   468                           	opt stack 0
   469  000060                     displayOutOfTune@a:
   470                           	opt stack 0
   471                           
   472                           ; 3 bytes @ 0x0
   473  000060                     	ds	3
   474  000063                     displayOutOfTune@b:
   475                           	opt stack 0
   476                           
   477                           ; 3 bytes @ 0x3
   478  000063                     	ds	3
   479  000066                     displayOutOfTune@midpoint:
   480                           	opt stack 0
   481                           
   482                           ; 3 bytes @ 0x6
   483  000066                     	ds	3
   484  000069                     displayOutOfTune@c:
   485                           	opt stack 0
   486                           
   487                           ; 3 bytes @ 0x9
   488  000069                     	ds	3
   489  00006C                     main@firstDisplay:
   490                           	opt stack 0
   491                           
   492                           ; 8 bytes @ 0xC
   493  00006C                     	ds	8
   494  000074                     main@secondDisplay:
   495                           	opt stack 0
   496                           
   497                           ; 8 bytes @ 0x14
   498  000074                     	ds	8
   499  00007C                     main@noOfDisplays:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x1C
   503  00007C                     	ds	2
   504  00007E                     main@closestNote:
   505                           	opt stack 0
   506                           
   507                           ; 3 bytes @ 0x1E
   508  00007E                     	ds	3
   509  000081                     main@targetFreqSharp:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x21
   513  000081                     	ds	2
   514  000083                     main@targetFreqFlat:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x23
   518  000083                     	ds	2
   519  000085                     main@frequency:
   520                           	opt stack 0
   521                           
   522                           ; 3 bytes @ 0x25
   523  000085                     	ds	3
   524                           tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           postinc0	equ	0xFEE
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	cstackCOMRAM
   533  000001                     __pcstackCOMRAM:
   534                           	opt stack 0
   535  000001                     ??_tc_int:
   536  000001                     
   537                           ; 0 bytes @ 0x0
   538  000001                     	ds	14
   539  00000F                     ?___wmul:
   540                           	opt stack 0
   541  00000F                     ?___ftpack:
   542                           	opt stack 0
   543  00000F                     ?_getTimeMicroSec:
   544                           	opt stack 0
   545  00000F                     ?___lmul:
   546                           	opt stack 0
   547  00000F                     sendData@data:
   548                           	opt stack 0
   549  00000F                     storeImageD1@image:
   550                           	opt stack 0
   551  00000F                     storeImageD2@image:
   552                           	opt stack 0
   553  00000F                     ___wmul@multiplier:
   554                           	opt stack 0
   555  00000F                     ___ftpack@arg:
   556                           	opt stack 0
   557  00000F                     ___lmul@multiplier:
   558                           	opt stack 0
   559                           
   560                           ; 4 bytes @ 0xE
   561  00000F                     	ds	1
   562  000010                     sendData@i:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0xF
   566  000010                     	ds	1
   567  000011                     storeImageD1@firstDisplay:
   568                           	opt stack 0
   569  000011                     storeImageD2@secondDisplay:
   570                           	opt stack 0
   571  000011                     ___wmul@multiplicand:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x10
   575  000011                     	ds	1
   576  000012                     max7219_write@leastSignificantByte:
   577                           	opt stack 0
   578  000012                     ___ftpack@exp:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x11
   582  000012                     	ds	1
   583  000013                     ??_storeImageD1:
   584  000013                     ??_storeImageD2:
   585  000013                     ??_getTimeMicroSec:
   586  000013                     max7219_write@mostSignificantByte:
   587                           	opt stack 0
   588  000013                     ___ftpack@sign:
   589                           	opt stack 0
   590  000013                     ___wmul@product:
   591                           	opt stack 0
   592  000013                     ___lmul@multiplicand:
   593                           	opt stack 0
   594                           
   595                           ; 4 bytes @ 0x12
   596  000013                     	ds	1
   597  000014                     ??___ftpack:
   598  000014                     update_Displays@firstDisplay:
   599                           	opt stack 0
   600  000014                     max7219_init@noOfDisplays:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x13
   604  000014                     	ds	1
   605  000015                     ?___ftneg:
   606                           	opt stack 0
   607  000015                     storeImageD1@i:
   608                           	opt stack 0
   609  000015                     storeImageD2@i:
   610                           	opt stack 0
   611  000015                     ___ftge@ff1:
   612                           	opt stack 0
   613  000015                     ___ftneg@f1:
   614                           	opt stack 0
   615                           
   616                           ; 3 bytes @ 0x14
   617  000015                     	ds	1
   618  000016                     ??_max7219_init:
   619  000016                     update_Displays@secondDisplay:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x15
   623  000016                     	ds	1
   624  000017                     max7219_init@i:
   625                           	opt stack 0
   626  000017                     getTimeMicroSec@temp:
   627                           	opt stack 0
   628  000017                     ___lmul@product:
   629                           	opt stack 0
   630                           
   631                           ; 4 bytes @ 0x16
   632  000017                     	ds	1
   633  000018                     ?___ftadd:
   634                           	opt stack 0
   635  000018                     update_Displays@i:
   636                           	opt stack 0
   637  000018                     ___ftadd@f1:
   638                           	opt stack 0
   639  000018                     ___ftge@ff2:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x17
   643  000018                     	ds	1
   644  000019                     max7219_init@i_314:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x18
   648  000019                     	ds	2
   649  00001B                     ??___ftge:
   650  00001B                     ?___lldiv:
   651                           	opt stack 0
   652  00001B                     max7219_init@i_315:
   653                           	opt stack 0
   654  00001B                     ___ftadd@f2:
   655                           	opt stack 0
   656  00001B                     ___lldiv@dividend:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0x1A
   660  00001B                     	ds	2
   661  00001D                     max7219_init@i_316:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x1C
   665  00001D                     	ds	1
   666  00001E                     ??___ftadd:
   667  00001E                     findTargetFreqs@frequency:
   668                           	opt stack 0
   669                           
   670                           ; 3 bytes @ 0x1D
   671  00001E                     	ds	1
   672  00001F                     max7219_init@i_317:
   673                           	opt stack 0
   674  00001F                     ___lldiv@divisor:
   675                           	opt stack 0
   676                           
   677                           ; 4 bytes @ 0x1E
   678  00001F                     	ds	2
   679  000021                     ___ftadd@sign:
   680                           	opt stack 0
   681  000021                     max7219_init@i_318:
   682                           	opt stack 0
   683  000021                     findTargetFreqs@firstDisplay:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x20
   687  000021                     	ds	1
   688  000022                     ___ftadd@exp2:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x21
   692  000022                     	ds	1
   693  000023                     ___ftadd@exp1:
   694                           	opt stack 0
   695  000023                     findTargetFreqs@secondDisplay:
   696                           	opt stack 0
   697  000023                     ___lldiv@quotient:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0x22
   701  000023                     	ds	1
   702  000024                     ?___ftdiv:
   703                           	opt stack 0
   704  000024                     ___ftdiv@f1:
   705                           	opt stack 0
   706                           
   707                           ; 3 bytes @ 0x23
   708  000024                     	ds	1
   709  000025                     findTargetFreqs@targetFreqSharp:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x24
   713  000025                     	ds	2
   714  000027                     ___lldiv@counter:
   715                           	opt stack 0
   716  000027                     findTargetFreqs@targetFreqFlat:
   717                           	opt stack 0
   718  000027                     ___ftdiv@f2:
   719                           	opt stack 0
   720                           
   721                           ; 3 bytes @ 0x26
   722  000027                     	ds	1
   723  000028                     ?___lltoft:
   724                           	opt stack 0
   725  000028                     ___lltoft@c:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x27
   729  000028                     	ds	1
   730  000029                     ??_findTargetFreqs:
   731                           
   732                           ; 0 bytes @ 0x28
   733  000029                     	ds	1
   734  00002A                     ??___ftdiv:
   735                           
   736                           ; 0 bytes @ 0x29
   737  00002A                     	ds	2
   738  00002C                     ??___lltoft:
   739  00002C                     findTargetFreqs@found:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x2B
   743  00002C                     	ds	1
   744  00002D                     ___ftdiv@cntr:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x2C
   748  00002D                     	ds	1
   749  00002E                     findTargetFreqs@count:
   750                           	opt stack 0
   751  00002E                     ___ftdiv@f3:
   752                           	opt stack 0
   753                           
   754                           ; 3 bytes @ 0x2D
   755  00002E                     	ds	2
   756  000030                     ___lltoft@exp:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x2F
   760  000030                     	ds	1
   761  000031                     ___ftdiv@exp:
   762                           	opt stack 0
   763  000031                     detectFrequency@frequency:
   764                           	opt stack 0
   765                           
   766                           ; 3 bytes @ 0x30
   767  000031                     	ds	1
   768  000032                     ___ftdiv@sign:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x31
   772  000032                     	ds	1
   773  000033                     ?___ftmul:
   774                           	opt stack 0
   775  000033                     displayClosestNote@closestNote:
   776                           	opt stack 0
   777  000033                     ___ftmul@f1:
   778                           	opt stack 0
   779                           
   780                           ; 3 bytes @ 0x32
   781  000033                     	ds	1
   782  000034                     ??_detectFrequency:
   783                           
   784                           ; 0 bytes @ 0x33
   785  000034                     	ds	2
   786  000036                     displayClosestNote@firstDisplay:
   787                           	opt stack 0
   788  000036                     ___ftmul@f2:
   789                           	opt stack 0
   790                           
   791                           ; 3 bytes @ 0x35
   792  000036                     	ds	2
   793  000038                     displayClosestNote@secondDisplay:
   794                           	opt stack 0
   795  000038                     detectFrequency@startTimeMicroSec:
   796                           	opt stack 0
   797                           
   798                           ; 4 bytes @ 0x37
   799  000038                     	ds	1
   800  000039                     ??___ftmul:
   801                           
   802                           ; 0 bytes @ 0x38
   803  000039                     	ds	1
   804  00003A                     
   805                           ; 0 bytes @ 0x39
   806  00003A                     	ds	2
   807  00003C                     ___ftmul@exp:
   808                           	opt stack 0
   809  00003C                     detectFrequency@finishTimeMicroSec:
   810                           	opt stack 0
   811                           
   812                           ; 4 bytes @ 0x3B
   813  00003C                     	ds	1
   814  00003D                     ___ftmul@f3_as_product:
   815                           	opt stack 0
   816                           
   817                           ; 3 bytes @ 0x3C
   818  00003D                     	ds	3
   819  000040                     detectFrequency@x:
   820                           	opt stack 0
   821  000040                     ___ftmul@cntr:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x3F
   825  000040                     	ds	1
   826  000041                     detectFrequency@n:
   827                           	opt stack 0
   828  000041                     ___ftmul@sign:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x40
   832  000041                     	ds	1
   833  000042                     displayOutOfTune@frequency:
   834                           	opt stack 0
   835                           
   836                           ; 3 bytes @ 0x41
   837  000042                     	ds	3
   838  000045                     displayOutOfTune@closestNote:
   839                           	opt stack 0
   840                           
   841                           ; 3 bytes @ 0x44
   842  000045                     	ds	3
   843  000048                     displayOutOfTune@targetFreqSharp:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x47
   847  000048                     	ds	2
   848  00004A                     displayOutOfTune@targetFreqFlat:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x49
   852  00004A                     	ds	2
   853  00004C                     ??_main:
   854                           
   855                           ; 0 bytes @ 0x4B
   856  00004C                     	ds	1
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           postinc0	equ	0xFEE
   862                           postdec1	equ	0xFE5
   863                           fsr1l	equ	0xFE1
   864                           
   865 ;;
   866 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   867 ;;
   868 ;; *************** function _main *****************
   869 ;; Defined at:
   870 ;;		line 579 in file "yesgoodfinalprojectpleasework.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  secondDispla    8   20[BANK0 ] unsigned char [8]
   875 ;;  firstDisplay    8   12[BANK0 ] unsigned char [8]
   876 ;;  frequency       3   37[BANK0 ] float 
   877 ;;  closestNote     3   30[BANK0 ] float 
   878 ;;  targetFreqFl    2   35[BANK0 ] int 
   879 ;;  targetFreqSh    2   33[BANK0 ] int 
   880 ;;  noOfDisplays    2   28[BANK0 ] int 
   881 ;; Return value:  Size  Location     Type
   882 ;;		None               void
   883 ;; Registers used:
   884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   890 ;;      Params:         0       0       0       0       0       0       0       0       0
   891 ;;      Locals:         0      28       0       0       0       0       0       0       0
   892 ;;      Temps:          1       0       0       0       0       0       0       0       0
   893 ;;      Totals:         1      28       0       0       0       0       0       0       0
   894 ;;Total ram usage:       29 bytes
   895 ;; Hardware stack levels required when called:    5
   896 ;; This function calls:
   897 ;;		_detectFrequency
   898 ;;		_displayClosestNote
   899 ;;		_displayOutOfTune
   900 ;;		_findTargetFreqs
   901 ;;		_init_PIC18F2550
   902 ;;		_max7219_init
   903 ;; This function is called by:
   904 ;;		Startup code after reset
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text0
   909  001992                     __ptext0:
   910                           	opt stack 0
   911  001992                     _main:
   912                           	opt stack 26
   913                           
   914                           ;yesgoodfinalprojectpleasework.c: 580: _delay((unsigned long)((100)*(4000000/4000.0)));
   915                           
   916                           ;incstack = 0
   917  001992  0E82               	movlw	130
   918  001994  6E4C               	movwf	??_main& (0+255),c
   919  001996  0EDE               	movlw	222
   920  001998                     u2137:
   921  001998  2EE8               	decfsz	wreg,f,c
   922  00199A  D7FE               	goto	u2137
   923  00199C  2E4C               	decfsz	??_main& (0+255),f,c
   924  00199E  D7FC               	goto	u2137
   925                           
   926                           ;yesgoodfinalprojectpleasework.c: 582: init_PIC18F2550();
   927  0019A0  EC73  F010         	call	_init_PIC18F2550	;wreg free
   928                           
   929                           ;yesgoodfinalprojectpleasework.c: 583: int noOfDisplays = 2;
   930  0019A4  0E00               	movlw	0
   931  0019A6  0100               	movlb	0	; () banked
   932  0019A8  6F7D               	movwf	(main@noOfDisplays+1)& (0+255),b
   933  0019AA  0E02               	movlw	2
   934  0019AC  6F7C               	movwf	main@noOfDisplays& (0+255),b
   935                           
   936                           ; BSR set to: 0
   937                           ;yesgoodfinalprojectpleasework.c: 584: unsigned char firstDisplay[8];
   938                           ;yesgoodfinalprojectpleasework.c: 585: unsigned char secondDisplay[8];
   939                           ;yesgoodfinalprojectpleasework.c: 586: int targetFreqSharp = 0;
   940  0019AE  0E00               	movlw	0
   941  0019B0  0100               	movlb	0	; () banked
   942  0019B2  6F82               	movwf	(main@targetFreqSharp+1)& (0+255),b
   943  0019B4  0E00               	movlw	0
   944  0019B6  6F81               	movwf	main@targetFreqSharp& (0+255),b
   945                           
   946                           ; BSR set to: 0
   947                           ;yesgoodfinalprojectpleasework.c: 587: int targetFreqFlat = 0;
   948  0019B8  0E00               	movlw	0
   949  0019BA  0100               	movlb	0	; () banked
   950  0019BC  6F84               	movwf	(main@targetFreqFlat+1)& (0+255),b
   951  0019BE  0E00               	movlw	0
   952  0019C0  6F83               	movwf	main@targetFreqFlat& (0+255),b
   953                           
   954                           ; BSR set to: 0
   955                           ;yesgoodfinalprojectpleasework.c: 588: max7219_init(noOfDisplays);
   956  0019C2  C07C  F014         	movff	main@noOfDisplays,max7219_init@noOfDisplays
   957  0019C6  C07D  F015         	movff	main@noOfDisplays+1,max7219_init@noOfDisplays+1
   958  0019CA  EC39  F00B         	call	_max7219_init	;wreg free
   959                           
   960                           ;yesgoodfinalprojectpleasework.c: 590: float closestNote;
   961                           ;yesgoodfinalprojectpleasework.c: 591: float frequency = 0;
   962  0019CE  0E00               	movlw	0
   963  0019D0  0100               	movlb	0	; () banked
   964  0019D2  6F85               	movwf	main@frequency& (0+255),b
   965  0019D4  0E00               	movlw	0
   966  0019D6  0100               	movlb	0	; () banked
   967  0019D8  6F86               	movwf	(main@frequency+1)& (0+255),b
   968  0019DA  0E00               	movlw	0
   969  0019DC  0100               	movlb	0	; () banked
   970  0019DE  6F87               	movwf	(main@frequency+2)& (0+255),b
   971                           
   972                           ; BSR set to: 0
   973                           ;yesgoodfinalprojectpleasework.c: 592: (INTCONbits.GIE = 1);
   974  0019E0  8EF2               	bsf	intcon,7,c	;volatile
   975  0019E2                     l2079:
   976                           
   977                           ;yesgoodfinalprojectpleasework.c: 595: detectFrequency(5, frequency);
   978  0019E2  C085  F031         	movff	main@frequency,detectFrequency@frequency
   979  0019E6  C086  F032         	movff	main@frequency+1,detectFrequency@frequency+1
   980  0019EA  C087  F033         	movff	main@frequency+2,detectFrequency@frequency+2
   981  0019EE  0E05               	movlw	5
   982  0019F0  EC39  F00D         	call	_detectFrequency
   983                           
   984                           ;yesgoodfinalprojectpleasework.c: 597: findTargetFreqs(frequency, firstDisplay, secondDi
      +                          splay, targetFreqSharp, targetFreqFlat);
   985  0019F4  C085  F01E         	movff	main@frequency,findTargetFreqs@frequency
   986  0019F8  C086  F01F         	movff	main@frequency+1,findTargetFreqs@frequency+1
   987  0019FC  C087  F020         	movff	main@frequency+2,findTargetFreqs@frequency+2
   988  001A00  0E6C               	movlw	low main@firstDisplay
   989  001A02  6E21               	movwf	findTargetFreqs@firstDisplay,c
   990  001A04  0E00               	movlw	high main@firstDisplay
   991  001A06  6E22               	movwf	findTargetFreqs@firstDisplay+1,c
   992  001A08  0E74               	movlw	low main@secondDisplay
   993  001A0A  6E23               	movwf	findTargetFreqs@secondDisplay,c
   994  001A0C  0E00               	movlw	high main@secondDisplay
   995  001A0E  6E24               	movwf	findTargetFreqs@secondDisplay+1,c
   996  001A10  C081  F025         	movff	main@targetFreqSharp,findTargetFreqs@targetFreqSharp
   997  001A14  C082  F026         	movff	main@targetFreqSharp+1,findTargetFreqs@targetFreqSharp+1
   998  001A18  C083  F027         	movff	main@targetFreqFlat,findTargetFreqs@targetFreqFlat
   999  001A1C  C084  F028         	movff	main@targetFreqFlat+1,findTargetFreqs@targetFreqFlat+1
  1000  001A20  EC00  F009         	call	_findTargetFreqs	;wreg free
  1001                           
  1002                           ;yesgoodfinalprojectpleasework.c: 598: displayOutOfTune(frequency, closestNote, targetFr
      +                          eqSharp, targetFreqFlat);
  1003  001A24  C085  F042         	movff	main@frequency,displayOutOfTune@frequency
  1004  001A28  C086  F043         	movff	main@frequency+1,displayOutOfTune@frequency+1
  1005  001A2C  C087  F044         	movff	main@frequency+2,displayOutOfTune@frequency+2
  1006  001A30  C07E  F045         	movff	main@closestNote,displayOutOfTune@closestNote
  1007  001A34  C07F  F046         	movff	main@closestNote+1,displayOutOfTune@closestNote+1
  1008  001A38  C080  F047         	movff	main@closestNote+2,displayOutOfTune@closestNote+2
  1009  001A3C  C081  F048         	movff	main@targetFreqSharp,displayOutOfTune@targetFreqSharp
  1010  001A40  C082  F049         	movff	main@targetFreqSharp+1,displayOutOfTune@targetFreqSharp+1
  1011  001A44  C083  F04A         	movff	main@targetFreqFlat,displayOutOfTune@targetFreqFlat
  1012  001A48  C084  F04B         	movff	main@targetFreqFlat+1,displayOutOfTune@targetFreqFlat+1
  1013  001A4C  EC9B  F006         	call	_displayOutOfTune	;wreg free
  1014                           
  1015                           ;yesgoodfinalprojectpleasework.c: 599: displayClosestNote(closestNote, firstDisplay, sec
      +                          ondDisplay);
  1016  001A50  C07E  F033         	movff	main@closestNote,displayClosestNote@closestNote
  1017  001A54  C07F  F034         	movff	main@closestNote+1,displayClosestNote@closestNote+1
  1018  001A58  C080  F035         	movff	main@closestNote+2,displayClosestNote@closestNote+2
  1019  001A5C  0E6C               	movlw	low main@firstDisplay
  1020  001A5E  6E36               	movwf	displayClosestNote@firstDisplay,c
  1021  001A60  0E00               	movlw	high main@firstDisplay
  1022  001A62  6E37               	movwf	displayClosestNote@firstDisplay+1,c
  1023  001A64  0E74               	movlw	low main@secondDisplay
  1024  001A66  6E38               	movwf	displayClosestNote@secondDisplay,c
  1025  001A68  0E00               	movlw	high main@secondDisplay
  1026  001A6A  6E39               	movwf	displayClosestNote@secondDisplay+1,c
  1027  001A6C  EC29  F004         	call	_displayClosestNote	;wreg free
  1028  001A70  D7B8               	goto	l2079
  1029  001A72                     __end_of_main:
  1030                           	opt stack 0
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           intcon	equ	0xFF2
  1036                           postinc0	equ	0xFEE
  1037                           wreg	equ	0xFE8
  1038                           postdec1	equ	0xFE5
  1039                           fsr1l	equ	0xFE1
  1040                           
  1041 ;; *************** function _max7219_init *****************
  1042 ;; Defined at:
  1043 ;;		line 317 in file "yesgoodfinalprojectpleasework.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  noOfDisplays    2   19[COMRAM] int 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  i               2   32[COMRAM] int 
  1048 ;;  i               2   30[COMRAM] int 
  1049 ;;  i               2   28[COMRAM] int 
  1050 ;;  i               2   26[COMRAM] int 
  1051 ;;  i               2   24[COMRAM] int 
  1052 ;;  i               2   22[COMRAM] int 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;		None               void
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1062 ;;      Params:         2       0       0       0       0       0       0       0       0
  1063 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1064 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1065 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1066 ;;Total ram usage:       15 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    3
  1069 ;; This function calls:
  1070 ;;		_max7219_write
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text1
  1077  001672                     __ptext1:
  1078                           	opt stack 0
  1079  001672                     _max7219_init:
  1080                           	opt stack 27
  1081                           
  1082                           ;yesgoodfinalprojectpleasework.c: 319: PORTAbits.RA1 = 0;
  1083                           
  1084                           ;incstack = 0
  1085  001672  9280               	bcf	3968,1,c	;volatile
  1086                           
  1087                           ;yesgoodfinalprojectpleasework.c: 320: for (int i = 0; i < noOfDisplays; i++)
  1088  001674  0E00               	movlw	0
  1089  001676  6E18               	movwf	max7219_init@i+1,c
  1090  001678  0E00               	movlw	0
  1091  00167A  6E17               	movwf	max7219_init@i,c
  1092  00167C  D007               	goto	l1811
  1093  00167E                     l1807:
  1094                           
  1095                           ;yesgoodfinalprojectpleasework.c: 321: max7219_write(0x09, 0);
  1096  00167E  0E00               	movlw	0
  1097  001680  6E12               	movwf	max7219_write@leastSignificantByte,c
  1098  001682  0E09               	movlw	9
  1099  001684  EC81  F010         	call	_max7219_write
  1100  001688  4A17               	infsnz	max7219_init@i,f,c
  1101  00168A  2A18               	incf	max7219_init@i+1,f,c
  1102  00168C                     l1811:
  1103  00168C  5014               	movf	max7219_init@noOfDisplays,w,c
  1104  00168E  5C17               	subwf	max7219_init@i,w,c
  1105  001690  5018               	movf	max7219_init@i+1,w,c
  1106  001692  0A80               	xorlw	128
  1107  001694  6E16               	movwf	??_max7219_init& (0+255),c
  1108  001696  5015               	movf	max7219_init@noOfDisplays+1,w,c
  1109  001698  0A80               	xorlw	128
  1110  00169A  5816               	subwfb	??_max7219_init& (0+255),w,c
  1111  00169C  A0D8               	btfss	status,0,c
  1112  00169E  D7EF               	goto	l1807
  1113                           
  1114                           ;yesgoodfinalprojectpleasework.c: 323: PORTAbits.RA1 = 1;
  1115  0016A0  8280               	bsf	3968,1,c	;volatile
  1116                           
  1117                           ;yesgoodfinalprojectpleasework.c: 324: _delay((unsigned long)((5)*(4000000/4000000.0)));
  1118  0016A2  F000               	nop	
  1119  0016A4  D000               	nop2		;2 cycle nop
  1120  0016A6  D000               	nop2		;2 cycle nop
  1121                           
  1122                           ;yesgoodfinalprojectpleasework.c: 326: PORTAbits.RA1 = 0;
  1123  0016A8  9280               	bcf	3968,1,c	;volatile
  1124                           
  1125                           ;yesgoodfinalprojectpleasework.c: 327: for (int i = 0; i < noOfDisplays; i++)
  1126  0016AA  0E00               	movlw	0
  1127  0016AC  6E1A               	movwf	max7219_init@i_314+1,c
  1128  0016AE  0E00               	movlw	0
  1129  0016B0  6E19               	movwf	max7219_init@i_314,c
  1130  0016B2  D007               	goto	l1819
  1131  0016B4                     l1815:
  1132                           
  1133                           ;yesgoodfinalprojectpleasework.c: 328: max7219_write(0x0A, 0x0F);
  1134  0016B4  0E0F               	movlw	15
  1135  0016B6  6E12               	movwf	max7219_write@leastSignificantByte,c
  1136  0016B8  0E0A               	movlw	10
  1137  0016BA  EC81  F010         	call	_max7219_write
  1138  0016BE  4A19               	infsnz	max7219_init@i_314,f,c
  1139  0016C0  2A1A               	incf	max7219_init@i_314+1,f,c
  1140  0016C2                     l1819:
  1141  0016C2  5014               	movf	max7219_init@noOfDisplays,w,c
  1142  0016C4  5C19               	subwf	max7219_init@i_314,w,c
  1143  0016C6  501A               	movf	max7219_init@i_314+1,w,c
  1144  0016C8  0A80               	xorlw	128
  1145  0016CA  6E16               	movwf	??_max7219_init& (0+255),c
  1146  0016CC  5015               	movf	max7219_init@noOfDisplays+1,w,c
  1147  0016CE  0A80               	xorlw	128
  1148  0016D0  5816               	subwfb	??_max7219_init& (0+255),w,c
  1149  0016D2  A0D8               	btfss	status,0,c
  1150  0016D4  D7EF               	goto	l1815
  1151                           
  1152                           ;yesgoodfinalprojectpleasework.c: 330: PORTAbits.RA1 = 1;
  1153  0016D6  8280               	bsf	3968,1,c	;volatile
  1154                           
  1155                           ;yesgoodfinalprojectpleasework.c: 331: _delay((unsigned long)((5)*(4000000/4000000.0)));
  1156  0016D8  F000               	nop	
  1157  0016DA  D000               	nop2		;2 cycle nop
  1158  0016DC  D000               	nop2		;2 cycle nop
  1159                           
  1160                           ;yesgoodfinalprojectpleasework.c: 333: PORTAbits.RA1 = 0;
  1161  0016DE  9280               	bcf	3968,1,c	;volatile
  1162                           
  1163                           ;yesgoodfinalprojectpleasework.c: 334: for (int i = 0; i < noOfDisplays; i++)
  1164  0016E0  0E00               	movlw	0
  1165  0016E2  6E1C               	movwf	max7219_init@i_315+1,c
  1166  0016E4  0E00               	movlw	0
  1167  0016E6  6E1B               	movwf	max7219_init@i_315,c
  1168  0016E8  D007               	goto	l1827
  1169  0016EA                     l1823:
  1170                           
  1171                           ;yesgoodfinalprojectpleasework.c: 335: max7219_write(0x0B, 7);
  1172  0016EA  0E07               	movlw	7
  1173  0016EC  6E12               	movwf	max7219_write@leastSignificantByte,c
  1174  0016EE  0E0B               	movlw	11
  1175  0016F0  EC81  F010         	call	_max7219_write
  1176  0016F4  4A1B               	infsnz	max7219_init@i_315,f,c
  1177  0016F6  2A1C               	incf	max7219_init@i_315+1,f,c
  1178  0016F8                     l1827:
  1179  0016F8  5014               	movf	max7219_init@noOfDisplays,w,c
  1180  0016FA  5C1B               	subwf	max7219_init@i_315,w,c
  1181  0016FC  501C               	movf	max7219_init@i_315+1,w,c
  1182  0016FE  0A80               	xorlw	128
  1183  001700  6E16               	movwf	??_max7219_init& (0+255),c
  1184  001702  5015               	movf	max7219_init@noOfDisplays+1,w,c
  1185  001704  0A80               	xorlw	128
  1186  001706  5816               	subwfb	??_max7219_init& (0+255),w,c
  1187  001708  A0D8               	btfss	status,0,c
  1188  00170A  D7EF               	goto	l1823
  1189                           
  1190                           ;yesgoodfinalprojectpleasework.c: 337: PORTAbits.RA1 = 1;
  1191  00170C  8280               	bsf	3968,1,c	;volatile
  1192                           
  1193                           ;yesgoodfinalprojectpleasework.c: 338: _delay((unsigned long)((5)*(4000000/4000000.0)));
  1194  00170E  F000               	nop	
  1195  001710  D000               	nop2		;2 cycle nop
  1196  001712  D000               	nop2		;2 cycle nop
  1197                           
  1198                           ;yesgoodfinalprojectpleasework.c: 340: PORTAbits.RA1 = 0;
  1199  001714  9280               	bcf	3968,1,c	;volatile
  1200                           
  1201                           ;yesgoodfinalprojectpleasework.c: 341: for (int i = 0; i < noOfDisplays; i++)
  1202  001716  0E00               	movlw	0
  1203  001718  6E1E               	movwf	max7219_init@i_316+1,c
  1204  00171A  0E00               	movlw	0
  1205  00171C  6E1D               	movwf	max7219_init@i_316,c
  1206  00171E  D007               	goto	l1835
  1207  001720                     l1831:
  1208                           
  1209                           ;yesgoodfinalprojectpleasework.c: 342: max7219_write(0x0C, 1);
  1210  001720  0E01               	movlw	1
  1211  001722  6E12               	movwf	max7219_write@leastSignificantByte,c
  1212  001724  0E0C               	movlw	12
  1213  001726  EC81  F010         	call	_max7219_write
  1214  00172A  4A1D               	infsnz	max7219_init@i_316,f,c
  1215  00172C  2A1E               	incf	max7219_init@i_316+1,f,c
  1216  00172E                     l1835:
  1217  00172E  5014               	movf	max7219_init@noOfDisplays,w,c
  1218  001730  5C1D               	subwf	max7219_init@i_316,w,c
  1219  001732  501E               	movf	max7219_init@i_316+1,w,c
  1220  001734  0A80               	xorlw	128
  1221  001736  6E16               	movwf	??_max7219_init& (0+255),c
  1222  001738  5015               	movf	max7219_init@noOfDisplays+1,w,c
  1223  00173A  0A80               	xorlw	128
  1224  00173C  5816               	subwfb	??_max7219_init& (0+255),w,c
  1225  00173E  A0D8               	btfss	status,0,c
  1226  001740  D7EF               	goto	l1831
  1227                           
  1228                           ;yesgoodfinalprojectpleasework.c: 344: PORTAbits.RA1 = 1;
  1229  001742  8280               	bsf	3968,1,c	;volatile
  1230                           
  1231                           ;yesgoodfinalprojectpleasework.c: 345: _delay((unsigned long)((5)*(4000000/4000000.0)));
  1232  001744  F000               	nop	
  1233  001746  D000               	nop2		;2 cycle nop
  1234  001748  D000               	nop2		;2 cycle nop
  1235                           
  1236                           ;yesgoodfinalprojectpleasework.c: 347: PORTAbits.RA1 = 0;
  1237  00174A  9280               	bcf	3968,1,c	;volatile
  1238                           
  1239                           ;yesgoodfinalprojectpleasework.c: 348: for (int i = 0; i < noOfDisplays; i++)
  1240  00174C  0E00               	movlw	0
  1241  00174E  6E20               	movwf	max7219_init@i_317+1,c
  1242  001750  0E00               	movlw	0
  1243  001752  6E1F               	movwf	max7219_init@i_317,c
  1244  001754  D007               	goto	l1843
  1245  001756                     l1839:
  1246                           
  1247                           ;yesgoodfinalprojectpleasework.c: 349: max7219_write(0x0F, 1);
  1248  001756  0E01               	movlw	1
  1249  001758  6E12               	movwf	max7219_write@leastSignificantByte,c
  1250  00175A  0E0F               	movlw	15
  1251  00175C  EC81  F010         	call	_max7219_write
  1252  001760  4A1F               	infsnz	max7219_init@i_317,f,c
  1253  001762  2A20               	incf	max7219_init@i_317+1,f,c
  1254  001764                     l1843:
  1255  001764  5014               	movf	max7219_init@noOfDisplays,w,c
  1256  001766  5C1F               	subwf	max7219_init@i_317,w,c
  1257  001768  5020               	movf	max7219_init@i_317+1,w,c
  1258  00176A  0A80               	xorlw	128
  1259  00176C  6E16               	movwf	??_max7219_init& (0+255),c
  1260  00176E  5015               	movf	max7219_init@noOfDisplays+1,w,c
  1261  001770  0A80               	xorlw	128
  1262  001772  5816               	subwfb	??_max7219_init& (0+255),w,c
  1263  001774  A0D8               	btfss	status,0,c
  1264  001776  D7EF               	goto	l1839
  1265                           
  1266                           ;yesgoodfinalprojectpleasework.c: 351: PORTAbits.RA1 = 1;
  1267  001778  8280               	bsf	3968,1,c	;volatile
  1268                           
  1269                           ;yesgoodfinalprojectpleasework.c: 352: _delay((unsigned long)((5)*(4000000/4000000.0)));
  1270  00177A  F000               	nop	
  1271  00177C  D000               	nop2		;2 cycle nop
  1272  00177E  D000               	nop2		;2 cycle nop
  1273                           
  1274                           ;yesgoodfinalprojectpleasework.c: 354: PORTAbits.RA1 = 0;
  1275  001780  9280               	bcf	3968,1,c	;volatile
  1276                           
  1277                           ;yesgoodfinalprojectpleasework.c: 355: for (int i = 0; i < noOfDisplays; i++)
  1278  001782  0E00               	movlw	0
  1279  001784  6E22               	movwf	max7219_init@i_318+1,c
  1280  001786  0E00               	movlw	0
  1281  001788  6E21               	movwf	max7219_init@i_318,c
  1282  00178A  D007               	goto	l1851
  1283  00178C                     l1847:
  1284                           
  1285                           ;yesgoodfinalprojectpleasework.c: 356: max7219_write(0x0F, 0);
  1286  00178C  0E00               	movlw	0
  1287  00178E  6E12               	movwf	max7219_write@leastSignificantByte,c
  1288  001790  0E0F               	movlw	15
  1289  001792  EC81  F010         	call	_max7219_write
  1290  001796  4A21               	infsnz	max7219_init@i_318,f,c
  1291  001798  2A22               	incf	max7219_init@i_318+1,f,c
  1292  00179A                     l1851:
  1293  00179A  5014               	movf	max7219_init@noOfDisplays,w,c
  1294  00179C  5C21               	subwf	max7219_init@i_318,w,c
  1295  00179E  5022               	movf	max7219_init@i_318+1,w,c
  1296  0017A0  0A80               	xorlw	128
  1297  0017A2  6E16               	movwf	??_max7219_init& (0+255),c
  1298  0017A4  5015               	movf	max7219_init@noOfDisplays+1,w,c
  1299  0017A6  0A80               	xorlw	128
  1300  0017A8  5816               	subwfb	??_max7219_init& (0+255),w,c
  1301  0017AA  A0D8               	btfss	status,0,c
  1302  0017AC  D7EF               	goto	l1847
  1303                           
  1304                           ;yesgoodfinalprojectpleasework.c: 359: PORTAbits.RA1 = 1;
  1305  0017AE  8280               	bsf	3968,1,c	;volatile
  1306                           
  1307                           ;yesgoodfinalprojectpleasework.c: 360: _delay((unsigned long)((5)*(4000000/4000000.0)));
  1308  0017B0  F000               	nop	
  1309  0017B2  D000               	nop2		;2 cycle nop
  1310  0017B4  D000               	nop2		;2 cycle nop
  1311  0017B6  0012               	return		;funcret
  1312  0017B8                     __end_of_max7219_init:
  1313                           	opt stack 0
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           intcon	equ	0xFF2
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           postdec1	equ	0xFE5
  1322                           fsr1l	equ	0xFE1
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _init_PIC18F2550 *****************
  1326 ;; Defined at:
  1327 ;;		line 305 in file "yesgoodfinalprojectpleasework.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;		None               void
  1334 ;; Registers used:
  1335 ;;		wreg, status,2
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    1
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text2
  1356  0020E6                     __ptext2:
  1357                           	opt stack 0
  1358  0020E6                     _init_PIC18F2550:
  1359                           	opt stack 29
  1360                           
  1361                           ;yesgoodfinalprojectpleasework.c: 306: UCONbits.USBEN = 0;
  1362                           
  1363                           ;incstack = 0
  1364  0020E6  966D               	bcf	3949,3,c	;volatile
  1365                           
  1366                           ;yesgoodfinalprojectpleasework.c: 307: UCFGbits.UTRDIS = 1;
  1367  0020E8  866F               	bsf	3951,3,c	;volatile
  1368                           
  1369                           ;yesgoodfinalprojectpleasework.c: 308: ADCON1 = 0x0F;
  1370  0020EA  0E0F               	movlw	15
  1371  0020EC  6EC1               	movwf	4033,c	;volatile
  1372                           
  1373                           ;yesgoodfinalprojectpleasework.c: 309: TRISA = 0b00010000;
  1374  0020EE  0E10               	movlw	16
  1375  0020F0  6E92               	movwf	3986,c	;volatile
  1376                           
  1377                           ;yesgoodfinalprojectpleasework.c: 310: TRISB = 0x00;
  1378  0020F2  0E00               	movlw	0
  1379  0020F4  6E93               	movwf	3987,c	;volatile
  1380                           
  1381                           ;yesgoodfinalprojectpleasework.c: 311: TRISC = 0x00;
  1382  0020F6  0E00               	movlw	0
  1383  0020F8  6E94               	movwf	3988,c	;volatile
  1384                           
  1385                           ;yesgoodfinalprojectpleasework.c: 313: T0CON = 0x88;
  1386  0020FA  0E88               	movlw	136
  1387  0020FC  6ED5               	movwf	4053,c	;volatile
  1388                           
  1389                           ;yesgoodfinalprojectpleasework.c: 314: TMR0IE = 1;
  1390  0020FE  8AF2               	bsf	intcon,5,c	;volatile
  1391  002100  0012               	return		;funcret
  1392  002102                     __end_of_init_PIC18F2550:
  1393                           	opt stack 0
  1394                           tblptru	equ	0xFF8
  1395                           tblptrh	equ	0xFF7
  1396                           tblptrl	equ	0xFF6
  1397                           tablat	equ	0xFF5
  1398                           intcon	equ	0xFF2
  1399                           postinc0	equ	0xFEE
  1400                           wreg	equ	0xFE8
  1401                           postdec1	equ	0xFE5
  1402                           fsr1l	equ	0xFE1
  1403                           status	equ	0xFD8
  1404                           
  1405 ;; *************** function _findTargetFreqs *****************
  1406 ;; Defined at:
  1407 ;;		line 382 in file "yesgoodfinalprojectpleasework.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  frequency       3   29[COMRAM] float 
  1410 ;;  firstDisplay    2   32[COMRAM] PTR unsigned char 
  1411 ;;		 -> main@firstDisplay(8), 
  1412 ;;  secondDispla    2   34[COMRAM] PTR unsigned char 
  1413 ;;		 -> main@secondDisplay(8), 
  1414 ;;  targetFreqSh    2   36[COMRAM] int 
  1415 ;;  targetFreqFl    2   38[COMRAM] int 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  count           2   45[COMRAM] int 
  1418 ;;  found           2   43[COMRAM] int 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;		None               void
  1421 ;; Registers used:
  1422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1428 ;;      Params:        11       0       0       0       0       0       0       0       0
  1429 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1430 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1431 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1432 ;;Total ram usage:       18 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    4
  1435 ;; This function calls:
  1436 ;;		___ftge
  1437 ;;		___wmul
  1438 ;;		_storeImageD1
  1439 ;;		_storeImageD2
  1440 ;;		_update_Displays
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text3
  1447  001200                     __ptext3:
  1448                           	opt stack 0
  1449  001200                     _findTargetFreqs:
  1450                           	opt stack 26
  1451                           
  1452                           ;yesgoodfinalprojectpleasework.c: 383: int found = 0;
  1453                           
  1454                           ;incstack = 0
  1455  001200  0E00               	movlw	0
  1456  001202  6E2D               	movwf	findTargetFreqs@found+1,c
  1457  001204  0E00               	movlw	0
  1458  001206  6E2C               	movwf	findTargetFreqs@found,c
  1459                           
  1460                           ;yesgoodfinalprojectpleasework.c: 384: int count = 0;
  1461  001208  0E00               	movlw	0
  1462  00120A  6E2F               	movwf	findTargetFreqs@count+1,c
  1463  00120C  0E00               	movlw	0
  1464  00120E  6E2E               	movwf	findTargetFreqs@count,c
  1465                           
  1466                           ;yesgoodfinalprojectpleasework.c: 385: while (found != 1) {
  1467  001210  D155               	goto	l1911
  1468  001212                     l1855:
  1469                           
  1470                           ;yesgoodfinalprojectpleasework.c: 386: if (frequency > frequencyList[65]) {
  1471  001212  C1C3  F015         	movff	_frequencyList+195,___ftge@ff1
  1472  001216  C1C4  F016         	movff	_frequencyList+196,___ftge@ff1+1
  1473  00121A  C1C5  F017         	movff	_frequencyList+197,___ftge@ff1+2
  1474  00121E  C01E  F018         	movff	findTargetFreqs@frequency,___ftge@ff2
  1475  001222  C01F  F019         	movff	findTargetFreqs@frequency+1,___ftge@ff2+1
  1476  001226  C020  F01A         	movff	findTargetFreqs@frequency+2,___ftge@ff2+2
  1477  00122A  EC5F  F00E         	call	___ftge	;wreg free
  1478  00122E  B0D8               	btfsc	status,0,c
  1479  001230  D01F               	goto	l1863
  1480                           
  1481                           ;yesgoodfinalprojectpleasework.c: 387: storeImageD1(noteSharp, firstDisplay);
  1482  001232  0E49               	movlw	low _noteSharp
  1483  001234  6E0F               	movwf	storeImageD1@image,c
  1484  001236  0E08               	movlw	high _noteSharp
  1485  001238  6E10               	movwf	storeImageD1@image+1,c
  1486  00123A  C021  F011         	movff	findTargetFreqs@firstDisplay,storeImageD1@firstDisplay
  1487  00123E  C022  F012         	movff	findTargetFreqs@firstDisplay+1,storeImageD1@firstDisplay+1
  1488  001242  EC10  F010         	call	_storeImageD1	;wreg free
  1489                           
  1490                           ;yesgoodfinalprojectpleasework.c: 388: storeImageD2(noteSharp, secondDisplay);
  1491  001246  0E49               	movlw	low _noteSharp
  1492  001248  6E0F               	movwf	storeImageD2@image,c
  1493  00124A  0E08               	movlw	high _noteSharp
  1494  00124C  6E10               	movwf	storeImageD2@image+1,c
  1495  00124E  C023  F011         	movff	findTargetFreqs@secondDisplay,storeImageD2@secondDisplay
  1496  001252  C024  F012         	movff	findTargetFreqs@secondDisplay+1,storeImageD2@secondDisplay+1
  1497  001256  ECEF  F00F         	call	_storeImageD2	;wreg free
  1498                           
  1499                           ;yesgoodfinalprojectpleasework.c: 389: update_Displays(firstDisplay, secondDisplay);
  1500  00125A  C021  F014         	movff	findTargetFreqs@firstDisplay,update_Displays@firstDisplay
  1501  00125E  C022  F015         	movff	findTargetFreqs@firstDisplay+1,update_Displays@firstDisplay+1
  1502  001262  C023  F016         	movff	findTargetFreqs@secondDisplay,update_Displays@secondDisplay
  1503  001266  C024  F017         	movff	findTargetFreqs@secondDisplay+1,update_Displays@secondDisplay+1
  1504  00126A  EC82  F00F         	call	_update_Displays	;wreg free
  1505                           
  1506                           ;yesgoodfinalprojectpleasework.c: 390: break;
  1507  00126E  0012               	return	
  1508  001270                     l1863:
  1509  001270  C01E  F015         	movff	findTargetFreqs@frequency,___ftge@ff1
  1510  001274  C01F  F016         	movff	findTargetFreqs@frequency+1,___ftge@ff1+1
  1511  001278  C020  F017         	movff	findTargetFreqs@frequency+2,___ftge@ff1+2
  1512  00127C  C100  F018         	movff	_frequencyList,___ftge@ff2
  1513  001280  C101  F019         	movff	_frequencyList+1,___ftge@ff2+1
  1514  001284  C102  F01A         	movff	_frequencyList+2,___ftge@ff2+2
  1515  001288  EC5F  F00E         	call	___ftge	;wreg free
  1516  00128C  B0D8               	btfsc	status,0,c
  1517  00128E  D01F               	goto	l1871
  1518                           
  1519                           ;yesgoodfinalprojectpleasework.c: 392: storeImageD1(noteFlat, firstDisplay);
  1520  001290  0E39               	movlw	low _noteFlat
  1521  001292  6E0F               	movwf	storeImageD1@image,c
  1522  001294  0E08               	movlw	high _noteFlat
  1523  001296  6E10               	movwf	storeImageD1@image+1,c
  1524  001298  C021  F011         	movff	findTargetFreqs@firstDisplay,storeImageD1@firstDisplay
  1525  00129C  C022  F012         	movff	findTargetFreqs@firstDisplay+1,storeImageD1@firstDisplay+1
  1526  0012A0  EC10  F010         	call	_storeImageD1	;wreg free
  1527                           
  1528                           ;yesgoodfinalprojectpleasework.c: 393: storeImageD2(noteFlat, secondDisplay);
  1529  0012A4  0E39               	movlw	low _noteFlat
  1530  0012A6  6E0F               	movwf	storeImageD2@image,c
  1531  0012A8  0E08               	movlw	high _noteFlat
  1532  0012AA  6E10               	movwf	storeImageD2@image+1,c
  1533  0012AC  C023  F011         	movff	findTargetFreqs@secondDisplay,storeImageD2@secondDisplay
  1534  0012B0  C024  F012         	movff	findTargetFreqs@secondDisplay+1,storeImageD2@secondDisplay+1
  1535  0012B4  ECEF  F00F         	call	_storeImageD2	;wreg free
  1536                           
  1537                           ;yesgoodfinalprojectpleasework.c: 394: update_Displays(firstDisplay, secondDisplay);
  1538  0012B8  C021  F014         	movff	findTargetFreqs@firstDisplay,update_Displays@firstDisplay
  1539  0012BC  C022  F015         	movff	findTargetFreqs@firstDisplay+1,update_Displays@firstDisplay+1
  1540  0012C0  C023  F016         	movff	findTargetFreqs@secondDisplay,update_Displays@secondDisplay
  1541  0012C4  C024  F017         	movff	findTargetFreqs@secondDisplay+1,update_Displays@secondDisplay+1
  1542  0012C8  EC82  F00F         	call	_update_Displays	;wreg free
  1543                           
  1544                           ;yesgoodfinalprojectpleasework.c: 395: break;
  1545  0012CC  0012               	return	
  1546  0012CE                     l1871:
  1547                           
  1548                           ;yesgoodfinalprojectpleasework.c: 398: if ((count + 1) <= 65) {
  1549  0012CE  0E01               	movlw	1
  1550  0012D0  242E               	addwf	findTargetFreqs@count,w,c
  1551  0012D2  6E29               	movwf	??_findTargetFreqs& (0+255),c
  1552  0012D4  0E00               	movlw	0
  1553  0012D6  202F               	addwfc	findTargetFreqs@count+1,w,c
  1554  0012D8  6E2A               	movwf	(??_findTargetFreqs+1)& (0+255),c
  1555  0012DA  BE2A               	btfsc	??_findTargetFreqs+1,7,c
  1556  0012DC  D006               	goto	l1873
  1557  0012DE  502A               	movf	??_findTargetFreqs+1,w,c
  1558  0012E0  E16D               	bnz	l1891
  1559  0012E2  0E42               	movlw	66
  1560  0012E4  5C29               	subwf	??_findTargetFreqs,w,c
  1561  0012E6  B0D8               	btfsc	status,0,c
  1562  0012E8  D069               	goto	l1891
  1563  0012EA                     l1873:
  1564                           
  1565                           ;yesgoodfinalprojectpleasework.c: 400: if (frequencyList[count] == frequency) {
  1566  0012EA  C02E  F00F         	movff	findTargetFreqs@count,___wmul@multiplier
  1567  0012EE  C02F  F010         	movff	findTargetFreqs@count+1,___wmul@multiplier+1
  1568  0012F2  0E00               	movlw	0
  1569  0012F4  6E12               	movwf	___wmul@multiplicand+1,c
  1570  0012F6  0E03               	movlw	3
  1571  0012F8  6E11               	movwf	___wmul@multiplicand,c
  1572  0012FA  EC4E  F010         	call	___wmul	;wreg free
  1573  0012FE  0E00               	movlw	low _frequencyList
  1574  001300  240F               	addwf	?___wmul,w,c
  1575  001302  6ED9               	movwf	fsr2l,c
  1576  001304  0E01               	movlw	high _frequencyList
  1577  001306  2010               	addwfc	?___wmul+1,w,c
  1578  001308  6EDA               	movwf	fsr2h,c
  1579  00130A  501E               	movf	findTargetFreqs@frequency,w,c
  1580  00130C  18DE               	xorwf	postinc2,w,c
  1581  00130E  E10D               	bnz	l1879
  1582  001310  501F               	movf	findTargetFreqs@frequency+1,w,c
  1583  001312  18DE               	xorwf	postinc2,w,c
  1584  001314  E10A               	bnz	l1879
  1585  001316  5020               	movf	findTargetFreqs@frequency+2,w,c
  1586  001318  18DE               	xorwf	postinc2,w,c
  1587  00131A  A4D8               	btfss	status,2,c
  1588  00131C  D006               	goto	l1879
  1589  00131E  D076               	goto	l1895
  1590  001320                     l1877:
  1591                           
  1592                           ;yesgoodfinalprojectpleasework.c: 403: found = 1;
  1593  001320  0E00               	movlw	0
  1594  001322  6E2D               	movwf	findTargetFreqs@found+1,c
  1595  001324  0E01               	movlw	1
  1596  001326  6E2C               	movwf	findTargetFreqs@found,c
  1597                           
  1598                           ;yesgoodfinalprojectpleasework.c: 404: } else if ((frequency > frequencyList[count]) && 
      +                          (frequency < frequencyList[count + 1])) {
  1599  001328  D0C7               	goto	l1909
  1600  00132A                     l1879:
  1601  00132A  C02E  F00F         	movff	findTargetFreqs@count,___wmul@multiplier
  1602  00132E  C02F  F010         	movff	findTargetFreqs@count+1,___wmul@multiplier+1
  1603  001332  0E00               	movlw	0
  1604  001334  6E12               	movwf	___wmul@multiplicand+1,c
  1605  001336  0E03               	movlw	3
  1606  001338  6E11               	movwf	___wmul@multiplicand,c
  1607  00133A  EC4E  F010         	call	___wmul	;wreg free
  1608  00133E  0E00               	movlw	low _frequencyList
  1609  001340  240F               	addwf	?___wmul,w,c
  1610  001342  6ED9               	movwf	fsr2l,c
  1611  001344  0E01               	movlw	high _frequencyList
  1612  001346  2010               	addwfc	?___wmul+1,w,c
  1613  001348  6EDA               	movwf	fsr2h,c
  1614  00134A  CFDE F015          	movff	postinc2,___ftge@ff1
  1615  00134E  CFDE F016          	movff	postinc2,___ftge@ff1+1
  1616  001352  CFDD F017          	movff	postdec2,___ftge@ff1+2
  1617  001356  C01E  F018         	movff	findTargetFreqs@frequency,___ftge@ff2
  1618  00135A  C01F  F019         	movff	findTargetFreqs@frequency+1,___ftge@ff2+1
  1619  00135E  C020  F01A         	movff	findTargetFreqs@frequency+2,___ftge@ff2+2
  1620  001362  EC5F  F00E         	call	___ftge	;wreg free
  1621  001366  B0D8               	btfsc	status,0,c
  1622  001368  D0A7               	goto	l1909
  1623  00136A  C01E  F015         	movff	findTargetFreqs@frequency,___ftge@ff1
  1624  00136E  C01F  F016         	movff	findTargetFreqs@frequency+1,___ftge@ff1+1
  1625  001372  C020  F017         	movff	findTargetFreqs@frequency+2,___ftge@ff1+2
  1626  001376  0E01               	movlw	1
  1627  001378  242E               	addwf	findTargetFreqs@count,w,c
  1628  00137A  6E0F               	movwf	___wmul@multiplier,c
  1629  00137C  0E00               	movlw	0
  1630  00137E  202F               	addwfc	findTargetFreqs@count+1,w,c
  1631  001380  6E10               	movwf	___wmul@multiplier+1,c
  1632  001382  0E00               	movlw	0
  1633  001384  6E12               	movwf	___wmul@multiplicand+1,c
  1634  001386  0E03               	movlw	3
  1635  001388  6E11               	movwf	___wmul@multiplicand,c
  1636  00138A  EC4E  F010         	call	___wmul	;wreg free
  1637  00138E  0E00               	movlw	low _frequencyList
  1638  001390  240F               	addwf	?___wmul,w,c
  1639  001392  6ED9               	movwf	fsr2l,c
  1640  001394  0E01               	movlw	high _frequencyList
  1641  001396  2010               	addwfc	?___wmul+1,w,c
  1642  001398  6EDA               	movwf	fsr2h,c
  1643  00139A  CFDE F018          	movff	postinc2,___ftge@ff2
  1644  00139E  CFDE F019          	movff	postinc2,___ftge@ff2+1
  1645  0013A2  CFDD F01A          	movff	postdec2,___ftge@ff2+2
  1646  0013A6  EC5F  F00E         	call	___ftge	;wreg free
  1647  0013AA  B0D8               	btfsc	status,0,c
  1648  0013AC  D085               	goto	l1909
  1649                           
  1650                           ;yesgoodfinalprojectpleasework.c: 405: targetFreqSharp = count + 1;
  1651  0013AE  0E01               	movlw	1
  1652  0013B0  242E               	addwf	findTargetFreqs@count,w,c
  1653  0013B2  6E25               	movwf	findTargetFreqs@targetFreqSharp,c
  1654  0013B4  0E00               	movlw	0
  1655  0013B6  202F               	addwfc	findTargetFreqs@count+1,w,c
  1656  0013B8  6E26               	movwf	findTargetFreqs@targetFreqSharp+1,c
  1657  0013BA  D02C               	goto	L1
  1658  0013BC                     l1891:
  1659  0013BC  0E01               	movlw	1
  1660  0013BE  242E               	addwf	findTargetFreqs@count,w,c
  1661  0013C0  6E29               	movwf	??_findTargetFreqs& (0+255),c
  1662  0013C2  0E00               	movlw	0
  1663  0013C4  202F               	addwfc	findTargetFreqs@count+1,w,c
  1664  0013C6  6E2A               	movwf	(??_findTargetFreqs+1)& (0+255),c
  1665  0013C8  BE2A               	btfsc	??_findTargetFreqs+1,7,c
  1666  0013CA  D078               	goto	l1911
  1667  0013CC  502A               	movf	??_findTargetFreqs+1,w,c
  1668  0013CE  E104               	bnz	u1790
  1669  0013D0  0E42               	movlw	66
  1670  0013D2  5C29               	subwf	??_findTargetFreqs,w,c
  1671  0013D4  A0D8               	btfss	status,0,c
  1672  0013D6  D072               	goto	l1911
  1673  0013D8                     u1790:
  1674                           
  1675                           ;yesgoodfinalprojectpleasework.c: 413: if (frequencyList[count] == frequency) {
  1676  0013D8  C02E  F00F         	movff	findTargetFreqs@count,___wmul@multiplier
  1677  0013DC  C02F  F010         	movff	findTargetFreqs@count+1,___wmul@multiplier+1
  1678  0013E0  0E00               	movlw	0
  1679  0013E2  6E12               	movwf	___wmul@multiplicand+1,c
  1680  0013E4  0E03               	movlw	3
  1681  0013E6  6E11               	movwf	___wmul@multiplicand,c
  1682  0013E8  EC4E  F010         	call	___wmul	;wreg free
  1683  0013EC  0E00               	movlw	low _frequencyList
  1684  0013EE  240F               	addwf	?___wmul,w,c
  1685  0013F0  6ED9               	movwf	fsr2l,c
  1686  0013F2  0E01               	movlw	high _frequencyList
  1687  0013F4  2010               	addwfc	?___wmul+1,w,c
  1688  0013F6  6EDA               	movwf	fsr2h,c
  1689  0013F8  501E               	movf	findTargetFreqs@frequency,w,c
  1690  0013FA  18DE               	xorwf	postinc2,w,c
  1691  0013FC  E110               	bnz	l1899
  1692  0013FE  501F               	movf	findTargetFreqs@frequency+1,w,c
  1693  001400  18DE               	xorwf	postinc2,w,c
  1694  001402  E10D               	bnz	l1899
  1695  001404  5020               	movf	findTargetFreqs@frequency+2,w,c
  1696  001406  18DE               	xorwf	postinc2,w,c
  1697  001408  A4D8               	btfss	status,2,c
  1698  00140A  D009               	goto	l1899
  1699  00140C                     l1895:
  1700                           
  1701                           ;yesgoodfinalprojectpleasework.c: 414: targetFreqSharp = count;
  1702  00140C  C02E  F025         	movff	findTargetFreqs@count,findTargetFreqs@targetFreqSharp
  1703  001410  C02F  F026         	movff	findTargetFreqs@count+1,findTargetFreqs@targetFreqSharp+1
  1704  001414                     L1:
  1705                           
  1706                           ;yesgoodfinalprojectpleasework.c: 415: targetFreqFlat = count;
  1707  001414  C02E  F027         	movff	findTargetFreqs@count,findTargetFreqs@targetFreqFlat
  1708  001418  C02F  F028         	movff	findTargetFreqs@count+1,findTargetFreqs@targetFreqFlat+1
  1709  00141C  D781               	goto	l1877
  1710  00141E                     l1899:
  1711  00141E  0EFF               	movlw	255
  1712  001420  242E               	addwf	findTargetFreqs@count,w,c
  1713  001422  6E0F               	movwf	___wmul@multiplier,c
  1714  001424  0EFF               	movlw	255
  1715  001426  202F               	addwfc	findTargetFreqs@count+1,w,c
  1716  001428  6E10               	movwf	___wmul@multiplier+1,c
  1717  00142A  0E00               	movlw	0
  1718  00142C  6E12               	movwf	___wmul@multiplicand+1,c
  1719  00142E  0E03               	movlw	3
  1720  001430  6E11               	movwf	___wmul@multiplicand,c
  1721  001432  EC4E  F010         	call	___wmul	;wreg free
  1722  001436  0E00               	movlw	low _frequencyList
  1723  001438  240F               	addwf	?___wmul,w,c
  1724  00143A  6ED9               	movwf	fsr2l,c
  1725  00143C  0E01               	movlw	high _frequencyList
  1726  00143E  2010               	addwfc	?___wmul+1,w,c
  1727  001440  6EDA               	movwf	fsr2h,c
  1728  001442  CFDE F015          	movff	postinc2,___ftge@ff1
  1729  001446  CFDE F016          	movff	postinc2,___ftge@ff1+1
  1730  00144A  CFDD F017          	movff	postdec2,___ftge@ff1+2
  1731  00144E  C01E  F018         	movff	findTargetFreqs@frequency,___ftge@ff2
  1732  001452  C01F  F019         	movff	findTargetFreqs@frequency+1,___ftge@ff2+1
  1733  001456  C020  F01A         	movff	findTargetFreqs@frequency+2,___ftge@ff2+2
  1734  00145A  EC5F  F00E         	call	___ftge	;wreg free
  1735  00145E  B0D8               	btfsc	status,0,c
  1736  001460  D02B               	goto	l1909
  1737  001462  C01E  F015         	movff	findTargetFreqs@frequency,___ftge@ff1
  1738  001466  C01F  F016         	movff	findTargetFreqs@frequency+1,___ftge@ff1+1
  1739  00146A  C020  F017         	movff	findTargetFreqs@frequency+2,___ftge@ff1+2
  1740  00146E  C02E  F00F         	movff	findTargetFreqs@count,___wmul@multiplier
  1741  001472  C02F  F010         	movff	findTargetFreqs@count+1,___wmul@multiplier+1
  1742  001476  0E00               	movlw	0
  1743  001478  6E12               	movwf	___wmul@multiplicand+1,c
  1744  00147A  0E03               	movlw	3
  1745  00147C  6E11               	movwf	___wmul@multiplicand,c
  1746  00147E  EC4E  F010         	call	___wmul	;wreg free
  1747  001482  0E00               	movlw	low _frequencyList
  1748  001484  240F               	addwf	?___wmul,w,c
  1749  001486  6ED9               	movwf	fsr2l,c
  1750  001488  0E01               	movlw	high _frequencyList
  1751  00148A  2010               	addwfc	?___wmul+1,w,c
  1752  00148C  6EDA               	movwf	fsr2h,c
  1753  00148E  CFDE F018          	movff	postinc2,___ftge@ff2
  1754  001492  CFDE F019          	movff	postinc2,___ftge@ff2+1
  1755  001496  CFDD F01A          	movff	postdec2,___ftge@ff2+2
  1756  00149A  EC5F  F00E         	call	___ftge	;wreg free
  1757  00149E  B0D8               	btfsc	status,0,c
  1758  0014A0  D00B               	goto	l1909
  1759                           
  1760                           ;yesgoodfinalprojectpleasework.c: 418: targetFreqSharp = count;
  1761  0014A2  C02E  F025         	movff	findTargetFreqs@count,findTargetFreqs@targetFreqSharp
  1762  0014A6  C02F  F026         	movff	findTargetFreqs@count+1,findTargetFreqs@targetFreqSharp+1
  1763                           
  1764                           ;yesgoodfinalprojectpleasework.c: 419: targetFreqFlat = count - 1;
  1765  0014AA  0EFF               	movlw	255
  1766  0014AC  242E               	addwf	findTargetFreqs@count,w,c
  1767  0014AE  6E27               	movwf	findTargetFreqs@targetFreqFlat,c
  1768  0014B0  0EFF               	movlw	255
  1769  0014B2  202F               	addwfc	findTargetFreqs@count+1,w,c
  1770  0014B4  6E28               	movwf	findTargetFreqs@targetFreqFlat+1,c
  1771  0014B6  D734               	goto	l1877
  1772  0014B8                     l1909:
  1773                           
  1774                           ;yesgoodfinalprojectpleasework.c: 421: }
  1775                           ;yesgoodfinalprojectpleasework.c: 422: count++;
  1776  0014B8  4A2E               	infsnz	findTargetFreqs@count,f,c
  1777  0014BA  2A2F               	incf	findTargetFreqs@count+1,f,c
  1778  0014BC                     l1911:
  1779  0014BC  042C               	decf	findTargetFreqs@found,w,c
  1780  0014BE  102D               	iorwf	findTargetFreqs@found+1,w,c
  1781  0014C0  B4D8               	btfsc	status,2,c
  1782  0014C2  0012               	return	
  1783  0014C4  D6A6               	goto	l1855
  1784  0014C6                     __end_of_findTargetFreqs:
  1785                           	opt stack 0
  1786                           tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           intcon	equ	0xFF2
  1791                           postinc0	equ	0xFEE
  1792                           wreg	equ	0xFE8
  1793                           postdec1	equ	0xFE5
  1794                           fsr1l	equ	0xFE1
  1795                           postinc2	equ	0xFDE
  1796                           postdec2	equ	0xFDD
  1797                           fsr2h	equ	0xFDA
  1798                           fsr2l	equ	0xFD9
  1799                           status	equ	0xFD8
  1800                           
  1801 ;; *************** function _displayOutOfTune *****************
  1802 ;; Defined at:
  1803 ;;		line 429 in file "yesgoodfinalprojectpleasework.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  frequency       3   65[COMRAM] float 
  1806 ;;  closestNote     3   68[COMRAM] float 
  1807 ;;  targetFreqSh    2   71[COMRAM] int 
  1808 ;;  targetFreqFl    2   73[COMRAM] int 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  c               3    9[BANK0 ] float 
  1811 ;;  midpoint        3    6[BANK0 ] float 
  1812 ;;  b               3    3[BANK0 ] float 
  1813 ;;  a               3    0[BANK0 ] float 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;		None               void
  1816 ;; Registers used:
  1817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1823 ;;      Params:        10       0       0       0       0       0       0       0       0
  1824 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1826 ;;      Totals:        10      12       0       0       0       0       0       0       0
  1827 ;;Total ram usage:       22 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    3
  1830 ;; This function calls:
  1831 ;;		___ftadd
  1832 ;;		___ftdiv
  1833 ;;		___ftge
  1834 ;;		___ftmul
  1835 ;;		___ftneg
  1836 ;;		___wmul
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text4
  1843  000D36                     __ptext4:
  1844                           	opt stack 0
  1845  000D36                     _displayOutOfTune:
  1846                           	opt stack 27
  1847                           
  1848                           ;yesgoodfinalprojectpleasework.c: 430: float a, b, c;
  1849                           ;yesgoodfinalprojectpleasework.c: 431: float midpoint;
  1850                           ;yesgoodfinalprojectpleasework.c: 433: if (targetFreqFlat == targetFreqSharp) {
  1851                           
  1852                           ;incstack = 0
  1853  000D36  5048               	movf	displayOutOfTune@targetFreqSharp,w,c
  1854  000D38  184A               	xorwf	displayOutOfTune@targetFreqFlat,w,c
  1855  000D3A  E104               	bnz	l1917
  1856  000D3C  5049               	movf	displayOutOfTune@targetFreqSharp+1,w,c
  1857  000D3E  184B               	xorwf	displayOutOfTune@targetFreqFlat+1,w,c
  1858  000D40  B4D8               	btfsc	status,2,c
  1859  000D42  0012               	return	
  1860  000D44                     l1917:
  1861                           
  1862                           ;yesgoodfinalprojectpleasework.c: 437: midpoint = (frequencyList[targetFreqSharp] + freq
      +                          uencyList[targetFreqFlat]) / 2;
  1863  000D44  C04A  F00F         	movff	displayOutOfTune@targetFreqFlat,___wmul@multiplier
  1864  000D48  C04B  F010         	movff	displayOutOfTune@targetFreqFlat+1,___wmul@multiplier+1
  1865  000D4C  0E00               	movlw	0
  1866  000D4E  6E12               	movwf	___wmul@multiplicand+1,c
  1867  000D50  0E03               	movlw	3
  1868  000D52  6E11               	movwf	___wmul@multiplicand,c
  1869  000D54  EC4E  F010         	call	___wmul	;wreg free
  1870  000D58  0E00               	movlw	low _frequencyList
  1871  000D5A  240F               	addwf	?___wmul,w,c
  1872  000D5C  6ED9               	movwf	fsr2l,c
  1873  000D5E  0E01               	movlw	high _frequencyList
  1874  000D60  2010               	addwfc	?___wmul+1,w,c
  1875  000D62  6EDA               	movwf	fsr2h,c
  1876  000D64  CFDE F01B          	movff	postinc2,___ftadd@f2
  1877  000D68  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  1878  000D6C  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  1879  000D70  C048  F00F         	movff	displayOutOfTune@targetFreqSharp,___wmul@multiplier
  1880  000D74  C049  F010         	movff	displayOutOfTune@targetFreqSharp+1,___wmul@multiplier+1
  1881  000D78  0E00               	movlw	0
  1882  000D7A  6E12               	movwf	___wmul@multiplicand+1,c
  1883  000D7C  0E03               	movlw	3
  1884  000D7E  6E11               	movwf	___wmul@multiplicand,c
  1885  000D80  EC4E  F010         	call	___wmul	;wreg free
  1886  000D84  0E00               	movlw	low _frequencyList
  1887  000D86  240F               	addwf	?___wmul,w,c
  1888  000D88  6ED9               	movwf	fsr2l,c
  1889  000D8A  0E01               	movlw	high _frequencyList
  1890  000D8C  2010               	addwfc	?___wmul+1,w,c
  1891  000D8E  6EDA               	movwf	fsr2h,c
  1892  000D90  CFDE F018          	movff	postinc2,___ftadd@f1
  1893  000D94  CFDE F019          	movff	postinc2,___ftadd@f1+1
  1894  000D98  CFDD F01A          	movff	postdec2,___ftadd@f1+2
  1895  000D9C  EC63  F00A         	call	___ftadd	;wreg free
  1896  000DA0  C018  F024         	movff	?___ftadd,___ftdiv@f1
  1897  000DA4  C019  F025         	movff	?___ftadd+1,___ftdiv@f1+1
  1898  000DA8  C01A  F026         	movff	?___ftadd+2,___ftdiv@f1+2
  1899  000DAC  0E00               	movlw	0
  1900  000DAE  6E27               	movwf	___ftdiv@f2,c
  1901  000DB0  0E00               	movlw	0
  1902  000DB2  6E28               	movwf	___ftdiv@f2+1,c
  1903  000DB4  0E40               	movlw	64
  1904  000DB6  6E29               	movwf	___ftdiv@f2+2,c
  1905  000DB8  EC56  F00C         	call	___ftdiv	;wreg free
  1906  000DBC  C024  F066         	movff	?___ftdiv,displayOutOfTune@midpoint
  1907  000DC0  C025  F067         	movff	?___ftdiv+1,displayOutOfTune@midpoint+1
  1908  000DC4  C026  F068         	movff	?___ftdiv+2,displayOutOfTune@midpoint+2
  1909                           
  1910                           ;yesgoodfinalprojectpleasework.c: 438: a = frequency - frequencyList[targetFreqFlat];
  1911  000DC8  C04A  F00F         	movff	displayOutOfTune@targetFreqFlat,___wmul@multiplier
  1912  000DCC  C04B  F010         	movff	displayOutOfTune@targetFreqFlat+1,___wmul@multiplier+1
  1913  000DD0  0E00               	movlw	0
  1914  000DD2  6E12               	movwf	___wmul@multiplicand+1,c
  1915  000DD4  0E03               	movlw	3
  1916  000DD6  6E11               	movwf	___wmul@multiplicand,c
  1917  000DD8  EC4E  F010         	call	___wmul	;wreg free
  1918  000DDC  0E00               	movlw	low _frequencyList
  1919  000DDE  240F               	addwf	?___wmul,w,c
  1920  000DE0  6ED9               	movwf	fsr2l,c
  1921  000DE2  0E01               	movlw	high _frequencyList
  1922  000DE4  2010               	addwfc	?___wmul+1,w,c
  1923  000DE6  6EDA               	movwf	fsr2h,c
  1924  000DE8  CFDE F015          	movff	postinc2,___ftneg@f1
  1925  000DEC  CFDE F016          	movff	postinc2,___ftneg@f1+1
  1926  000DF0  CFDD F017          	movff	postdec2,___ftneg@f1+2
  1927  000DF4  EC61  F010         	call	___ftneg	;wreg free
  1928  000DF8  C015  F018         	movff	?___ftneg,___ftadd@f1
  1929  000DFC  C016  F019         	movff	?___ftneg+1,___ftadd@f1+1
  1930  000E00  C017  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  1931  000E04  C042  F01B         	movff	displayOutOfTune@frequency,___ftadd@f2
  1932  000E08  C043  F01C         	movff	displayOutOfTune@frequency+1,___ftadd@f2+1
  1933  000E0C  C044  F01D         	movff	displayOutOfTune@frequency+2,___ftadd@f2+2
  1934  000E10  EC63  F00A         	call	___ftadd	;wreg free
  1935  000E14  C018  F060         	movff	?___ftadd,displayOutOfTune@a
  1936  000E18  C019  F061         	movff	?___ftadd+1,displayOutOfTune@a+1
  1937  000E1C  C01A  F062         	movff	?___ftadd+2,displayOutOfTune@a+2
  1938                           
  1939                           ;yesgoodfinalprojectpleasework.c: 439: b = frequencyList[targetFreqSharp] - frequency;
  1940  000E20  C042  F015         	movff	displayOutOfTune@frequency,___ftneg@f1
  1941  000E24  C043  F016         	movff	displayOutOfTune@frequency+1,___ftneg@f1+1
  1942  000E28  C044  F017         	movff	displayOutOfTune@frequency+2,___ftneg@f1+2
  1943  000E2C  EC61  F010         	call	___ftneg	;wreg free
  1944  000E30  C015  F018         	movff	?___ftneg,___ftadd@f1
  1945  000E34  C016  F019         	movff	?___ftneg+1,___ftadd@f1+1
  1946  000E38  C017  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  1947  000E3C  0E00               	movlw	0
  1948  000E3E  6E12               	movwf	___wmul@multiplicand+1,c
  1949  000E40  0E03               	movlw	3
  1950  000E42  6E11               	movwf	___wmul@multiplicand,c
  1951  000E44  C048  F00F         	movff	displayOutOfTune@targetFreqSharp,___wmul@multiplier
  1952  000E48  C049  F010         	movff	displayOutOfTune@targetFreqSharp+1,___wmul@multiplier+1
  1953  000E4C  EC4E  F010         	call	___wmul	;wreg free
  1954  000E50  0E00               	movlw	low _frequencyList
  1955  000E52  240F               	addwf	?___wmul,w,c
  1956  000E54  6ED9               	movwf	fsr2l,c
  1957  000E56  0E01               	movlw	high _frequencyList
  1958  000E58  2010               	addwfc	?___wmul+1,w,c
  1959  000E5A  6EDA               	movwf	fsr2h,c
  1960  000E5C  CFDE F01B          	movff	postinc2,___ftadd@f2
  1961  000E60  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  1962  000E64  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  1963  000E68  EC63  F00A         	call	___ftadd	;wreg free
  1964  000E6C  C018  F063         	movff	?___ftadd,displayOutOfTune@b
  1965  000E70  C019  F064         	movff	?___ftadd+1,displayOutOfTune@b+1
  1966  000E74  C01A  F065         	movff	?___ftadd+2,displayOutOfTune@b+2
  1967                           
  1968                           ;yesgoodfinalprojectpleasework.c: 441: if (a < b) {
  1969  000E78  C060  F015         	movff	displayOutOfTune@a,___ftge@ff1
  1970  000E7C  C061  F016         	movff	displayOutOfTune@a+1,___ftge@ff1+1
  1971  000E80  C062  F017         	movff	displayOutOfTune@a+2,___ftge@ff1+2
  1972  000E84  C063  F018         	movff	displayOutOfTune@b,___ftge@ff2
  1973  000E88  C064  F019         	movff	displayOutOfTune@b+1,___ftge@ff2+1
  1974  000E8C  C065  F01A         	movff	displayOutOfTune@b+2,___ftge@ff2+2
  1975  000E90  EC5F  F00E         	call	___ftge	;wreg free
  1976  000E94  B0D8               	btfsc	status,0,c
  1977  000E96  D0DA               	goto	l1951
  1978                           
  1979                           ;yesgoodfinalprojectpleasework.c: 442: a = midpoint - frequency;
  1980  000E98  C042  F015         	movff	displayOutOfTune@frequency,___ftneg@f1
  1981  000E9C  C043  F016         	movff	displayOutOfTune@frequency+1,___ftneg@f1+1
  1982  000EA0  C044  F017         	movff	displayOutOfTune@frequency+2,___ftneg@f1+2
  1983  000EA4  EC61  F010         	call	___ftneg	;wreg free
  1984  000EA8  C015  F018         	movff	?___ftneg,___ftadd@f1
  1985  000EAC  C016  F019         	movff	?___ftneg+1,___ftadd@f1+1
  1986  000EB0  C017  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  1987  000EB4  C066  F01B         	movff	displayOutOfTune@midpoint,___ftadd@f2
  1988  000EB8  C067  F01C         	movff	displayOutOfTune@midpoint+1,___ftadd@f2+1
  1989  000EBC  C068  F01D         	movff	displayOutOfTune@midpoint+2,___ftadd@f2+2
  1990  000EC0  EC63  F00A         	call	___ftadd	;wreg free
  1991  000EC4  C018  F060         	movff	?___ftadd,displayOutOfTune@a
  1992  000EC8  C019  F061         	movff	?___ftadd+1,displayOutOfTune@a+1
  1993  000ECC  C01A  F062         	movff	?___ftadd+2,displayOutOfTune@a+2
  1994                           
  1995                           ;yesgoodfinalprojectpleasework.c: 443: b = midpoint - frequencyList[targetFreqFlat];
  1996  000ED0  C04A  F00F         	movff	displayOutOfTune@targetFreqFlat,___wmul@multiplier
  1997  000ED4  C04B  F010         	movff	displayOutOfTune@targetFreqFlat+1,___wmul@multiplier+1
  1998  000ED8  0E00               	movlw	0
  1999  000EDA  6E12               	movwf	___wmul@multiplicand+1,c
  2000  000EDC  0E03               	movlw	3
  2001  000EDE  6E11               	movwf	___wmul@multiplicand,c
  2002  000EE0  EC4E  F010         	call	___wmul	;wreg free
  2003  000EE4  0E00               	movlw	low _frequencyList
  2004  000EE6  240F               	addwf	?___wmul,w,c
  2005  000EE8  6ED9               	movwf	fsr2l,c
  2006  000EEA  0E01               	movlw	high _frequencyList
  2007  000EEC  2010               	addwfc	?___wmul+1,w,c
  2008  000EEE  6EDA               	movwf	fsr2h,c
  2009  000EF0  CFDE F015          	movff	postinc2,___ftneg@f1
  2010  000EF4  CFDE F016          	movff	postinc2,___ftneg@f1+1
  2011  000EF8  CFDD F017          	movff	postdec2,___ftneg@f1+2
  2012  000EFC  EC61  F010         	call	___ftneg	;wreg free
  2013  000F00  C015  F018         	movff	?___ftneg,___ftadd@f1
  2014  000F04  C016  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2015  000F08  C017  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2016  000F0C  C066  F01B         	movff	displayOutOfTune@midpoint,___ftadd@f2
  2017  000F10  C067  F01C         	movff	displayOutOfTune@midpoint+1,___ftadd@f2+1
  2018  000F14  C068  F01D         	movff	displayOutOfTune@midpoint+2,___ftadd@f2+2
  2019  000F18  EC63  F00A         	call	___ftadd	;wreg free
  2020  000F1C  C018  F063         	movff	?___ftadd,displayOutOfTune@b
  2021  000F20  C019  F064         	movff	?___ftadd+1,displayOutOfTune@b+1
  2022  000F24  C01A  F065         	movff	?___ftadd+2,displayOutOfTune@b+2
  2023                           
  2024                           ;yesgoodfinalprojectpleasework.c: 444: c = (b / a) * 100;
  2025  000F28  C060  F027         	movff	displayOutOfTune@a,___ftdiv@f2
  2026  000F2C  C061  F028         	movff	displayOutOfTune@a+1,___ftdiv@f2+1
  2027  000F30  C062  F029         	movff	displayOutOfTune@a+2,___ftdiv@f2+2
  2028  000F34  C063  F024         	movff	displayOutOfTune@b,___ftdiv@f1
  2029  000F38  C064  F025         	movff	displayOutOfTune@b+1,___ftdiv@f1+1
  2030  000F3C  C065  F026         	movff	displayOutOfTune@b+2,___ftdiv@f1+2
  2031  000F40  EC56  F00C         	call	___ftdiv	;wreg free
  2032  000F44  C024  F033         	movff	?___ftdiv,___ftmul@f1
  2033  000F48  C025  F034         	movff	?___ftdiv+1,___ftmul@f1+1
  2034  000F4C  C026  F035         	movff	?___ftdiv+2,___ftmul@f1+2
  2035  000F50  0E00               	movlw	0
  2036  000F52  6E36               	movwf	___ftmul@f2,c
  2037  000F54  0EC8               	movlw	200
  2038  000F56  6E37               	movwf	___ftmul@f2+1,c
  2039  000F58  0E42               	movlw	66
  2040  000F5A  6E38               	movwf	___ftmul@f2+2,c
  2041  000F5C  ECDC  F00B         	call	___ftmul	;wreg free
  2042  000F60  C033  F069         	movff	?___ftmul,displayOutOfTune@c
  2043  000F64  C034  F06A         	movff	?___ftmul+1,displayOutOfTune@c+1
  2044  000F68  C035  F06B         	movff	?___ftmul+2,displayOutOfTune@c+2
  2045                           
  2046                           ;yesgoodfinalprojectpleasework.c: 447: closestNote = frequencyList[targetFreqFlat];
  2047  000F6C  C04A  F00F         	movff	displayOutOfTune@targetFreqFlat,___wmul@multiplier
  2048  000F70  C04B  F010         	movff	displayOutOfTune@targetFreqFlat+1,___wmul@multiplier+1
  2049  000F74  0E00               	movlw	0
  2050  000F76  6E12               	movwf	___wmul@multiplicand+1,c
  2051  000F78  0E03               	movlw	3
  2052  000F7A  6E11               	movwf	___wmul@multiplicand,c
  2053  000F7C  EC4E  F010         	call	___wmul	;wreg free
  2054  000F80  0E00               	movlw	low _frequencyList
  2055  000F82  240F               	addwf	?___wmul,w,c
  2056  000F84  6ED9               	movwf	fsr2l,c
  2057  000F86  0E01               	movlw	high _frequencyList
  2058  000F88  2010               	addwfc	?___wmul+1,w,c
  2059  000F8A  6EDA               	movwf	fsr2h,c
  2060  000F8C  CFDE F045          	movff	postinc2,displayOutOfTune@closestNote
  2061  000F90  CFDE F046          	movff	postinc2,displayOutOfTune@closestNote+1
  2062  000F94  CFDD F047          	movff	postdec2,displayOutOfTune@closestNote+2
  2063                           
  2064                           ;yesgoodfinalprojectpleasework.c: 448: if (c < 3) {
  2065  000F98  C069  F015         	movff	displayOutOfTune@c,___ftge@ff1
  2066  000F9C  C06A  F016         	movff	displayOutOfTune@c+1,___ftge@ff1+1
  2067  000FA0  C06B  F017         	movff	displayOutOfTune@c+2,___ftge@ff1+2
  2068  000FA4  0E00               	movlw	0
  2069  000FA6  6E18               	movwf	___ftge@ff2,c
  2070  000FA8  0E40               	movlw	64
  2071  000FAA  6E19               	movwf	___ftge@ff2+1,c
  2072  000FAC  0E40               	movlw	64
  2073  000FAE  6E1A               	movwf	___ftge@ff2+2,c
  2074  000FB0  EC5F  F00E         	call	___ftge	;wreg free
  2075  000FB4  A0D8               	btfss	status,0,c
  2076  000FB6  0012               	return	
  2077                           
  2078                           ;yesgoodfinalprojectpleasework.c: 450: } else if (c < 15) {
  2079  000FB8  C069  F015         	movff	displayOutOfTune@c,___ftge@ff1
  2080  000FBC  C06A  F016         	movff	displayOutOfTune@c+1,___ftge@ff1+1
  2081  000FC0  C06B  F017         	movff	displayOutOfTune@c+2,___ftge@ff1+2
  2082  000FC4  0E00               	movlw	0
  2083  000FC6  6E18               	movwf	___ftge@ff2,c
  2084  000FC8  0E70               	movlw	112
  2085  000FCA  6E19               	movwf	___ftge@ff2+1,c
  2086  000FCC  0E41               	movlw	65
  2087  000FCE  6E1A               	movwf	___ftge@ff2+2,c
  2088  000FD0  EC5F  F00E         	call	___ftge	;wreg free
  2089  000FD4  A0D8               	btfss	status,0,c
  2090  000FD6  0012               	return	
  2091                           
  2092                           ;yesgoodfinalprojectpleasework.c: 452: } else if (c < 50) {
  2093  000FD8  C069  F015         	movff	displayOutOfTune@c,___ftge@ff1
  2094  000FDC  C06A  F016         	movff	displayOutOfTune@c+1,___ftge@ff1+1
  2095  000FE0  C06B  F017         	movff	displayOutOfTune@c+2,___ftge@ff1+2
  2096  000FE4  0E00               	movlw	0
  2097  000FE6  6E18               	movwf	___ftge@ff2,c
  2098  000FE8  0E48               	movlw	72
  2099  000FEA  6E19               	movwf	___ftge@ff2+1,c
  2100  000FEC  0E42               	movlw	66
  2101  000FEE  6E1A               	movwf	___ftge@ff2+2,c
  2102  000FF0  EC5F  F00E         	call	___ftge	;wreg free
  2103  000FF4  A0D8               	btfss	status,0,c
  2104  000FF6  0012               	return	
  2105                           
  2106                           ;yesgoodfinalprojectpleasework.c: 454: } else if (c < 99) {
  2107  000FF8  C069  F015         	movff	displayOutOfTune@c,___ftge@ff1
  2108  000FFC  C06A  F016         	movff	displayOutOfTune@c+1,___ftge@ff1+1
  2109  001000  C06B  F017         	movff	displayOutOfTune@c+2,___ftge@ff1+2
  2110  001004  0E00               	movlw	0
  2111  001006  6E18               	movwf	___ftge@ff2,c
  2112  001008  0EC6               	movlw	198
  2113  00100A  6E19               	movwf	___ftge@ff2+1,c
  2114  00100C  0E42               	movlw	66
  2115  00100E  6E1A               	movwf	___ftge@ff2+2,c
  2116  001010  EC5F  F00E         	call	___ftge	;wreg free
  2117  001014  A0D8               	btfss	status,0,c
  2118  001016  0012               	return	
  2119                           
  2120                           ;yesgoodfinalprojectpleasework.c: 456: } else if (c == 100) {
  2121  001018  0EC8               	movlw	200
  2122  00101A  0100               	movlb	0	; () banked
  2123  00101C  196A               	xorwf	(displayOutOfTune@c+1)& (0+255),w,b
  2124  00101E  E107               	bnz	l1947
  2125  001020  0E42               	movlw	66
  2126  001022  0100               	movlb	0	; () banked
  2127  001024  196B               	xorwf	(displayOutOfTune@c+2)& (0+255),w,b
  2128  001026  0100               	movlb	0	; () banked
  2129  001028  1169               	iorwf	displayOutOfTune@c& (0+255),w,b
  2130  00102A  B4D8               	btfsc	status,2,c
  2131  00102C  0012               	return	
  2132  00102E                     l1947:
  2133                           
  2134                           ; BSR set to: 0
  2135  00102E  0E00               	movlw	0
  2136  001030  6E15               	movwf	___ftge@ff1,c
  2137  001032  0EC8               	movlw	200
  2138  001034  6E16               	movwf	___ftge@ff1+1,c
  2139  001036  0E42               	movlw	66
  2140  001038  6E17               	movwf	___ftge@ff1+2,c
  2141  00103A  C069  F018         	movff	displayOutOfTune@c,___ftge@ff2
  2142  00103E  C06A  F019         	movff	displayOutOfTune@c+1,___ftge@ff2+1
  2143  001042  C06B  F01A         	movff	displayOutOfTune@c+2,___ftge@ff2+2
  2144  001046  EC5F  F00E         	call	___ftge	;wreg free
  2145                           
  2146                           ;yesgoodfinalprojectpleasework.c: 460: }
  2147                           ;yesgoodfinalprojectpleasework.c: 464: } else {
  2148                           
  2149                           ;yesgoodfinalprojectpleasework.c: 459: return;
  2150  00104A  0012               	return	
  2151  00104C                     l1951:
  2152                           
  2153                           ;yesgoodfinalprojectpleasework.c: 466: a = frequency - midpoint;
  2154  00104C  C066  F015         	movff	displayOutOfTune@midpoint,___ftneg@f1
  2155  001050  C067  F016         	movff	displayOutOfTune@midpoint+1,___ftneg@f1+1
  2156  001054  C068  F017         	movff	displayOutOfTune@midpoint+2,___ftneg@f1+2
  2157  001058  EC61  F010         	call	___ftneg	;wreg free
  2158  00105C  C015  F018         	movff	?___ftneg,___ftadd@f1
  2159  001060  C016  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2160  001064  C017  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2161  001068  C042  F01B         	movff	displayOutOfTune@frequency,___ftadd@f2
  2162  00106C  C043  F01C         	movff	displayOutOfTune@frequency+1,___ftadd@f2+1
  2163  001070  C044  F01D         	movff	displayOutOfTune@frequency+2,___ftadd@f2+2
  2164  001074  EC63  F00A         	call	___ftadd	;wreg free
  2165  001078  C018  F060         	movff	?___ftadd,displayOutOfTune@a
  2166  00107C  C019  F061         	movff	?___ftadd+1,displayOutOfTune@a+1
  2167  001080  C01A  F062         	movff	?___ftadd+2,displayOutOfTune@a+2
  2168                           
  2169                           ;yesgoodfinalprojectpleasework.c: 467: b = frequencyList[targetFreqSharp] - midpoint;
  2170  001084  C066  F015         	movff	displayOutOfTune@midpoint,___ftneg@f1
  2171  001088  C067  F016         	movff	displayOutOfTune@midpoint+1,___ftneg@f1+1
  2172  00108C  C068  F017         	movff	displayOutOfTune@midpoint+2,___ftneg@f1+2
  2173  001090  EC61  F010         	call	___ftneg	;wreg free
  2174  001094  C015  F018         	movff	?___ftneg,___ftadd@f1
  2175  001098  C016  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2176  00109C  C017  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2177  0010A0  0E00               	movlw	0
  2178  0010A2  6E12               	movwf	___wmul@multiplicand+1,c
  2179  0010A4  0E03               	movlw	3
  2180  0010A6  6E11               	movwf	___wmul@multiplicand,c
  2181  0010A8  C048  F00F         	movff	displayOutOfTune@targetFreqSharp,___wmul@multiplier
  2182  0010AC  C049  F010         	movff	displayOutOfTune@targetFreqSharp+1,___wmul@multiplier+1
  2183  0010B0  EC4E  F010         	call	___wmul	;wreg free
  2184  0010B4  0E00               	movlw	low _frequencyList
  2185  0010B6  240F               	addwf	?___wmul,w,c
  2186  0010B8  6ED9               	movwf	fsr2l,c
  2187  0010BA  0E01               	movlw	high _frequencyList
  2188  0010BC  2010               	addwfc	?___wmul+1,w,c
  2189  0010BE  6EDA               	movwf	fsr2h,c
  2190  0010C0  CFDE F01B          	movff	postinc2,___ftadd@f2
  2191  0010C4  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  2192  0010C8  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  2193  0010CC  EC63  F00A         	call	___ftadd	;wreg free
  2194  0010D0  C018  F063         	movff	?___ftadd,displayOutOfTune@b
  2195  0010D4  C019  F064         	movff	?___ftadd+1,displayOutOfTune@b+1
  2196  0010D8  C01A  F065         	movff	?___ftadd+2,displayOutOfTune@b+2
  2197                           
  2198                           ;yesgoodfinalprojectpleasework.c: 468: c = (b / a) * 100;
  2199  0010DC  C060  F027         	movff	displayOutOfTune@a,___ftdiv@f2
  2200  0010E0  C061  F028         	movff	displayOutOfTune@a+1,___ftdiv@f2+1
  2201  0010E4  C062  F029         	movff	displayOutOfTune@a+2,___ftdiv@f2+2
  2202  0010E8  C063  F024         	movff	displayOutOfTune@b,___ftdiv@f1
  2203  0010EC  C064  F025         	movff	displayOutOfTune@b+1,___ftdiv@f1+1
  2204  0010F0  C065  F026         	movff	displayOutOfTune@b+2,___ftdiv@f1+2
  2205  0010F4  EC56  F00C         	call	___ftdiv	;wreg free
  2206  0010F8  C024  F033         	movff	?___ftdiv,___ftmul@f1
  2207  0010FC  C025  F034         	movff	?___ftdiv+1,___ftmul@f1+1
  2208  001100  C026  F035         	movff	?___ftdiv+2,___ftmul@f1+2
  2209  001104  0E00               	movlw	0
  2210  001106  6E36               	movwf	___ftmul@f2,c
  2211  001108  0EC8               	movlw	200
  2212  00110A  6E37               	movwf	___ftmul@f2+1,c
  2213  00110C  0E42               	movlw	66
  2214  00110E  6E38               	movwf	___ftmul@f2+2,c
  2215  001110  ECDC  F00B         	call	___ftmul	;wreg free
  2216  001114  C033  F069         	movff	?___ftmul,displayOutOfTune@c
  2217  001118  C034  F06A         	movff	?___ftmul+1,displayOutOfTune@c+1
  2218  00111C  C035  F06B         	movff	?___ftmul+2,displayOutOfTune@c+2
  2219                           
  2220                           ;yesgoodfinalprojectpleasework.c: 471: closestNote = frequencyList[targetFreqSharp];
  2221  001120  C048  F00F         	movff	displayOutOfTune@targetFreqSharp,___wmul@multiplier
  2222  001124  C049  F010         	movff	displayOutOfTune@targetFreqSharp+1,___wmul@multiplier+1
  2223  001128  0E00               	movlw	0
  2224  00112A  6E12               	movwf	___wmul@multiplicand+1,c
  2225  00112C  0E03               	movlw	3
  2226  00112E  6E11               	movwf	___wmul@multiplicand,c
  2227  001130  EC4E  F010         	call	___wmul	;wreg free
  2228  001134  0E00               	movlw	low _frequencyList
  2229  001136  240F               	addwf	?___wmul,w,c
  2230  001138  6ED9               	movwf	fsr2l,c
  2231  00113A  0E01               	movlw	high _frequencyList
  2232  00113C  2010               	addwfc	?___wmul+1,w,c
  2233  00113E  6EDA               	movwf	fsr2h,c
  2234  001140  CFDE F045          	movff	postinc2,displayOutOfTune@closestNote
  2235  001144  CFDE F046          	movff	postinc2,displayOutOfTune@closestNote+1
  2236  001148  CFDD F047          	movff	postdec2,displayOutOfTune@closestNote+2
  2237                           
  2238                           ;yesgoodfinalprojectpleasework.c: 472: if (c < 3) {
  2239  00114C  C069  F015         	movff	displayOutOfTune@c,___ftge@ff1
  2240  001150  C06A  F016         	movff	displayOutOfTune@c+1,___ftge@ff1+1
  2241  001154  C06B  F017         	movff	displayOutOfTune@c+2,___ftge@ff1+2
  2242  001158  0E00               	movlw	0
  2243  00115A  6E18               	movwf	___ftge@ff2,c
  2244  00115C  0E40               	movlw	64
  2245  00115E  6E19               	movwf	___ftge@ff2+1,c
  2246  001160  0E40               	movlw	64
  2247  001162  6E1A               	movwf	___ftge@ff2+2,c
  2248  001164  EC5F  F00E         	call	___ftge	;wreg free
  2249  001168  A0D8               	btfss	status,0,c
  2250  00116A  0012               	return	
  2251                           
  2252                           ;yesgoodfinalprojectpleasework.c: 474: } else if (c < 15) {
  2253  00116C  C069  F015         	movff	displayOutOfTune@c,___ftge@ff1
  2254  001170  C06A  F016         	movff	displayOutOfTune@c+1,___ftge@ff1+1
  2255  001174  C06B  F017         	movff	displayOutOfTune@c+2,___ftge@ff1+2
  2256  001178  0E00               	movlw	0
  2257  00117A  6E18               	movwf	___ftge@ff2,c
  2258  00117C  0E70               	movlw	112
  2259  00117E  6E19               	movwf	___ftge@ff2+1,c
  2260  001180  0E41               	movlw	65
  2261  001182  6E1A               	movwf	___ftge@ff2+2,c
  2262  001184  EC5F  F00E         	call	___ftge	;wreg free
  2263  001188  A0D8               	btfss	status,0,c
  2264  00118A  0012               	return	
  2265                           
  2266                           ;yesgoodfinalprojectpleasework.c: 476: } else if (c < 50) {
  2267  00118C  C069  F015         	movff	displayOutOfTune@c,___ftge@ff1
  2268  001190  C06A  F016         	movff	displayOutOfTune@c+1,___ftge@ff1+1
  2269  001194  C06B  F017         	movff	displayOutOfTune@c+2,___ftge@ff1+2
  2270  001198  0E00               	movlw	0
  2271  00119A  6E18               	movwf	___ftge@ff2,c
  2272  00119C  0E48               	movlw	72
  2273  00119E  6E19               	movwf	___ftge@ff2+1,c
  2274  0011A0  0E42               	movlw	66
  2275  0011A2  6E1A               	movwf	___ftge@ff2+2,c
  2276  0011A4  EC5F  F00E         	call	___ftge	;wreg free
  2277  0011A8  A0D8               	btfss	status,0,c
  2278  0011AA  0012               	return	
  2279                           
  2280                           ;yesgoodfinalprojectpleasework.c: 478: } else if (c < 99) {
  2281  0011AC  C069  F015         	movff	displayOutOfTune@c,___ftge@ff1
  2282  0011B0  C06A  F016         	movff	displayOutOfTune@c+1,___ftge@ff1+1
  2283  0011B4  C06B  F017         	movff	displayOutOfTune@c+2,___ftge@ff1+2
  2284  0011B8  0E00               	movlw	0
  2285  0011BA  6E18               	movwf	___ftge@ff2,c
  2286  0011BC  0EC6               	movlw	198
  2287  0011BE  6E19               	movwf	___ftge@ff2+1,c
  2288  0011C0  0E42               	movlw	66
  2289  0011C2  6E1A               	movwf	___ftge@ff2+2,c
  2290  0011C4  EC5F  F00E         	call	___ftge	;wreg free
  2291  0011C8  A0D8               	btfss	status,0,c
  2292  0011CA  0012               	return	
  2293                           
  2294                           ;yesgoodfinalprojectpleasework.c: 480: } else if (c == 100) {
  2295  0011CC  0EC8               	movlw	200
  2296  0011CE  0100               	movlb	0	; () banked
  2297  0011D0  196A               	xorwf	(displayOutOfTune@c+1)& (0+255),w,b
  2298  0011D2  E107               	bnz	l1977
  2299  0011D4  0E42               	movlw	66
  2300  0011D6  0100               	movlb	0	; () banked
  2301  0011D8  196B               	xorwf	(displayOutOfTune@c+2)& (0+255),w,b
  2302  0011DA  0100               	movlb	0	; () banked
  2303  0011DC  1169               	iorwf	displayOutOfTune@c& (0+255),w,b
  2304  0011DE  B4D8               	btfsc	status,2,c
  2305  0011E0  0012               	return	
  2306  0011E2                     l1977:
  2307                           
  2308                           ; BSR set to: 0
  2309  0011E2  0E00               	movlw	0
  2310  0011E4  6E15               	movwf	___ftge@ff1,c
  2311  0011E6  0EC8               	movlw	200
  2312  0011E8  6E16               	movwf	___ftge@ff1+1,c
  2313  0011EA  0E42               	movlw	66
  2314  0011EC  6E17               	movwf	___ftge@ff1+2,c
  2315  0011EE  C069  F018         	movff	displayOutOfTune@c,___ftge@ff2
  2316  0011F2  C06A  F019         	movff	displayOutOfTune@c+1,___ftge@ff2+1
  2317  0011F6  C06B  F01A         	movff	displayOutOfTune@c+2,___ftge@ff2+2
  2318  0011FA  EC5F  F00E         	call	___ftge	;wreg free
  2319                           
  2320                           ;yesgoodfinalprojectpleasework.c: 483: return;
  2321  0011FE  0012               	return	
  2322  001200                     __end_of_displayOutOfTune:
  2323                           	opt stack 0
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           intcon	equ	0xFF2
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           postdec1	equ	0xFE5
  2332                           fsr1l	equ	0xFE1
  2333                           postinc2	equ	0xFDE
  2334                           postdec2	equ	0xFDD
  2335                           fsr2h	equ	0xFDA
  2336                           fsr2l	equ	0xFD9
  2337                           status	equ	0xFD8
  2338                           
  2339 ;; *************** function ___wmul *****************
  2340 ;; Defined at:
  2341 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  multiplier      2   14[COMRAM] unsigned int 
  2344 ;;  multiplicand    2   16[COMRAM] unsigned int 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  product         2   18[COMRAM] unsigned int 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  2   14[COMRAM] unsigned int 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0, prodl, prodh
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2356 ;;      Params:         4       0       0       0       0       0       0       0       0
  2357 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2359 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2360 ;;Total ram usage:        6 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_findTargetFreqs
  2367 ;;		_displayOutOfTune
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text5
  2372  00209C                     __ptext5:
  2373                           	opt stack 0
  2374  00209C                     ___wmul:
  2375                           	opt stack 28
  2376                           
  2377                           ;incstack = 0
  2378  00209C  500F               	movf	___wmul@multiplier,w,c
  2379  00209E  0211               	mulwf	___wmul@multiplicand,c
  2380  0020A0  CFF3 F013          	movff	prodl,___wmul@product
  2381  0020A4  CFF4 F014          	movff	prodh,___wmul@product+1
  2382  0020A8  500F               	movf	___wmul@multiplier,w,c
  2383  0020AA  0212               	mulwf	___wmul@multiplicand+1,c
  2384  0020AC  50F3               	movf	prodl,w,c
  2385  0020AE  2614               	addwf	___wmul@product+1,f,c
  2386  0020B0  5010               	movf	___wmul@multiplier+1,w,c
  2387  0020B2  0211               	mulwf	___wmul@multiplicand,c
  2388  0020B4  50F3               	movf	prodl,w,c
  2389  0020B6  2614               	addwf	___wmul@product+1,f,c
  2390  0020B8  C013  F00F         	movff	___wmul@product,?___wmul
  2391  0020BC  C014  F010         	movff	___wmul@product+1,?___wmul+1
  2392  0020C0  0012               	return	
  2393  0020C2                     __end_of___wmul:
  2394                           	opt stack 0
  2395                           tblptru	equ	0xFF8
  2396                           tblptrh	equ	0xFF7
  2397                           tblptrl	equ	0xFF6
  2398                           tablat	equ	0xFF5
  2399                           prodh	equ	0xFF4
  2400                           prodl	equ	0xFF3
  2401                           intcon	equ	0xFF2
  2402                           postinc0	equ	0xFEE
  2403                           wreg	equ	0xFE8
  2404                           postdec1	equ	0xFE5
  2405                           fsr1l	equ	0xFE1
  2406                           postinc2	equ	0xFDE
  2407                           postdec2	equ	0xFDD
  2408                           fsr2h	equ	0xFDA
  2409                           fsr2l	equ	0xFD9
  2410                           status	equ	0xFD8
  2411                           
  2412 ;; *************** function ___ftneg *****************
  2413 ;; Defined at:
  2414 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  f1              3   20[COMRAM] float 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  3   20[COMRAM] float 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2428 ;;      Params:         3       0       0       0       0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2431 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2432 ;;Total ram usage:        3 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    1
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_displayOutOfTune
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text6
  2443  0020C2                     __ptext6:
  2444                           	opt stack 0
  2445  0020C2                     ___ftneg:
  2446                           	opt stack 28
  2447                           
  2448                           ;incstack = 0
  2449  0020C2  5015               	movf	___ftneg@f1,w,c
  2450  0020C4  1016               	iorwf	___ftneg@f1+1,w,c
  2451  0020C6  1017               	iorwf	___ftneg@f1+2,w,c
  2452  0020C8  B4D8               	btfsc	status,2,c
  2453  0020CA  D006               	goto	l504
  2454  0020CC  0E00               	movlw	0
  2455  0020CE  1A15               	xorwf	___ftneg@f1,f,c
  2456  0020D0  0E00               	movlw	0
  2457  0020D2  1A16               	xorwf	___ftneg@f1+1,f,c
  2458  0020D4  0E80               	movlw	128
  2459  0020D6  1A17               	xorwf	___ftneg@f1+2,f,c
  2460  0020D8                     l504:
  2461  0020D8  C015  F015         	movff	___ftneg@f1,?___ftneg
  2462  0020DC  C016  F016         	movff	___ftneg@f1+1,?___ftneg+1
  2463  0020E0  C017  F017         	movff	___ftneg@f1+2,?___ftneg+2
  2464  0020E4  0012               	return		;funcret
  2465  0020E6                     __end_of___ftneg:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           intcon	equ	0xFF2
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           postdec1	equ	0xFE5
  2477                           fsr1l	equ	0xFE1
  2478                           postinc2	equ	0xFDE
  2479                           postdec2	equ	0xFDD
  2480                           fsr2h	equ	0xFDA
  2481                           fsr2l	equ	0xFD9
  2482                           status	equ	0xFD8
  2483                           
  2484 ;; *************** function ___ftmul *****************
  2485 ;; Defined at:
  2486 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  f1              3   50[COMRAM] float 
  2489 ;;  f2              3   53[COMRAM] float 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  f3_as_produc    3   60[COMRAM] unsigned um
  2492 ;;  sign            1   64[COMRAM] unsigned char 
  2493 ;;  cntr            1   63[COMRAM] unsigned char 
  2494 ;;  exp             1   59[COMRAM] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  3   50[COMRAM] float 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2504 ;;      Params:         6       0       0       0       0       0       0       0       0
  2505 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2506 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2507 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2508 ;;Total ram usage:       15 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    2
  2511 ;; This function calls:
  2512 ;;		___ftpack
  2513 ;; This function is called by:
  2514 ;;		_displayOutOfTune
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text7
  2519  0017B8                     __ptext7:
  2520                           	opt stack 0
  2521  0017B8                     ___ftmul:
  2522                           	opt stack 27
  2523                           
  2524                           ;incstack = 0
  2525  0017B8  C035  F039         	movff	___ftmul@f1+2,??___ftmul
  2526  0017BC  6A3A               	clrf	(??___ftmul+1)& (0+255),c
  2527  0017BE  6A3B               	clrf	(??___ftmul+2)& (0+255),c
  2528  0017C0  3434               	rlcf	___ftmul@f1+1,w,c
  2529  0017C2  3639               	rlcf	??___ftmul& (0+255),f,c
  2530  0017C4  E301               	bnc	u1531
  2531  0017C6  803A               	bsf	(??___ftmul+1)& (0+255),0,c
  2532  0017C8                     u1531:
  2533  0017C8  5039               	movf	??___ftmul,w,c
  2534  0017CA  6E3C               	movwf	___ftmul@exp,c
  2535  0017CC  503C               	movf	___ftmul@exp,w,c
  2536  0017CE  A4D8               	btfss	status,2,c
  2537  0017D0  D007               	goto	l1701
  2538  0017D2  0E00               	movlw	0
  2539  0017D4  6E33               	movwf	?___ftmul,c
  2540  0017D6  0E00               	movlw	0
  2541  0017D8  6E34               	movwf	?___ftmul+1,c
  2542  0017DA  0E00               	movlw	0
  2543  0017DC  6E35               	movwf	?___ftmul+2,c
  2544  0017DE  0012               	return	
  2545  0017E0                     l1701:
  2546  0017E0  C038  F039         	movff	___ftmul@f2+2,??___ftmul
  2547  0017E4  6A3A               	clrf	(??___ftmul+1)& (0+255),c
  2548  0017E6  6A3B               	clrf	(??___ftmul+2)& (0+255),c
  2549  0017E8  3437               	rlcf	___ftmul@f2+1,w,c
  2550  0017EA  3639               	rlcf	??___ftmul& (0+255),f,c
  2551  0017EC  E301               	bnc	u1551
  2552  0017EE  803A               	bsf	(??___ftmul+1)& (0+255),0,c
  2553  0017F0                     u1551:
  2554  0017F0  5039               	movf	??___ftmul,w,c
  2555  0017F2  6E41               	movwf	___ftmul@sign,c
  2556  0017F4  5041               	movf	___ftmul@sign,w,c
  2557  0017F6  A4D8               	btfss	status,2,c
  2558  0017F8  D007               	goto	l1707
  2559  0017FA  0E00               	movlw	0
  2560  0017FC  6E33               	movwf	?___ftmul,c
  2561  0017FE  0E00               	movlw	0
  2562  001800  6E34               	movwf	?___ftmul+1,c
  2563  001802  0E00               	movlw	0
  2564  001804  6E35               	movwf	?___ftmul+2,c
  2565  001806  0012               	return	
  2566  001808                     l1707:
  2567  001808  5041               	movf	___ftmul@sign,w,c
  2568  00180A  0F7B               	addlw	123
  2569  00180C  263C               	addwf	___ftmul@exp,f,c
  2570  00180E  C035  F041         	movff	___ftmul@f1+2,___ftmul@sign
  2571  001812  5038               	movf	___ftmul@f2+2,w,c
  2572  001814  1A41               	xorwf	___ftmul@sign,f,c
  2573  001816  0E80               	movlw	128
  2574  001818  1641               	andwf	___ftmul@sign,f,c
  2575  00181A  8E34               	bsf	___ftmul@f1+1,7,c
  2576  00181C  8E37               	bsf	___ftmul@f2+1,7,c
  2577  00181E  0EFF               	movlw	255
  2578  001820  1636               	andwf	___ftmul@f2,f,c
  2579  001822  0EFF               	movlw	255
  2580  001824  1637               	andwf	___ftmul@f2+1,f,c
  2581  001826  0E00               	movlw	0
  2582  001828  1638               	andwf	___ftmul@f2+2,f,c
  2583  00182A  0E00               	movlw	0
  2584  00182C  6E3D               	movwf	___ftmul@f3_as_product,c
  2585  00182E  0E00               	movlw	0
  2586  001830  6E3E               	movwf	___ftmul@f3_as_product+1,c
  2587  001832  0E00               	movlw	0
  2588  001834  6E3F               	movwf	___ftmul@f3_as_product+2,c
  2589  001836  0E07               	movlw	7
  2590  001838  6E40               	movwf	___ftmul@cntr,c
  2591  00183A                     l1721:
  2592  00183A  A033               	btfss	___ftmul@f1,0,c
  2593  00183C  D006               	goto	l1725
  2594  00183E  5036               	movf	___ftmul@f2,w,c
  2595  001840  263D               	addwf	___ftmul@f3_as_product,f,c
  2596  001842  5037               	movf	___ftmul@f2+1,w,c
  2597  001844  223E               	addwfc	___ftmul@f3_as_product+1,f,c
  2598  001846  5038               	movf	___ftmul@f2+2,w,c
  2599  001848  223F               	addwfc	___ftmul@f3_as_product+2,f,c
  2600  00184A                     l1725:
  2601  00184A  90D8               	bcf	status,0,c
  2602  00184C  3235               	rrcf	___ftmul@f1+2,f,c
  2603  00184E  3234               	rrcf	___ftmul@f1+1,f,c
  2604  001850  3233               	rrcf	___ftmul@f1,f,c
  2605  001852  90D8               	bcf	status,0,c
  2606  001854  3636               	rlcf	___ftmul@f2,f,c
  2607  001856  3637               	rlcf	___ftmul@f2+1,f,c
  2608  001858  3638               	rlcf	___ftmul@f2+2,f,c
  2609  00185A  2E40               	decfsz	___ftmul@cntr,f,c
  2610  00185C  D7EE               	goto	l1721
  2611  00185E  0E09               	movlw	9
  2612  001860  6E40               	movwf	___ftmul@cntr,c
  2613  001862                     l1731:
  2614  001862  A033               	btfss	___ftmul@f1,0,c
  2615  001864  D006               	goto	l1735
  2616  001866  5036               	movf	___ftmul@f2,w,c
  2617  001868  263D               	addwf	___ftmul@f3_as_product,f,c
  2618  00186A  5037               	movf	___ftmul@f2+1,w,c
  2619  00186C  223E               	addwfc	___ftmul@f3_as_product+1,f,c
  2620  00186E  5038               	movf	___ftmul@f2+2,w,c
  2621  001870  223F               	addwfc	___ftmul@f3_as_product+2,f,c
  2622  001872                     l1735:
  2623  001872  90D8               	bcf	status,0,c
  2624  001874  3235               	rrcf	___ftmul@f1+2,f,c
  2625  001876  3234               	rrcf	___ftmul@f1+1,f,c
  2626  001878  3233               	rrcf	___ftmul@f1,f,c
  2627  00187A  90D8               	bcf	status,0,c
  2628  00187C  323F               	rrcf	___ftmul@f3_as_product+2,f,c
  2629  00187E  323E               	rrcf	___ftmul@f3_as_product+1,f,c
  2630  001880  323D               	rrcf	___ftmul@f3_as_product,f,c
  2631  001882  2E40               	decfsz	___ftmul@cntr,f,c
  2632  001884  D7EE               	goto	l1731
  2633  001886  C03D  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  2634  00188A  C03E  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2635  00188E  C03F  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2636  001892  C03C  F012         	movff	___ftmul@exp,___ftpack@exp
  2637  001896  C041  F013         	movff	___ftmul@sign,___ftpack@sign
  2638  00189A  EC08  F00E         	call	___ftpack	;wreg free
  2639  00189E  C00F  F033         	movff	?___ftpack,?___ftmul
  2640  0018A2  C010  F034         	movff	?___ftpack+1,?___ftmul+1
  2641  0018A6  C011  F035         	movff	?___ftpack+2,?___ftmul+2
  2642  0018AA  0012               	return	
  2643  0018AC                     __end_of___ftmul:
  2644                           	opt stack 0
  2645                           tblptru	equ	0xFF8
  2646                           tblptrh	equ	0xFF7
  2647                           tblptrl	equ	0xFF6
  2648                           tablat	equ	0xFF5
  2649                           prodh	equ	0xFF4
  2650                           prodl	equ	0xFF3
  2651                           intcon	equ	0xFF2
  2652                           postinc0	equ	0xFEE
  2653                           wreg	equ	0xFE8
  2654                           postdec1	equ	0xFE5
  2655                           fsr1l	equ	0xFE1
  2656                           postinc2	equ	0xFDE
  2657                           postdec2	equ	0xFDD
  2658                           fsr2h	equ	0xFDA
  2659                           fsr2l	equ	0xFD9
  2660                           status	equ	0xFD8
  2661                           
  2662 ;; *************** function ___ftge *****************
  2663 ;; Defined at:
  2664 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  ff1             3   20[COMRAM] float 
  2667 ;;  ff2             3   23[COMRAM] float 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;		None               void
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2679 ;;      Params:         6       0       0       0       0       0       0       0       0
  2680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2681 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2682 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2683 ;;Total ram usage:        9 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_findTargetFreqs
  2690 ;;		_displayOutOfTune
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text8
  2695  001CBE                     __ptext8:
  2696                           	opt stack 0
  2697  001CBE                     ___ftge:
  2698                           	opt stack 28
  2699                           
  2700                           ;incstack = 0
  2701  001CBE  AE17               	btfss	___ftge@ff1+2,7,c
  2702  001CC0  D016               	goto	l1747
  2703  001CC2  C015  F01B         	movff	___ftge@ff1,??___ftge
  2704  001CC6  C016  F01C         	movff	___ftge@ff1+1,??___ftge+1
  2705  001CCA  C017  F01D         	movff	___ftge@ff1+2,??___ftge+2
  2706  001CCE  1E1B               	comf	??___ftge,f,c
  2707  001CD0  1E1C               	comf	??___ftge+1,f,c
  2708  001CD2  1E1D               	comf	??___ftge+2,f,c
  2709  001CD4  2A1B               	incf	??___ftge,f,c
  2710  001CD6  0E00               	movlw	0
  2711  001CD8  221C               	addwfc	??___ftge+1,f,c
  2712  001CDA  221D               	addwfc	??___ftge+2,f,c
  2713  001CDC  0E00               	movlw	0
  2714  001CDE  241B               	addwf	??___ftge,w,c
  2715  001CE0  6E15               	movwf	___ftge@ff1,c
  2716  001CE2  0E00               	movlw	0
  2717  001CE4  201C               	addwfc	??___ftge+1,w,c
  2718  001CE6  6E16               	movwf	___ftge@ff1+1,c
  2719  001CE8  0E80               	movlw	128
  2720  001CEA  201D               	addwfc	??___ftge+2,w,c
  2721  001CEC  6E17               	movwf	___ftge@ff1+2,c
  2722  001CEE                     l1747:
  2723  001CEE  AE1A               	btfss	___ftge@ff2+2,7,c
  2724  001CF0  D016               	goto	l1751
  2725  001CF2  C018  F01B         	movff	___ftge@ff2,??___ftge
  2726  001CF6  C019  F01C         	movff	___ftge@ff2+1,??___ftge+1
  2727  001CFA  C01A  F01D         	movff	___ftge@ff2+2,??___ftge+2
  2728  001CFE  1E1B               	comf	??___ftge,f,c
  2729  001D00  1E1C               	comf	??___ftge+1,f,c
  2730  001D02  1E1D               	comf	??___ftge+2,f,c
  2731  001D04  2A1B               	incf	??___ftge,f,c
  2732  001D06  0E00               	movlw	0
  2733  001D08  221C               	addwfc	??___ftge+1,f,c
  2734  001D0A  221D               	addwfc	??___ftge+2,f,c
  2735  001D0C  0E00               	movlw	0
  2736  001D0E  241B               	addwf	??___ftge,w,c
  2737  001D10  6E18               	movwf	___ftge@ff2,c
  2738  001D12  0E00               	movlw	0
  2739  001D14  201C               	addwfc	??___ftge+1,w,c
  2740  001D16  6E19               	movwf	___ftge@ff2+1,c
  2741  001D18  0E80               	movlw	128
  2742  001D1A  201D               	addwfc	??___ftge+2,w,c
  2743  001D1C  6E1A               	movwf	___ftge@ff2+2,c
  2744  001D1E                     l1751:
  2745  001D1E  0E00               	movlw	0
  2746  001D20  1A15               	xorwf	___ftge@ff1,f,c
  2747  001D22  0E00               	movlw	0
  2748  001D24  1A16               	xorwf	___ftge@ff1+1,f,c
  2749  001D26  0E80               	movlw	128
  2750  001D28  1A17               	xorwf	___ftge@ff1+2,f,c
  2751  001D2A  0E00               	movlw	0
  2752  001D2C  1A18               	xorwf	___ftge@ff2,f,c
  2753  001D2E  0E00               	movlw	0
  2754  001D30  1A19               	xorwf	___ftge@ff2+1,f,c
  2755  001D32  0E80               	movlw	128
  2756  001D34  1A1A               	xorwf	___ftge@ff2+2,f,c
  2757  001D36  5018               	movf	___ftge@ff2,w,c
  2758  001D38  5C15               	subwf	___ftge@ff1,w,c
  2759  001D3A  5019               	movf	___ftge@ff2+1,w,c
  2760  001D3C  5816               	subwfb	___ftge@ff1+1,w,c
  2761  001D3E  501A               	movf	___ftge@ff2+2,w,c
  2762  001D40  5817               	subwfb	___ftge@ff1+2,w,c
  2763  001D42  B0D8               	btfsc	status,0,c
  2764  001D44  D002               	goto	l1757
  2765  001D46  90D8               	bcf	status,0,c
  2766  001D48  0012               	return	
  2767  001D4A                     l1757:
  2768  001D4A  80D8               	bsf	status,0,c
  2769  001D4C  0012               	return	
  2770  001D4E                     __end_of___ftge:
  2771                           	opt stack 0
  2772                           tblptru	equ	0xFF8
  2773                           tblptrh	equ	0xFF7
  2774                           tblptrl	equ	0xFF6
  2775                           tablat	equ	0xFF5
  2776                           prodh	equ	0xFF4
  2777                           prodl	equ	0xFF3
  2778                           intcon	equ	0xFF2
  2779                           postinc0	equ	0xFEE
  2780                           wreg	equ	0xFE8
  2781                           postdec1	equ	0xFE5
  2782                           fsr1l	equ	0xFE1
  2783                           postinc2	equ	0xFDE
  2784                           postdec2	equ	0xFDD
  2785                           fsr2h	equ	0xFDA
  2786                           fsr2l	equ	0xFD9
  2787                           status	equ	0xFD8
  2788                           
  2789 ;; *************** function ___ftadd *****************
  2790 ;; Defined at:
  2791 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  f1              3   23[COMRAM] float 
  2794 ;;  f2              3   26[COMRAM] float 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  exp1            1   34[COMRAM] unsigned char 
  2797 ;;  exp2            1   33[COMRAM] unsigned char 
  2798 ;;  sign            1   32[COMRAM] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  3   23[COMRAM] float 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2808 ;;      Params:         6       0       0       0       0       0       0       0       0
  2809 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2810 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2811 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2812 ;;Total ram usage:       12 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    2
  2815 ;; This function calls:
  2816 ;;		___ftpack
  2817 ;; This function is called by:
  2818 ;;		_displayOutOfTune
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text9
  2823  0014C6                     __ptext9:
  2824                           	opt stack 0
  2825  0014C6                     ___ftadd:
  2826                           	opt stack 27
  2827                           
  2828                           ;incstack = 0
  2829  0014C6  C01A  F01E         	movff	___ftadd@f1+2,??___ftadd
  2830  0014CA  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  2831  0014CC  6A20               	clrf	(??___ftadd+2)& (0+255),c
  2832  0014CE  3419               	rlcf	___ftadd@f1+1,w,c
  2833  0014D0  361E               	rlcf	??___ftadd& (0+255),f,c
  2834  0014D2  E301               	bnc	u1271
  2835  0014D4  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  2836  0014D6                     u1271:
  2837  0014D6  501E               	movf	??___ftadd,w,c
  2838  0014D8  6E23               	movwf	___ftadd@exp1,c
  2839  0014DA  C01D  F01E         	movff	___ftadd@f2+2,??___ftadd
  2840  0014DE  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  2841  0014E0  6A20               	clrf	(??___ftadd+2)& (0+255),c
  2842  0014E2  341C               	rlcf	___ftadd@f2+1,w,c
  2843  0014E4  361E               	rlcf	??___ftadd& (0+255),f,c
  2844  0014E6  E301               	bnc	u1281
  2845  0014E8  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  2846  0014EA                     u1281:
  2847  0014EA  501E               	movf	??___ftadd,w,c
  2848  0014EC  6E22               	movwf	___ftadd@exp2,c
  2849  0014EE  5023               	movf	___ftadd@exp1,w,c
  2850  0014F0  B4D8               	btfsc	status,2,c
  2851  0014F2  D00B               	goto	l447
  2852  0014F4  5022               	movf	___ftadd@exp2,w,c
  2853  0014F6  5C23               	subwf	___ftadd@exp1,w,c
  2854  0014F8  B0D8               	btfsc	status,0,c
  2855  0014FA  D00E               	goto	l1587
  2856  0014FC  5023               	movf	___ftadd@exp1,w,c
  2857  0014FE  0800               	sublw	0
  2858  001500  2422               	addwf	___ftadd@exp2,w,c
  2859  001502  6E1E               	movwf	??___ftadd& (0+255),c
  2860  001504  0E18               	movlw	24
  2861  001506  641E               	cpfsgt	??___ftadd,c
  2862  001508  D007               	goto	l1587
  2863  00150A                     l447:
  2864  00150A  C01B  F018         	movff	___ftadd@f2,?___ftadd
  2865  00150E  C01C  F019         	movff	___ftadd@f2+1,?___ftadd+1
  2866  001512  C01D  F01A         	movff	___ftadd@f2+2,?___ftadd+2
  2867  001516  0012               	return	
  2868  001518                     l1587:
  2869  001518  5022               	movf	___ftadd@exp2,w,c
  2870  00151A  B4D8               	btfsc	status,2,c
  2871  00151C  D00B               	goto	l451
  2872  00151E  5023               	movf	___ftadd@exp1,w,c
  2873  001520  5C22               	subwf	___ftadd@exp2,w,c
  2874  001522  B0D8               	btfsc	status,0,c
  2875  001524  D00E               	goto	l1593
  2876  001526  5022               	movf	___ftadd@exp2,w,c
  2877  001528  0800               	sublw	0
  2878  00152A  2423               	addwf	___ftadd@exp1,w,c
  2879  00152C  6E1E               	movwf	??___ftadd& (0+255),c
  2880  00152E  0E18               	movlw	24
  2881  001530  641E               	cpfsgt	??___ftadd,c
  2882  001532  D007               	goto	l1593
  2883  001534                     l451:
  2884  001534  C018  F018         	movff	___ftadd@f1,?___ftadd
  2885  001538  C019  F019         	movff	___ftadd@f1+1,?___ftadd+1
  2886  00153C  C01A  F01A         	movff	___ftadd@f1+2,?___ftadd+2
  2887  001540  0012               	return	
  2888  001542                     l1593:
  2889  001542  0E06               	movlw	6
  2890  001544  6E21               	movwf	___ftadd@sign,c
  2891  001546  BE1A               	btfsc	___ftadd@f1+2,7,c
  2892  001548  8E21               	bsf	___ftadd@sign,7,c
  2893  00154A  BE1D               	btfsc	___ftadd@f2+2,7,c
  2894  00154C  8C21               	bsf	___ftadd@sign,6,c
  2895  00154E  8E19               	bsf	___ftadd@f1+1,7,c
  2896  001550  0EFF               	movlw	255
  2897  001552  1618               	andwf	___ftadd@f1,f,c
  2898  001554  0EFF               	movlw	255
  2899  001556  1619               	andwf	___ftadd@f1+1,f,c
  2900  001558  0E00               	movlw	0
  2901  00155A  161A               	andwf	___ftadd@f1+2,f,c
  2902  00155C  8E1C               	bsf	___ftadd@f2+1,7,c
  2903  00155E  0EFF               	movlw	255
  2904  001560  161B               	andwf	___ftadd@f2,f,c
  2905  001562  0EFF               	movlw	255
  2906  001564  161C               	andwf	___ftadd@f2+1,f,c
  2907  001566  0E00               	movlw	0
  2908  001568  161D               	andwf	___ftadd@f2+2,f,c
  2909  00156A  5022               	movf	___ftadd@exp2,w,c
  2910  00156C  5C23               	subwf	___ftadd@exp1,w,c
  2911  00156E  B0D8               	btfsc	status,0,c
  2912  001570  D01B               	goto	l1619
  2913  001572                     l1609:
  2914  001572  90D8               	bcf	status,0,c
  2915  001574  361B               	rlcf	___ftadd@f2,f,c
  2916  001576  361C               	rlcf	___ftadd@f2+1,f,c
  2917  001578  361D               	rlcf	___ftadd@f2+2,f,c
  2918  00157A  0622               	decf	___ftadd@exp2,f,c
  2919  00157C  5023               	movf	___ftadd@exp1,w,c
  2920  00157E  1822               	xorwf	___ftadd@exp2,w,c
  2921  001580  B4D8               	btfsc	status,2,c
  2922  001582  D00D               	goto	l1617
  2923  001584  0621               	decf	___ftadd@sign,f,c
  2924  001586  C021  F01E         	movff	___ftadd@sign,??___ftadd
  2925  00158A  0E07               	movlw	7
  2926  00158C  161E               	andwf	??___ftadd,f,c
  2927  00158E  B4D8               	btfsc	status,2,c
  2928  001590  D006               	goto	l1617
  2929  001592  D7EF               	goto	l1609
  2930  001594                     l1615:
  2931  001594  90D8               	bcf	status,0,c
  2932  001596  321A               	rrcf	___ftadd@f1+2,f,c
  2933  001598  3219               	rrcf	___ftadd@f1+1,f,c
  2934  00159A  3218               	rrcf	___ftadd@f1,f,c
  2935  00159C  2A23               	incf	___ftadd@exp1,f,c
  2936  00159E                     l1617:
  2937  00159E  5022               	movf	___ftadd@exp2,w,c
  2938  0015A0  1823               	xorwf	___ftadd@exp1,w,c
  2939  0015A2  B4D8               	btfsc	status,2,c
  2940  0015A4  D01F               	goto	l462
  2941  0015A6  D7F6               	goto	l1615
  2942  0015A8                     l1619:
  2943  0015A8  5023               	movf	___ftadd@exp1,w,c
  2944  0015AA  5C22               	subwf	___ftadd@exp2,w,c
  2945  0015AC  B0D8               	btfsc	status,0,c
  2946  0015AE  D01A               	goto	l462
  2947  0015B0                     l1621:
  2948  0015B0  90D8               	bcf	status,0,c
  2949  0015B2  3618               	rlcf	___ftadd@f1,f,c
  2950  0015B4  3619               	rlcf	___ftadd@f1+1,f,c
  2951  0015B6  361A               	rlcf	___ftadd@f1+2,f,c
  2952  0015B8  0623               	decf	___ftadd@exp1,f,c
  2953  0015BA  5023               	movf	___ftadd@exp1,w,c
  2954  0015BC  1822               	xorwf	___ftadd@exp2,w,c
  2955  0015BE  B4D8               	btfsc	status,2,c
  2956  0015C0  D00D               	goto	l1629
  2957  0015C2  0621               	decf	___ftadd@sign,f,c
  2958  0015C4  C021  F01E         	movff	___ftadd@sign,??___ftadd
  2959  0015C8  0E07               	movlw	7
  2960  0015CA  161E               	andwf	??___ftadd,f,c
  2961  0015CC  B4D8               	btfsc	status,2,c
  2962  0015CE  D006               	goto	l1629
  2963  0015D0  D7EF               	goto	l1621
  2964  0015D2                     l1627:
  2965  0015D2  90D8               	bcf	status,0,c
  2966  0015D4  321D               	rrcf	___ftadd@f2+2,f,c
  2967  0015D6  321C               	rrcf	___ftadd@f2+1,f,c
  2968  0015D8  321B               	rrcf	___ftadd@f2,f,c
  2969  0015DA  2A22               	incf	___ftadd@exp2,f,c
  2970  0015DC                     l1629:
  2971  0015DC  5022               	movf	___ftadd@exp2,w,c
  2972  0015DE  1823               	xorwf	___ftadd@exp1,w,c
  2973  0015E0  A4D8               	btfss	status,2,c
  2974  0015E2  D7F7               	goto	l1627
  2975  0015E4                     l462:
  2976  0015E4  AE21               	btfss	___ftadd@sign,7,c
  2977  0015E6  D00C               	goto	l471
  2978  0015E8  0EFF               	movlw	255
  2979  0015EA  1A18               	xorwf	___ftadd@f1,f,c
  2980  0015EC  0EFF               	movlw	255
  2981  0015EE  1A19               	xorwf	___ftadd@f1+1,f,c
  2982  0015F0  0EFF               	movlw	255
  2983  0015F2  1A1A               	xorwf	___ftadd@f1+2,f,c
  2984  0015F4  0E01               	movlw	1
  2985  0015F6  2618               	addwf	___ftadd@f1,f,c
  2986  0015F8  0E00               	movlw	0
  2987  0015FA  2219               	addwfc	___ftadd@f1+1,f,c
  2988  0015FC  0E00               	movlw	0
  2989  0015FE  221A               	addwfc	___ftadd@f1+2,f,c
  2990  001600                     l471:
  2991  001600  AC21               	btfss	___ftadd@sign,6,c
  2992  001602  D00C               	goto	l1635
  2993  001604  0EFF               	movlw	255
  2994  001606  1A1B               	xorwf	___ftadd@f2,f,c
  2995  001608  0EFF               	movlw	255
  2996  00160A  1A1C               	xorwf	___ftadd@f2+1,f,c
  2997  00160C  0EFF               	movlw	255
  2998  00160E  1A1D               	xorwf	___ftadd@f2+2,f,c
  2999  001610  0E01               	movlw	1
  3000  001612  261B               	addwf	___ftadd@f2,f,c
  3001  001614  0E00               	movlw	0
  3002  001616  221C               	addwfc	___ftadd@f2+1,f,c
  3003  001618  0E00               	movlw	0
  3004  00161A  221D               	addwfc	___ftadd@f2+2,f,c
  3005  00161C                     l1635:
  3006  00161C  0E00               	movlw	0
  3007  00161E  6E21               	movwf	___ftadd@sign,c
  3008  001620  5018               	movf	___ftadd@f1,w,c
  3009  001622  261B               	addwf	___ftadd@f2,f,c
  3010  001624  5019               	movf	___ftadd@f1+1,w,c
  3011  001626  221C               	addwfc	___ftadd@f2+1,f,c
  3012  001628  501A               	movf	___ftadd@f1+2,w,c
  3013  00162A  221D               	addwfc	___ftadd@f2+2,f,c
  3014  00162C  AE1D               	btfss	___ftadd@f2+2,7,c
  3015  00162E  D00E               	goto	l1645
  3016  001630  0EFF               	movlw	255
  3017  001632  1A1B               	xorwf	___ftadd@f2,f,c
  3018  001634  0EFF               	movlw	255
  3019  001636  1A1C               	xorwf	___ftadd@f2+1,f,c
  3020  001638  0EFF               	movlw	255
  3021  00163A  1A1D               	xorwf	___ftadd@f2+2,f,c
  3022  00163C  0E01               	movlw	1
  3023  00163E  261B               	addwf	___ftadd@f2,f,c
  3024  001640  0E00               	movlw	0
  3025  001642  221C               	addwfc	___ftadd@f2+1,f,c
  3026  001644  0E00               	movlw	0
  3027  001646  221D               	addwfc	___ftadd@f2+2,f,c
  3028  001648  0E01               	movlw	1
  3029  00164A  6E21               	movwf	___ftadd@sign,c
  3030  00164C                     l1645:
  3031  00164C  C01B  F00F         	movff	___ftadd@f2,___ftpack@arg
  3032  001650  C01C  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  3033  001654  C01D  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  3034  001658  C023  F012         	movff	___ftadd@exp1,___ftpack@exp
  3035  00165C  C021  F013         	movff	___ftadd@sign,___ftpack@sign
  3036  001660  EC08  F00E         	call	___ftpack	;wreg free
  3037  001664  C00F  F018         	movff	?___ftpack,?___ftadd
  3038  001668  C010  F019         	movff	?___ftpack+1,?___ftadd+1
  3039  00166C  C011  F01A         	movff	?___ftpack+2,?___ftadd+2
  3040  001670  0012               	return	
  3041  001672                     __end_of___ftadd:
  3042                           	opt stack 0
  3043                           tblptru	equ	0xFF8
  3044                           tblptrh	equ	0xFF7
  3045                           tblptrl	equ	0xFF6
  3046                           tablat	equ	0xFF5
  3047                           prodh	equ	0xFF4
  3048                           prodl	equ	0xFF3
  3049                           intcon	equ	0xFF2
  3050                           postinc0	equ	0xFEE
  3051                           wreg	equ	0xFE8
  3052                           postdec1	equ	0xFE5
  3053                           fsr1l	equ	0xFE1
  3054                           postinc2	equ	0xFDE
  3055                           postdec2	equ	0xFDD
  3056                           fsr2h	equ	0xFDA
  3057                           fsr2l	equ	0xFD9
  3058                           status	equ	0xFD8
  3059                           
  3060 ;; *************** function _displayClosestNote *****************
  3061 ;; Defined at:
  3062 ;;		line 516 in file "yesgoodfinalprojectpleasework.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  closestNote     3   50[COMRAM] float 
  3065 ;;  firstDisplay    2   53[COMRAM] PTR unsigned char 
  3066 ;;		 -> main@firstDisplay(8), 
  3067 ;;  secondDispla    2   55[COMRAM] PTR unsigned char 
  3068 ;;		 -> main@secondDisplay(8), 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;		None               void
  3073 ;; Registers used:
  3074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3080 ;;      Params:         7       0       0       0       0       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3083 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3084 ;;Total ram usage:        7 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    4
  3087 ;; This function calls:
  3088 ;;		___ftdiv
  3089 ;;		_storeImageD1
  3090 ;;		_storeImageD2
  3091 ;;		_update_Displays
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text10
  3098  000852                     __ptext10:
  3099                           	opt stack 0
  3100  000852                     _displayClosestNote:
  3101                           	opt stack 26
  3102                           
  3103                           ;yesgoodfinalprojectpleasework.c: 517: if ((closestNote / 27.5) == 1) {
  3104                           
  3105                           ;incstack = 0
  3106  000852  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3107  000856  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3108  00085A  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3109  00085E  0E00               	movlw	0
  3110  000860  6E27               	movwf	___ftdiv@f2,c
  3111  000862  0EDC               	movlw	220
  3112  000864  6E28               	movwf	___ftdiv@f2+1,c
  3113  000866  0E41               	movlw	65
  3114  000868  6E29               	movwf	___ftdiv@f2+2,c
  3115  00086A  EC56  F00C         	call	___ftdiv	;wreg free
  3116  00086E  0E80               	movlw	128
  3117  000870  1825               	xorwf	?___ftdiv+1,w,c
  3118  000872  E123               	bnz	l1997
  3119  000874  0E3F               	movlw	63
  3120  000876  1826               	xorwf	?___ftdiv+2,w,c
  3121  000878  1024               	iorwf	?___ftdiv,w,c
  3122  00087A  A4D8               	btfss	status,2,c
  3123  00087C  D01E               	goto	l1997
  3124                           
  3125                           ;yesgoodfinalprojectpleasework.c: 518: storeImageD1(noteA, firstDisplay);
  3126  00087E  0E09               	movlw	low _noteA
  3127  000880  6E0F               	movwf	storeImageD1@image,c
  3128  000882  0E08               	movlw	high _noteA
  3129  000884  6E10               	movwf	storeImageD1@image+1,c
  3130  000886  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3131  00088A  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3132  00088E  EC10  F010         	call	_storeImageD1	;wreg free
  3133                           
  3134                           ;yesgoodfinalprojectpleasework.c: 519: storeImageD2(blank, secondDisplay);
  3135  000892  0E01               	movlw	low _blank
  3136  000894  6E0F               	movwf	storeImageD2@image,c
  3137  000896  0E08               	movlw	high _blank
  3138  000898  6E10               	movwf	storeImageD2@image+1,c
  3139  00089A  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3140  00089E  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3141  0008A2  ECEF  F00F         	call	_storeImageD2	;wreg free
  3142                           
  3143                           ;yesgoodfinalprojectpleasework.c: 520: update_Displays(firstDisplay, secondDisplay);
  3144  0008A6  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3145  0008AA  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3146  0008AE  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3147  0008B2  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3148  0008B6  EC82  F00F         	call	_update_Displays	;wreg free
  3149  0008BA                     l1997:
  3150                           
  3151                           ;yesgoodfinalprojectpleasework.c: 521: }
  3152                           ;yesgoodfinalprojectpleasework.c: 522: if ((closestNote / 29.14) == 1) {
  3153  0008BA  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3154  0008BE  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3155  0008C2  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3156  0008C6  0E1F               	movlw	31
  3157  0008C8  6E27               	movwf	___ftdiv@f2,c
  3158  0008CA  0EE9               	movlw	233
  3159  0008CC  6E28               	movwf	___ftdiv@f2+1,c
  3160  0008CE  0E41               	movlw	65
  3161  0008D0  6E29               	movwf	___ftdiv@f2+2,c
  3162  0008D2  EC56  F00C         	call	___ftdiv	;wreg free
  3163  0008D6  0E80               	movlw	128
  3164  0008D8  1825               	xorwf	?___ftdiv+1,w,c
  3165  0008DA  E123               	bnz	l2003
  3166  0008DC  0E3F               	movlw	63
  3167  0008DE  1826               	xorwf	?___ftdiv+2,w,c
  3168  0008E0  1024               	iorwf	?___ftdiv,w,c
  3169  0008E2  A4D8               	btfss	status,2,c
  3170  0008E4  D01E               	goto	l2003
  3171                           
  3172                           ;yesgoodfinalprojectpleasework.c: 523: storeImageD1(noteA, firstDisplay);
  3173  0008E6  0E09               	movlw	low _noteA
  3174  0008E8  6E0F               	movwf	storeImageD1@image,c
  3175  0008EA  0E08               	movlw	high _noteA
  3176  0008EC  6E10               	movwf	storeImageD1@image+1,c
  3177  0008EE  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3178  0008F2  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3179  0008F6  EC10  F010         	call	_storeImageD1	;wreg free
  3180                           
  3181                           ;yesgoodfinalprojectpleasework.c: 524: storeImageD2(noteSharp, secondDisplay);
  3182  0008FA  0E49               	movlw	low _noteSharp
  3183  0008FC  6E0F               	movwf	storeImageD2@image,c
  3184  0008FE  0E08               	movlw	high _noteSharp
  3185  000900  6E10               	movwf	storeImageD2@image+1,c
  3186  000902  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3187  000906  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3188  00090A  ECEF  F00F         	call	_storeImageD2	;wreg free
  3189                           
  3190                           ;yesgoodfinalprojectpleasework.c: 525: update_Displays(firstDisplay, secondDisplay);
  3191  00090E  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3192  000912  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3193  000916  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3194  00091A  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3195  00091E  EC82  F00F         	call	_update_Displays	;wreg free
  3196  000922                     l2003:
  3197                           
  3198                           ;yesgoodfinalprojectpleasework.c: 526: }
  3199                           ;yesgoodfinalprojectpleasework.c: 527: if ((closestNote / 30.87) == 1) {
  3200  000922  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3201  000926  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3202  00092A  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3203  00092E  0EF6               	movlw	246
  3204  000930  6E27               	movwf	___ftdiv@f2,c
  3205  000932  0EF6               	movlw	246
  3206  000934  6E28               	movwf	___ftdiv@f2+1,c
  3207  000936  0E41               	movlw	65
  3208  000938  6E29               	movwf	___ftdiv@f2+2,c
  3209  00093A  EC56  F00C         	call	___ftdiv	;wreg free
  3210  00093E  0E80               	movlw	128
  3211  000940  1825               	xorwf	?___ftdiv+1,w,c
  3212  000942  E123               	bnz	l2009
  3213  000944  0E3F               	movlw	63
  3214  000946  1826               	xorwf	?___ftdiv+2,w,c
  3215  000948  1024               	iorwf	?___ftdiv,w,c
  3216  00094A  A4D8               	btfss	status,2,c
  3217  00094C  D01E               	goto	l2009
  3218                           
  3219                           ;yesgoodfinalprojectpleasework.c: 528: storeImageD1(noteB, firstDisplay);
  3220  00094E  0E11               	movlw	low _noteB
  3221  000950  6E0F               	movwf	storeImageD1@image,c
  3222  000952  0E08               	movlw	high _noteB
  3223  000954  6E10               	movwf	storeImageD1@image+1,c
  3224  000956  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3225  00095A  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3226  00095E  EC10  F010         	call	_storeImageD1	;wreg free
  3227                           
  3228                           ;yesgoodfinalprojectpleasework.c: 529: storeImageD2(blank, secondDisplay);
  3229  000962  0E01               	movlw	low _blank
  3230  000964  6E0F               	movwf	storeImageD2@image,c
  3231  000966  0E08               	movlw	high _blank
  3232  000968  6E10               	movwf	storeImageD2@image+1,c
  3233  00096A  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3234  00096E  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3235  000972  ECEF  F00F         	call	_storeImageD2	;wreg free
  3236                           
  3237                           ;yesgoodfinalprojectpleasework.c: 530: update_Displays(firstDisplay, secondDisplay);
  3238  000976  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3239  00097A  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3240  00097E  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3241  000982  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3242  000986  EC82  F00F         	call	_update_Displays	;wreg free
  3243  00098A                     l2009:
  3244                           
  3245                           ;yesgoodfinalprojectpleasework.c: 531: }
  3246                           ;yesgoodfinalprojectpleasework.c: 532: if ((closestNote / 16.35) == 1) {
  3247  00098A  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3248  00098E  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3249  000992  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3250  000996  0ECD               	movlw	205
  3251  000998  6E27               	movwf	___ftdiv@f2,c
  3252  00099A  0E82               	movlw	130
  3253  00099C  6E28               	movwf	___ftdiv@f2+1,c
  3254  00099E  0E41               	movlw	65
  3255  0009A0  6E29               	movwf	___ftdiv@f2+2,c
  3256  0009A2  EC56  F00C         	call	___ftdiv	;wreg free
  3257  0009A6  0E80               	movlw	128
  3258  0009A8  1825               	xorwf	?___ftdiv+1,w,c
  3259  0009AA  E123               	bnz	l2015
  3260  0009AC  0E3F               	movlw	63
  3261  0009AE  1826               	xorwf	?___ftdiv+2,w,c
  3262  0009B0  1024               	iorwf	?___ftdiv,w,c
  3263  0009B2  A4D8               	btfss	status,2,c
  3264  0009B4  D01E               	goto	l2015
  3265                           
  3266                           ;yesgoodfinalprojectpleasework.c: 533: storeImageD1(noteC, firstDisplay);
  3267  0009B6  0E19               	movlw	low _noteC
  3268  0009B8  6E0F               	movwf	storeImageD1@image,c
  3269  0009BA  0E08               	movlw	high _noteC
  3270  0009BC  6E10               	movwf	storeImageD1@image+1,c
  3271  0009BE  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3272  0009C2  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3273  0009C6  EC10  F010         	call	_storeImageD1	;wreg free
  3274                           
  3275                           ;yesgoodfinalprojectpleasework.c: 534: storeImageD2(blank, secondDisplay);
  3276  0009CA  0E01               	movlw	low _blank
  3277  0009CC  6E0F               	movwf	storeImageD2@image,c
  3278  0009CE  0E08               	movlw	high _blank
  3279  0009D0  6E10               	movwf	storeImageD2@image+1,c
  3280  0009D2  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3281  0009D6  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3282  0009DA  ECEF  F00F         	call	_storeImageD2	;wreg free
  3283                           
  3284                           ;yesgoodfinalprojectpleasework.c: 535: update_Displays(firstDisplay, secondDisplay);
  3285  0009DE  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3286  0009E2  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3287  0009E6  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3288  0009EA  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3289  0009EE  EC82  F00F         	call	_update_Displays	;wreg free
  3290  0009F2                     l2015:
  3291                           
  3292                           ;yesgoodfinalprojectpleasework.c: 536: }
  3293                           ;yesgoodfinalprojectpleasework.c: 537: if ((closestNote / 17.32) == 1) {
  3294  0009F2  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3295  0009F6  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3296  0009FA  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3297  0009FE  0E8F               	movlw	143
  3298  000A00  6E27               	movwf	___ftdiv@f2,c
  3299  000A02  0E8A               	movlw	138
  3300  000A04  6E28               	movwf	___ftdiv@f2+1,c
  3301  000A06  0E41               	movlw	65
  3302  000A08  6E29               	movwf	___ftdiv@f2+2,c
  3303  000A0A  EC56  F00C         	call	___ftdiv	;wreg free
  3304  000A0E  0E80               	movlw	128
  3305  000A10  1825               	xorwf	?___ftdiv+1,w,c
  3306  000A12  E123               	bnz	l2021
  3307  000A14  0E3F               	movlw	63
  3308  000A16  1826               	xorwf	?___ftdiv+2,w,c
  3309  000A18  1024               	iorwf	?___ftdiv,w,c
  3310  000A1A  A4D8               	btfss	status,2,c
  3311  000A1C  D01E               	goto	l2021
  3312                           
  3313                           ;yesgoodfinalprojectpleasework.c: 538: storeImageD1(noteC, firstDisplay);
  3314  000A1E  0E19               	movlw	low _noteC
  3315  000A20  6E0F               	movwf	storeImageD1@image,c
  3316  000A22  0E08               	movlw	high _noteC
  3317  000A24  6E10               	movwf	storeImageD1@image+1,c
  3318  000A26  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3319  000A2A  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3320  000A2E  EC10  F010         	call	_storeImageD1	;wreg free
  3321                           
  3322                           ;yesgoodfinalprojectpleasework.c: 539: storeImageD2(noteSharp, secondDisplay);
  3323  000A32  0E49               	movlw	low _noteSharp
  3324  000A34  6E0F               	movwf	storeImageD2@image,c
  3325  000A36  0E08               	movlw	high _noteSharp
  3326  000A38  6E10               	movwf	storeImageD2@image+1,c
  3327  000A3A  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3328  000A3E  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3329  000A42  ECEF  F00F         	call	_storeImageD2	;wreg free
  3330                           
  3331                           ;yesgoodfinalprojectpleasework.c: 540: update_Displays(firstDisplay, secondDisplay);
  3332  000A46  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3333  000A4A  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3334  000A4E  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3335  000A52  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3336  000A56  EC82  F00F         	call	_update_Displays	;wreg free
  3337  000A5A                     l2021:
  3338                           
  3339                           ;yesgoodfinalprojectpleasework.c: 541: }
  3340                           ;yesgoodfinalprojectpleasework.c: 542: if ((closestNote / 18.35) == 1) {
  3341  000A5A  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3342  000A5E  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3343  000A62  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3344  000A66  0ECD               	movlw	205
  3345  000A68  6E27               	movwf	___ftdiv@f2,c
  3346  000A6A  0E92               	movlw	146
  3347  000A6C  6E28               	movwf	___ftdiv@f2+1,c
  3348  000A6E  0E41               	movlw	65
  3349  000A70  6E29               	movwf	___ftdiv@f2+2,c
  3350  000A72  EC56  F00C         	call	___ftdiv	;wreg free
  3351  000A76  0E80               	movlw	128
  3352  000A78  1825               	xorwf	?___ftdiv+1,w,c
  3353  000A7A  E123               	bnz	l2027
  3354  000A7C  0E3F               	movlw	63
  3355  000A7E  1826               	xorwf	?___ftdiv+2,w,c
  3356  000A80  1024               	iorwf	?___ftdiv,w,c
  3357  000A82  A4D8               	btfss	status,2,c
  3358  000A84  D01E               	goto	l2027
  3359                           
  3360                           ;yesgoodfinalprojectpleasework.c: 543: storeImageD1(noteD, firstDisplay);
  3361  000A86  0E21               	movlw	low _noteD
  3362  000A88  6E0F               	movwf	storeImageD1@image,c
  3363  000A8A  0E08               	movlw	high _noteD
  3364  000A8C  6E10               	movwf	storeImageD1@image+1,c
  3365  000A8E  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3366  000A92  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3367  000A96  EC10  F010         	call	_storeImageD1	;wreg free
  3368                           
  3369                           ;yesgoodfinalprojectpleasework.c: 544: storeImageD2(blank, secondDisplay);
  3370  000A9A  0E01               	movlw	low _blank
  3371  000A9C  6E0F               	movwf	storeImageD2@image,c
  3372  000A9E  0E08               	movlw	high _blank
  3373  000AA0  6E10               	movwf	storeImageD2@image+1,c
  3374  000AA2  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3375  000AA6  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3376  000AAA  ECEF  F00F         	call	_storeImageD2	;wreg free
  3377                           
  3378                           ;yesgoodfinalprojectpleasework.c: 545: update_Displays(firstDisplay, secondDisplay);
  3379  000AAE  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3380  000AB2  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3381  000AB6  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3382  000ABA  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3383  000ABE  EC82  F00F         	call	_update_Displays	;wreg free
  3384  000AC2                     l2027:
  3385                           
  3386                           ;yesgoodfinalprojectpleasework.c: 546: }
  3387                           ;yesgoodfinalprojectpleasework.c: 547: if ((closestNote / 19.45) == 1) {
  3388  000AC2  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3389  000AC6  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3390  000ACA  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3391  000ACE  0E9A               	movlw	154
  3392  000AD0  6E27               	movwf	___ftdiv@f2,c
  3393  000AD2  0E9B               	movlw	155
  3394  000AD4  6E28               	movwf	___ftdiv@f2+1,c
  3395  000AD6  0E41               	movlw	65
  3396  000AD8  6E29               	movwf	___ftdiv@f2+2,c
  3397  000ADA  EC56  F00C         	call	___ftdiv	;wreg free
  3398  000ADE  0E80               	movlw	128
  3399  000AE0  1825               	xorwf	?___ftdiv+1,w,c
  3400  000AE2  E123               	bnz	l2033
  3401  000AE4  0E3F               	movlw	63
  3402  000AE6  1826               	xorwf	?___ftdiv+2,w,c
  3403  000AE8  1024               	iorwf	?___ftdiv,w,c
  3404  000AEA  A4D8               	btfss	status,2,c
  3405  000AEC  D01E               	goto	l2033
  3406                           
  3407                           ;yesgoodfinalprojectpleasework.c: 548: storeImageD1(noteD, firstDisplay);
  3408  000AEE  0E21               	movlw	low _noteD
  3409  000AF0  6E0F               	movwf	storeImageD1@image,c
  3410  000AF2  0E08               	movlw	high _noteD
  3411  000AF4  6E10               	movwf	storeImageD1@image+1,c
  3412  000AF6  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3413  000AFA  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3414  000AFE  EC10  F010         	call	_storeImageD1	;wreg free
  3415                           
  3416                           ;yesgoodfinalprojectpleasework.c: 549: storeImageD2(noteSharp, secondDisplay);
  3417  000B02  0E49               	movlw	low _noteSharp
  3418  000B04  6E0F               	movwf	storeImageD2@image,c
  3419  000B06  0E08               	movlw	high _noteSharp
  3420  000B08  6E10               	movwf	storeImageD2@image+1,c
  3421  000B0A  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3422  000B0E  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3423  000B12  ECEF  F00F         	call	_storeImageD2	;wreg free
  3424                           
  3425                           ;yesgoodfinalprojectpleasework.c: 550: update_Displays(firstDisplay, secondDisplay);
  3426  000B16  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3427  000B1A  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3428  000B1E  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3429  000B22  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3430  000B26  EC82  F00F         	call	_update_Displays	;wreg free
  3431  000B2A                     l2033:
  3432                           
  3433                           ;yesgoodfinalprojectpleasework.c: 551: }
  3434                           ;yesgoodfinalprojectpleasework.c: 552: if ((closestNote / 20.6) == 1) {
  3435  000B2A  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3436  000B2E  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3437  000B32  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3438  000B36  0ECD               	movlw	205
  3439  000B38  6E27               	movwf	___ftdiv@f2,c
  3440  000B3A  0EA4               	movlw	164
  3441  000B3C  6E28               	movwf	___ftdiv@f2+1,c
  3442  000B3E  0E41               	movlw	65
  3443  000B40  6E29               	movwf	___ftdiv@f2+2,c
  3444  000B42  EC56  F00C         	call	___ftdiv	;wreg free
  3445  000B46  0E80               	movlw	128
  3446  000B48  1825               	xorwf	?___ftdiv+1,w,c
  3447  000B4A  E123               	bnz	l2039
  3448  000B4C  0E3F               	movlw	63
  3449  000B4E  1826               	xorwf	?___ftdiv+2,w,c
  3450  000B50  1024               	iorwf	?___ftdiv,w,c
  3451  000B52  A4D8               	btfss	status,2,c
  3452  000B54  D01E               	goto	l2039
  3453                           
  3454                           ;yesgoodfinalprojectpleasework.c: 553: storeImageD1(noteE, firstDisplay);
  3455  000B56  0E29               	movlw	low _noteE
  3456  000B58  6E0F               	movwf	storeImageD1@image,c
  3457  000B5A  0E08               	movlw	high _noteE
  3458  000B5C  6E10               	movwf	storeImageD1@image+1,c
  3459  000B5E  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3460  000B62  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3461  000B66  EC10  F010         	call	_storeImageD1	;wreg free
  3462                           
  3463                           ;yesgoodfinalprojectpleasework.c: 554: storeImageD2(blank, secondDisplay);
  3464  000B6A  0E01               	movlw	low _blank
  3465  000B6C  6E0F               	movwf	storeImageD2@image,c
  3466  000B6E  0E08               	movlw	high _blank
  3467  000B70  6E10               	movwf	storeImageD2@image+1,c
  3468  000B72  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3469  000B76  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3470  000B7A  ECEF  F00F         	call	_storeImageD2	;wreg free
  3471                           
  3472                           ;yesgoodfinalprojectpleasework.c: 555: update_Displays(firstDisplay, secondDisplay);
  3473  000B7E  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3474  000B82  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3475  000B86  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3476  000B8A  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3477  000B8E  EC82  F00F         	call	_update_Displays	;wreg free
  3478  000B92                     l2039:
  3479                           
  3480                           ;yesgoodfinalprojectpleasework.c: 556: }
  3481                           ;yesgoodfinalprojectpleasework.c: 557: if ((closestNote / 21.83) == 1) {
  3482  000B92  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3483  000B96  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3484  000B9A  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3485  000B9E  0EA4               	movlw	164
  3486  000BA0  6E27               	movwf	___ftdiv@f2,c
  3487  000BA2  0EAE               	movlw	174
  3488  000BA4  6E28               	movwf	___ftdiv@f2+1,c
  3489  000BA6  0E41               	movlw	65
  3490  000BA8  6E29               	movwf	___ftdiv@f2+2,c
  3491  000BAA  EC56  F00C         	call	___ftdiv	;wreg free
  3492  000BAE  0E80               	movlw	128
  3493  000BB0  1825               	xorwf	?___ftdiv+1,w,c
  3494  000BB2  E123               	bnz	l2045
  3495  000BB4  0E3F               	movlw	63
  3496  000BB6  1826               	xorwf	?___ftdiv+2,w,c
  3497  000BB8  1024               	iorwf	?___ftdiv,w,c
  3498  000BBA  A4D8               	btfss	status,2,c
  3499  000BBC  D01E               	goto	l2045
  3500                           
  3501                           ;yesgoodfinalprojectpleasework.c: 558: storeImageD1(noteF, firstDisplay);
  3502  000BBE  0E31               	movlw	low _noteF
  3503  000BC0  6E0F               	movwf	storeImageD1@image,c
  3504  000BC2  0E08               	movlw	high _noteF
  3505  000BC4  6E10               	movwf	storeImageD1@image+1,c
  3506  000BC6  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3507  000BCA  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3508  000BCE  EC10  F010         	call	_storeImageD1	;wreg free
  3509                           
  3510                           ;yesgoodfinalprojectpleasework.c: 559: storeImageD2(blank, secondDisplay);
  3511  000BD2  0E01               	movlw	low _blank
  3512  000BD4  6E0F               	movwf	storeImageD2@image,c
  3513  000BD6  0E08               	movlw	high _blank
  3514  000BD8  6E10               	movwf	storeImageD2@image+1,c
  3515  000BDA  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3516  000BDE  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3517  000BE2  ECEF  F00F         	call	_storeImageD2	;wreg free
  3518                           
  3519                           ;yesgoodfinalprojectpleasework.c: 560: update_Displays(firstDisplay, secondDisplay);
  3520  000BE6  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3521  000BEA  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3522  000BEE  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3523  000BF2  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3524  000BF6  EC82  F00F         	call	_update_Displays	;wreg free
  3525  000BFA                     l2045:
  3526                           
  3527                           ;yesgoodfinalprojectpleasework.c: 561: }
  3528                           ;yesgoodfinalprojectpleasework.c: 562: if ((closestNote / 23.12) == 1) {
  3529  000BFA  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3530  000BFE  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3531  000C02  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3532  000C06  0EF6               	movlw	246
  3533  000C08  6E27               	movwf	___ftdiv@f2,c
  3534  000C0A  0EB8               	movlw	184
  3535  000C0C  6E28               	movwf	___ftdiv@f2+1,c
  3536  000C0E  0E41               	movlw	65
  3537  000C10  6E29               	movwf	___ftdiv@f2+2,c
  3538  000C12  EC56  F00C         	call	___ftdiv	;wreg free
  3539  000C16  0E80               	movlw	128
  3540  000C18  1825               	xorwf	?___ftdiv+1,w,c
  3541  000C1A  E123               	bnz	l2051
  3542  000C1C  0E3F               	movlw	63
  3543  000C1E  1826               	xorwf	?___ftdiv+2,w,c
  3544  000C20  1024               	iorwf	?___ftdiv,w,c
  3545  000C22  A4D8               	btfss	status,2,c
  3546  000C24  D01E               	goto	l2051
  3547                           
  3548                           ;yesgoodfinalprojectpleasework.c: 563: storeImageD1(noteF, firstDisplay);
  3549  000C26  0E31               	movlw	low _noteF
  3550  000C28  6E0F               	movwf	storeImageD1@image,c
  3551  000C2A  0E08               	movlw	high _noteF
  3552  000C2C  6E10               	movwf	storeImageD1@image+1,c
  3553  000C2E  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3554  000C32  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3555  000C36  EC10  F010         	call	_storeImageD1	;wreg free
  3556                           
  3557                           ;yesgoodfinalprojectpleasework.c: 564: storeImageD2(noteSharp, secondDisplay);
  3558  000C3A  0E49               	movlw	low _noteSharp
  3559  000C3C  6E0F               	movwf	storeImageD2@image,c
  3560  000C3E  0E08               	movlw	high _noteSharp
  3561  000C40  6E10               	movwf	storeImageD2@image+1,c
  3562  000C42  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3563  000C46  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3564  000C4A  ECEF  F00F         	call	_storeImageD2	;wreg free
  3565                           
  3566                           ;yesgoodfinalprojectpleasework.c: 565: update_Displays(firstDisplay, secondDisplay);
  3567  000C4E  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3568  000C52  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3569  000C56  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3570  000C5A  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3571  000C5E  EC82  F00F         	call	_update_Displays	;wreg free
  3572  000C62                     l2051:
  3573                           
  3574                           ;yesgoodfinalprojectpleasework.c: 566: }
  3575                           ;yesgoodfinalprojectpleasework.c: 567: if ((closestNote / 24.5) == 1) {
  3576  000C62  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3577  000C66  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3578  000C6A  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3579  000C6E  0E00               	movlw	0
  3580  000C70  6E27               	movwf	___ftdiv@f2,c
  3581  000C72  0EC4               	movlw	196
  3582  000C74  6E28               	movwf	___ftdiv@f2+1,c
  3583  000C76  0E41               	movlw	65
  3584  000C78  6E29               	movwf	___ftdiv@f2+2,c
  3585  000C7A  EC56  F00C         	call	___ftdiv	;wreg free
  3586  000C7E  0E80               	movlw	128
  3587  000C80  1825               	xorwf	?___ftdiv+1,w,c
  3588  000C82  E123               	bnz	l2057
  3589  000C84  0E3F               	movlw	63
  3590  000C86  1826               	xorwf	?___ftdiv+2,w,c
  3591  000C88  1024               	iorwf	?___ftdiv,w,c
  3592  000C8A  A4D8               	btfss	status,2,c
  3593  000C8C  D01E               	goto	l2057
  3594                           
  3595                           ;yesgoodfinalprojectpleasework.c: 568: storeImageD1(noteG, firstDisplay);
  3596  000C8E  0E41               	movlw	low _noteG
  3597  000C90  6E0F               	movwf	storeImageD1@image,c
  3598  000C92  0E08               	movlw	high _noteG
  3599  000C94  6E10               	movwf	storeImageD1@image+1,c
  3600  000C96  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3601  000C9A  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3602  000C9E  EC10  F010         	call	_storeImageD1	;wreg free
  3603                           
  3604                           ;yesgoodfinalprojectpleasework.c: 569: storeImageD2(blank, secondDisplay);
  3605  000CA2  0E01               	movlw	low _blank
  3606  000CA4  6E0F               	movwf	storeImageD2@image,c
  3607  000CA6  0E08               	movlw	high _blank
  3608  000CA8  6E10               	movwf	storeImageD2@image+1,c
  3609  000CAA  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3610  000CAE  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3611  000CB2  ECEF  F00F         	call	_storeImageD2	;wreg free
  3612                           
  3613                           ;yesgoodfinalprojectpleasework.c: 570: update_Displays(firstDisplay, secondDisplay);
  3614  000CB6  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3615  000CBA  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3616  000CBE  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3617  000CC2  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3618  000CC6  EC82  F00F         	call	_update_Displays	;wreg free
  3619  000CCA                     l2057:
  3620                           
  3621                           ;yesgoodfinalprojectpleasework.c: 571: }
  3622                           ;yesgoodfinalprojectpleasework.c: 572: if ((closestNote / 25.96) == 1) {
  3623  000CCA  C033  F024         	movff	displayClosestNote@closestNote,___ftdiv@f1
  3624  000CCE  C034  F025         	movff	displayClosestNote@closestNote+1,___ftdiv@f1+1
  3625  000CD2  C035  F026         	movff	displayClosestNote@closestNote+2,___ftdiv@f1+2
  3626  000CD6  0EAE               	movlw	174
  3627  000CD8  6E27               	movwf	___ftdiv@f2,c
  3628  000CDA  0ECF               	movlw	207
  3629  000CDC  6E28               	movwf	___ftdiv@f2+1,c
  3630  000CDE  0E41               	movlw	65
  3631  000CE0  6E29               	movwf	___ftdiv@f2+2,c
  3632  000CE2  EC56  F00C         	call	___ftdiv	;wreg free
  3633  000CE6  0E80               	movlw	128
  3634  000CE8  1825               	xorwf	?___ftdiv+1,w,c
  3635  000CEA  E124               	bnz	l193
  3636  000CEC  0E3F               	movlw	63
  3637  000CEE  1826               	xorwf	?___ftdiv+2,w,c
  3638  000CF0  1024               	iorwf	?___ftdiv,w,c
  3639  000CF2  A4D8               	btfss	status,2,c
  3640  000CF4  0012               	return	
  3641                           
  3642                           ;yesgoodfinalprojectpleasework.c: 573: storeImageD1(noteG, firstDisplay);
  3643  000CF6  0E41               	movlw	low _noteG
  3644  000CF8  6E0F               	movwf	storeImageD1@image,c
  3645  000CFA  0E08               	movlw	high _noteG
  3646  000CFC  6E10               	movwf	storeImageD1@image+1,c
  3647  000CFE  C036  F011         	movff	displayClosestNote@firstDisplay,storeImageD1@firstDisplay
  3648  000D02  C037  F012         	movff	displayClosestNote@firstDisplay+1,storeImageD1@firstDisplay+1
  3649  000D06  EC10  F010         	call	_storeImageD1	;wreg free
  3650                           
  3651                           ;yesgoodfinalprojectpleasework.c: 574: storeImageD2(noteSharp, secondDisplay);
  3652  000D0A  0E49               	movlw	low _noteSharp
  3653  000D0C  6E0F               	movwf	storeImageD2@image,c
  3654  000D0E  0E08               	movlw	high _noteSharp
  3655  000D10  6E10               	movwf	storeImageD2@image+1,c
  3656  000D12  C038  F011         	movff	displayClosestNote@secondDisplay,storeImageD2@secondDisplay
  3657  000D16  C039  F012         	movff	displayClosestNote@secondDisplay+1,storeImageD2@secondDisplay+1
  3658  000D1A  ECEF  F00F         	call	_storeImageD2	;wreg free
  3659                           
  3660                           ;yesgoodfinalprojectpleasework.c: 575: update_Displays(firstDisplay, secondDisplay);
  3661  000D1E  C036  F014         	movff	displayClosestNote@firstDisplay,update_Displays@firstDisplay
  3662  000D22  C037  F015         	movff	displayClosestNote@firstDisplay+1,update_Displays@firstDisplay+1
  3663  000D26  C038  F016         	movff	displayClosestNote@secondDisplay,update_Displays@secondDisplay
  3664  000D2A  C039  F017         	movff	displayClosestNote@secondDisplay+1,update_Displays@secondDisplay+1
  3665  000D2E  EC82  F00F         	call	_update_Displays	;wreg free
  3666  000D32  0012               	return	
  3667  000D34                     l193:
  3668  000D34  0012               	return		;funcret
  3669  000D36                     __end_of_displayClosestNote:
  3670                           	opt stack 0
  3671                           tblptru	equ	0xFF8
  3672                           tblptrh	equ	0xFF7
  3673                           tblptrl	equ	0xFF6
  3674                           tablat	equ	0xFF5
  3675                           prodh	equ	0xFF4
  3676                           prodl	equ	0xFF3
  3677                           intcon	equ	0xFF2
  3678                           postinc0	equ	0xFEE
  3679                           wreg	equ	0xFE8
  3680                           postdec1	equ	0xFE5
  3681                           fsr1l	equ	0xFE1
  3682                           postinc2	equ	0xFDE
  3683                           postdec2	equ	0xFDD
  3684                           fsr2h	equ	0xFDA
  3685                           fsr2l	equ	0xFD9
  3686                           status	equ	0xFD8
  3687                           
  3688 ;; *************** function _update_Displays *****************
  3689 ;; Defined at:
  3690 ;;		line 293 in file "yesgoodfinalprojectpleasework.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  firstDisplay    2   19[COMRAM] PTR unsigned char 
  3693 ;;		 -> main@firstDisplay(8), 
  3694 ;;  secondDispla    2   21[COMRAM] PTR unsigned char 
  3695 ;;		 -> main@secondDisplay(8), 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  i               1   23[COMRAM] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;		None               void
  3700 ;; Registers used:
  3701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3707 ;;      Params:         4       0       0       0       0       0       0       0       0
  3708 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3710 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3711 ;;Total ram usage:        5 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    3
  3714 ;; This function calls:
  3715 ;;		_max7219_write
  3716 ;; This function is called by:
  3717 ;;		_findTargetFreqs
  3718 ;;		_displayClosestNote
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text11
  3723  001F04                     __ptext11:
  3724                           	opt stack 0
  3725  001F04                     _update_Displays:
  3726                           	opt stack 26
  3727                           
  3728                           ;yesgoodfinalprojectpleasework.c: 294: for (char i = 0; i < 8; i++) {
  3729                           
  3730                           ;incstack = 0
  3731  001F04  0E00               	movlw	0
  3732  001F06  6E18               	movwf	update_Displays@i,c
  3733  001F08                     l1541:
  3734  001F08  0E07               	movlw	7
  3735  001F0A  6418               	cpfsgt	update_Displays@i,c
  3736  001F0C  D001               	goto	l79
  3737  001F0E  0012               	return	
  3738  001F10                     l79:
  3739                           
  3740                           ;yesgoodfinalprojectpleasework.c: 295: PORTAbits.RA1 = 0;
  3741  001F10  9280               	bcf	3968,1,c	;volatile
  3742                           
  3743                           ;yesgoodfinalprojectpleasework.c: 296: max7219_write(i + 1, secondDisplay[i]);
  3744  001F12  5018               	movf	update_Displays@i,w,c
  3745  001F14  0D01               	mullw	1
  3746  001F16  50F3               	movf	prodl,w,c
  3747  001F18  2416               	addwf	update_Displays@secondDisplay,w,c
  3748  001F1A  6ED9               	movwf	fsr2l,c
  3749  001F1C  50F4               	movf	prodh,w,c
  3750  001F1E  2017               	addwfc	update_Displays@secondDisplay+1,w,c
  3751  001F20  6EDA               	movwf	fsr2h,c
  3752  001F22  50DF               	movf	indf2,w,c
  3753  001F24  6E12               	movwf	max7219_write@leastSignificantByte,c
  3754  001F26  2818               	incf	update_Displays@i,w,c
  3755  001F28  EC81  F010         	call	_max7219_write
  3756                           
  3757                           ;yesgoodfinalprojectpleasework.c: 297: max7219_write(i + 1, firstDisplay[i]);
  3758  001F2C  5018               	movf	update_Displays@i,w,c
  3759  001F2E  0D01               	mullw	1
  3760  001F30  50F3               	movf	prodl,w,c
  3761  001F32  2414               	addwf	update_Displays@firstDisplay,w,c
  3762  001F34  6ED9               	movwf	fsr2l,c
  3763  001F36  50F4               	movf	prodh,w,c
  3764  001F38  2015               	addwfc	update_Displays@firstDisplay+1,w,c
  3765  001F3A  6EDA               	movwf	fsr2h,c
  3766  001F3C  50DF               	movf	indf2,w,c
  3767  001F3E  6E12               	movwf	max7219_write@leastSignificantByte,c
  3768  001F40  2818               	incf	update_Displays@i,w,c
  3769  001F42  EC81  F010         	call	_max7219_write
  3770                           
  3771                           ;yesgoodfinalprojectpleasework.c: 298: PORTAbits.RA1 = 1;
  3772  001F46  8280               	bsf	3968,1,c	;volatile
  3773                           
  3774                           ;yesgoodfinalprojectpleasework.c: 299: _delay((unsigned long)((5)*(4000000/4000000.0)));
  3775  001F48  F000               	nop	
  3776  001F4A  D000               	nop2		;2 cycle nop
  3777  001F4C  D000               	nop2		;2 cycle nop
  3778                           
  3779                           ;yesgoodfinalprojectpleasework.c: 301: PORTAbits.RA1 = 0;
  3780  001F4E  9280               	bcf	3968,1,c	;volatile
  3781  001F50  2A18               	incf	update_Displays@i,f,c
  3782  001F52  D7DA               	goto	l1541
  3783  001F54                     __end_of_update_Displays:
  3784                           	opt stack 0
  3785                           tblptru	equ	0xFF8
  3786                           tblptrh	equ	0xFF7
  3787                           tblptrl	equ	0xFF6
  3788                           tablat	equ	0xFF5
  3789                           prodh	equ	0xFF4
  3790                           prodl	equ	0xFF3
  3791                           intcon	equ	0xFF2
  3792                           postinc0	equ	0xFEE
  3793                           wreg	equ	0xFE8
  3794                           postdec1	equ	0xFE5
  3795                           fsr1l	equ	0xFE1
  3796                           indf2	equ	0xFDF
  3797                           postinc2	equ	0xFDE
  3798                           postdec2	equ	0xFDD
  3799                           fsr2h	equ	0xFDA
  3800                           fsr2l	equ	0xFD9
  3801                           status	equ	0xFD8
  3802                           
  3803 ;; *************** function _max7219_write *****************
  3804 ;; Defined at:
  3805 ;;		line 288 in file "yesgoodfinalprojectpleasework.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  mostSignific    1    wreg     unsigned char 
  3808 ;;  leastSignifi    1   17[COMRAM] unsigned char 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  mostSignific    1   18[COMRAM] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;		None               void
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3820 ;;      Params:         1       0       0       0       0       0       0       0       0
  3821 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3823 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3824 ;;Total ram usage:        2 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    2
  3827 ;; This function calls:
  3828 ;;		_sendData
  3829 ;; This function is called by:
  3830 ;;		_update_Displays
  3831 ;;		_max7219_init
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text12
  3836  002102                     __ptext12:
  3837                           	opt stack 0
  3838  002102                     _max7219_write:
  3839                           	opt stack 27
  3840                           
  3841                           ;incstack = 0
  3842                           ;max7219_write@mostSignificantByte stored from wreg
  3843  002102  6E13               	movwf	max7219_write@mostSignificantByte,c
  3844                           
  3845                           ;yesgoodfinalprojectpleasework.c: 289: sendData(mostSignificantByte);
  3846  002104  5013               	movf	max7219_write@mostSignificantByte,w,c
  3847  002106  ECCD  F00F         	call	_sendData
  3848                           
  3849                           ;yesgoodfinalprojectpleasework.c: 290: sendData(leastSignificantByte);
  3850  00210A  5012               	movf	max7219_write@leastSignificantByte,w,c
  3851  00210C  ECCD  F00F         	call	_sendData
  3852  002110  0012               	return		;funcret
  3853  002112                     __end_of_max7219_write:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           postdec1	equ	0xFE5
  3865                           fsr1l	equ	0xFE1
  3866                           indf2	equ	0xFDF
  3867                           postinc2	equ	0xFDE
  3868                           postdec2	equ	0xFDD
  3869                           fsr2h	equ	0xFDA
  3870                           fsr2l	equ	0xFD9
  3871                           status	equ	0xFD8
  3872                           
  3873 ;; *************** function _sendData *****************
  3874 ;; Defined at:
  3875 ;;		line 274 in file "yesgoodfinalprojectpleasework.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  data            1    wreg     unsigned char 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  data            1   14[COMRAM] unsigned char 
  3880 ;;  i               2   15[COMRAM] int 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;		None               void
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0
  3891 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3893 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3894 ;;Total ram usage:        3 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    1
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_max7219_write
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text13
  3905  001F9A                     __ptext13:
  3906                           	opt stack 0
  3907  001F9A                     _sendData:
  3908                           	opt stack 27
  3909                           
  3910                           ;incstack = 0
  3911                           ;sendData@data stored from wreg
  3912  001F9A  6E0F               	movwf	sendData@data,c
  3913                           
  3914                           ;yesgoodfinalprojectpleasework.c: 275: for (int i = 0; i < 8; i++, data <<= 1) {
  3915  001F9C  0E00               	movlw	0
  3916  001F9E  6E11               	movwf	sendData@i+1,c
  3917  001FA0  0E00               	movlw	0
  3918  001FA2  6E10               	movwf	sendData@i,c
  3919  001FA4  BE11               	btfsc	sendData@i+1,7,c
  3920  001FA6  D006               	goto	l69
  3921  001FA8  5011               	movf	sendData@i+1,w,c
  3922  001FAA  E117               	bnz	l70
  3923  001FAC  0E08               	movlw	8
  3924  001FAE  5C10               	subwf	sendData@i,w,c
  3925  001FB0  B0D8               	btfsc	status,0,c
  3926  001FB2  D013               	goto	l70
  3927  001FB4                     l69:
  3928                           
  3929                           ;yesgoodfinalprojectpleasework.c: 276: RA2 = 0;
  3930  001FB4  9480               	bcf	3968,2,c	;volatile
  3931                           
  3932                           ;yesgoodfinalprojectpleasework.c: 277: if (data & 0b10000000)
  3933  001FB6  AE0F               	btfss	sendData@data,7,c
  3934  001FB8  D002               	goto	l71
  3935                           
  3936                           ;yesgoodfinalprojectpleasework.c: 278: RA0 = 1;
  3937  001FBA  8080               	bsf	3968,0,c	;volatile
  3938  001FBC  D001               	goto	l72
  3939  001FBE                     l71:
  3940                           
  3941                           ;yesgoodfinalprojectpleasework.c: 279: else
  3942                           ;yesgoodfinalprojectpleasework.c: 280: RA0 = 0;
  3943  001FBE  9080               	bcf	3968,0,c	;volatile
  3944  001FC0                     l72:
  3945                           
  3946                           ;yesgoodfinalprojectpleasework.c: 282: RA2 = 1;
  3947  001FC0  8480               	bsf	3968,2,c	;volatile
  3948                           
  3949                           ;yesgoodfinalprojectpleasework.c: 283: _delay((unsigned long)((5)*(4000000/4000000.0)));
  3950  001FC2  F000               	nop	
  3951  001FC4  D000               	nop2		;2 cycle nop
  3952  001FC6  D000               	nop2		;2 cycle nop
  3953  001FC8  4A10               	infsnz	sendData@i,f,c
  3954  001FCA  2A11               	incf	sendData@i+1,f,c
  3955  001FCC  90D8               	bcf	status,0,c
  3956  001FCE  360F               	rlcf	sendData@data,f,c
  3957  001FD0  BE11               	btfsc	sendData@i+1,7,c
  3958  001FD2  D7F0               	goto	l69
  3959  001FD4  5011               	movf	sendData@i+1,w,c
  3960  001FD6  E101               	bnz	u1100
  3961  001FD8  D7E9               	goto	L2
  3962  001FDA                     u1100:
  3963  001FDA                     l70:
  3964                           
  3965                           ;yesgoodfinalprojectpleasework.c: 284: }
  3966                           ;yesgoodfinalprojectpleasework.c: 285: RA2 = 0;
  3967  001FDA  9480               	bcf	3968,2,c	;volatile
  3968  001FDC  0012               	return		;funcret
  3969  001FDE                     __end_of_sendData:
  3970                           	opt stack 0
  3971                           tblptru	equ	0xFF8
  3972                           tblptrh	equ	0xFF7
  3973                           tblptrl	equ	0xFF6
  3974                           tablat	equ	0xFF5
  3975                           prodh	equ	0xFF4
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           postinc0	equ	0xFEE
  3979                           wreg	equ	0xFE8
  3980                           postdec1	equ	0xFE5
  3981                           fsr1l	equ	0xFE1
  3982                           indf2	equ	0xFDF
  3983                           postinc2	equ	0xFDE
  3984                           postdec2	equ	0xFDD
  3985                           fsr2h	equ	0xFDA
  3986                           fsr2l	equ	0xFD9
  3987                           status	equ	0xFD8
  3988                           
  3989 ;; *************** function _storeImageD2 *****************
  3990 ;; Defined at:
  3991 ;;		line 268 in file "yesgoodfinalprojectpleasework.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  image           2   14[COMRAM] PTR const unsigned char 
  3994 ;;		 -> blank(8), noteFlat(8), noteSharp(8), 
  3995 ;;  secondDispla    2   16[COMRAM] PTR unsigned char 
  3996 ;;		 -> main@secondDisplay(8), 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  i               1   20[COMRAM] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;		None               void
  4001 ;; Registers used:
  4002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4008 ;;      Params:         4       0       0       0       0       0       0       0       0
  4009 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4010 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4011 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4012 ;;Total ram usage:        7 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_findTargetFreqs
  4019 ;;		_displayClosestNote
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text14
  4024  001FDE                     __ptext14:
  4025                           	opt stack 0
  4026  001FDE                     _storeImageD2:
  4027                           	opt stack 28
  4028                           
  4029                           ;yesgoodfinalprojectpleasework.c: 270: for (unsigned char i = 0; i < 8; i++)
  4030                           
  4031                           ;incstack = 0
  4032  001FDE  0E00               	movlw	0
  4033  001FE0  6E15               	movwf	storeImageD2@i,c
  4034  001FE2                     l1529:
  4035  001FE2  0E07               	movlw	7
  4036  001FE4  6415               	cpfsgt	storeImageD2@i,c
  4037  001FE6  D001               	goto	l1533
  4038  001FE8  0012               	return	
  4039  001FEA                     l1533:
  4040                           
  4041                           ;yesgoodfinalprojectpleasework.c: 271: secondDisplay[i] = image[i];
  4042  001FEA  5015               	movf	storeImageD2@i,w,c
  4043  001FEC  0D01               	mullw	1
  4044  001FEE  C00F  F013         	movff	storeImageD2@image,??_storeImageD2
  4045  001FF2  C010  F014         	movff	storeImageD2@image+1,??_storeImageD2+1
  4046  001FF6  50F3               	movf	prodl,w,c
  4047  001FF8  2613               	addwf	??_storeImageD2,f,c
  4048  001FFA  50F4               	movf	prodh,w,c
  4049  001FFC  2214               	addwfc	??_storeImageD2+1,f,c
  4050  001FFE  C013  FFF6         	movff	??_storeImageD2,tblptrl
  4051  002002  C014  FFF7         	movff	??_storeImageD2+1,tblptrh
  4052  002006                     	if	0	;tblptru may be non-zero
  4053  002006                     	endif
  4054  002006                     	if	0	;tblptru may be non-zero
  4055  002006                     	endif
  4056  002006  5015               	movf	storeImageD2@i,w,c
  4057  002008  0D01               	mullw	1
  4058  00200A  50F3               	movf	prodl,w,c
  4059  00200C  2411               	addwf	storeImageD2@secondDisplay,w,c
  4060  00200E  6ED9               	movwf	fsr2l,c
  4061  002010  50F4               	movf	prodh,w,c
  4062  002012  2012               	addwfc	storeImageD2@secondDisplay+1,w,c
  4063  002014  6EDA               	movwf	fsr2h,c
  4064  002016  0008               	tblrd		*
  4065  002018  CFF5 FFDF          	movff	tablat,indf2
  4066  00201C  2A15               	incf	storeImageD2@i,f,c
  4067  00201E  D7E1               	goto	l1529
  4068  002020                     __end_of_storeImageD2:
  4069                           	opt stack 0
  4070                           tblptru	equ	0xFF8
  4071                           tblptrh	equ	0xFF7
  4072                           tblptrl	equ	0xFF6
  4073                           tablat	equ	0xFF5
  4074                           prodh	equ	0xFF4
  4075                           prodl	equ	0xFF3
  4076                           intcon	equ	0xFF2
  4077                           postinc0	equ	0xFEE
  4078                           wreg	equ	0xFE8
  4079                           postdec1	equ	0xFE5
  4080                           fsr1l	equ	0xFE1
  4081                           indf2	equ	0xFDF
  4082                           postinc2	equ	0xFDE
  4083                           postdec2	equ	0xFDD
  4084                           fsr2h	equ	0xFDA
  4085                           fsr2l	equ	0xFD9
  4086                           status	equ	0xFD8
  4087                           
  4088 ;; *************** function _storeImageD1 *****************
  4089 ;; Defined at:
  4090 ;;		line 262 in file "yesgoodfinalprojectpleasework.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  image           2   14[COMRAM] PTR const unsigned char 
  4093 ;;		 -> noteG(8), noteF(8), noteE(8), noteD(8), 
  4094 ;;		 -> noteC(8), noteB(8), noteA(8), noteFlat(8), 
  4095 ;;		 -> noteSharp(8), 
  4096 ;;  firstDisplay    2   16[COMRAM] PTR unsigned char 
  4097 ;;		 -> main@firstDisplay(8), 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  i               1   20[COMRAM] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;		None               void
  4102 ;; Registers used:
  4103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4109 ;;      Params:         4       0       0       0       0       0       0       0       0
  4110 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4111 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4112 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4113 ;;Total ram usage:        7 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    1
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_findTargetFreqs
  4120 ;;		_displayClosestNote
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text15
  4125  002020                     __ptext15:
  4126                           	opt stack 0
  4127  002020                     _storeImageD1:
  4128                           	opt stack 28
  4129                           
  4130                           ;yesgoodfinalprojectpleasework.c: 264: for (unsigned char i = 0; i < 8; i++)
  4131                           
  4132                           ;incstack = 0
  4133  002020  0E00               	movlw	0
  4134  002022  6E15               	movwf	storeImageD1@i,c
  4135  002024                     l1517:
  4136  002024  0E07               	movlw	7
  4137  002026  6415               	cpfsgt	storeImageD1@i,c
  4138  002028  D001               	goto	l1521
  4139  00202A  0012               	return	
  4140  00202C                     l1521:
  4141                           
  4142                           ;yesgoodfinalprojectpleasework.c: 265: firstDisplay[i] = image[i];
  4143  00202C  5015               	movf	storeImageD1@i,w,c
  4144  00202E  0D01               	mullw	1
  4145  002030  C00F  F013         	movff	storeImageD1@image,??_storeImageD1
  4146  002034  C010  F014         	movff	storeImageD1@image+1,??_storeImageD1+1
  4147  002038  50F3               	movf	prodl,w,c
  4148  00203A  2613               	addwf	??_storeImageD1,f,c
  4149  00203C  50F4               	movf	prodh,w,c
  4150  00203E  2214               	addwfc	??_storeImageD1+1,f,c
  4151  002040  C013  FFF6         	movff	??_storeImageD1,tblptrl
  4152  002044  C014  FFF7         	movff	??_storeImageD1+1,tblptrh
  4153  002048                     	if	0	;tblptru may be non-zero
  4154  002048                     	endif
  4155  002048                     	if	0	;tblptru may be non-zero
  4156  002048                     	endif
  4157  002048  5015               	movf	storeImageD1@i,w,c
  4158  00204A  0D01               	mullw	1
  4159  00204C  50F3               	movf	prodl,w,c
  4160  00204E  2411               	addwf	storeImageD1@firstDisplay,w,c
  4161  002050  6ED9               	movwf	fsr2l,c
  4162  002052  50F4               	movf	prodh,w,c
  4163  002054  2012               	addwfc	storeImageD1@firstDisplay+1,w,c
  4164  002056  6EDA               	movwf	fsr2h,c
  4165  002058  0008               	tblrd		*
  4166  00205A  CFF5 FFDF          	movff	tablat,indf2
  4167  00205E  2A15               	incf	storeImageD1@i,f,c
  4168  002060  D7E1               	goto	l1517
  4169  002062                     __end_of_storeImageD1:
  4170                           	opt stack 0
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           prodh	equ	0xFF4
  4176                           prodl	equ	0xFF3
  4177                           intcon	equ	0xFF2
  4178                           postinc0	equ	0xFEE
  4179                           wreg	equ	0xFE8
  4180                           postdec1	equ	0xFE5
  4181                           fsr1l	equ	0xFE1
  4182                           indf2	equ	0xFDF
  4183                           postinc2	equ	0xFDE
  4184                           postdec2	equ	0xFDD
  4185                           fsr2h	equ	0xFDA
  4186                           fsr2l	equ	0xFD9
  4187                           status	equ	0xFD8
  4188                           
  4189 ;; *************** function ___ftdiv *****************
  4190 ;; Defined at:
  4191 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  f1              3   35[COMRAM] float 
  4194 ;;  f2              3   38[COMRAM] float 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  f3              3   45[COMRAM] float 
  4197 ;;  sign            1   49[COMRAM] unsigned char 
  4198 ;;  exp             1   48[COMRAM] unsigned char 
  4199 ;;  cntr            1   44[COMRAM] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  3   35[COMRAM] float 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4209 ;;      Params:         6       0       0       0       0       0       0       0       0
  4210 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4211 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4212 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4213 ;;Total ram usage:       15 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    2
  4216 ;; This function calls:
  4217 ;;		___ftpack
  4218 ;; This function is called by:
  4219 ;;		_displayOutOfTune
  4220 ;;		_displayClosestNote
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text16
  4225  0018AC                     __ptext16:
  4226                           	opt stack 0
  4227  0018AC                     ___ftdiv:
  4228                           	opt stack 27
  4229                           
  4230                           ;incstack = 0
  4231  0018AC  C026  F02A         	movff	___ftdiv@f1+2,??___ftdiv
  4232  0018B0  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  4233  0018B2  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  4234  0018B4  3425               	rlcf	___ftdiv@f1+1,w,c
  4235  0018B6  362A               	rlcf	??___ftdiv& (0+255),f,c
  4236  0018B8  E301               	bnc	u1481
  4237  0018BA  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  4238  0018BC                     u1481:
  4239  0018BC  502A               	movf	??___ftdiv,w,c
  4240  0018BE  6E31               	movwf	___ftdiv@exp,c
  4241  0018C0  5031               	movf	___ftdiv@exp,w,c
  4242  0018C2  A4D8               	btfss	status,2,c
  4243  0018C4  D007               	goto	l1655
  4244  0018C6  0E00               	movlw	0
  4245  0018C8  6E24               	movwf	?___ftdiv,c
  4246  0018CA  0E00               	movlw	0
  4247  0018CC  6E25               	movwf	?___ftdiv+1,c
  4248  0018CE  0E00               	movlw	0
  4249  0018D0  6E26               	movwf	?___ftdiv+2,c
  4250  0018D2  0012               	return	
  4251  0018D4                     l1655:
  4252  0018D4  C029  F02A         	movff	___ftdiv@f2+2,??___ftdiv
  4253  0018D8  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  4254  0018DA  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  4255  0018DC  3428               	rlcf	___ftdiv@f2+1,w,c
  4256  0018DE  362A               	rlcf	??___ftdiv& (0+255),f,c
  4257  0018E0  E301               	bnc	u1501
  4258  0018E2  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  4259  0018E4                     u1501:
  4260  0018E4  502A               	movf	??___ftdiv,w,c
  4261  0018E6  6E32               	movwf	___ftdiv@sign,c
  4262  0018E8  5032               	movf	___ftdiv@sign,w,c
  4263  0018EA  A4D8               	btfss	status,2,c
  4264  0018EC  D007               	goto	l1661
  4265  0018EE  0E00               	movlw	0
  4266  0018F0  6E24               	movwf	?___ftdiv,c
  4267  0018F2  0E00               	movlw	0
  4268  0018F4  6E25               	movwf	?___ftdiv+1,c
  4269  0018F6  0E00               	movlw	0
  4270  0018F8  6E26               	movwf	?___ftdiv+2,c
  4271  0018FA  0012               	return	
  4272  0018FC                     l1661:
  4273  0018FC  0E00               	movlw	0
  4274  0018FE  6E2E               	movwf	___ftdiv@f3,c
  4275  001900  0E00               	movlw	0
  4276  001902  6E2F               	movwf	___ftdiv@f3+1,c
  4277  001904  0E00               	movlw	0
  4278  001906  6E30               	movwf	___ftdiv@f3+2,c
  4279  001908  5032               	movf	___ftdiv@sign,w,c
  4280  00190A  0F89               	addlw	137
  4281  00190C  5E31               	subwf	___ftdiv@exp,f,c
  4282  00190E  C026  F032         	movff	___ftdiv@f1+2,___ftdiv@sign
  4283  001912  5029               	movf	___ftdiv@f2+2,w,c
  4284  001914  1A32               	xorwf	___ftdiv@sign,f,c
  4285  001916  0E80               	movlw	128
  4286  001918  1632               	andwf	___ftdiv@sign,f,c
  4287  00191A  8E25               	bsf	___ftdiv@f1+1,7,c
  4288  00191C  0EFF               	movlw	255
  4289  00191E  1624               	andwf	___ftdiv@f1,f,c
  4290  001920  0EFF               	movlw	255
  4291  001922  1625               	andwf	___ftdiv@f1+1,f,c
  4292  001924  0E00               	movlw	0
  4293  001926  1626               	andwf	___ftdiv@f1+2,f,c
  4294  001928  8E28               	bsf	___ftdiv@f2+1,7,c
  4295  00192A  0EFF               	movlw	255
  4296  00192C  1627               	andwf	___ftdiv@f2,f,c
  4297  00192E  0EFF               	movlw	255
  4298  001930  1628               	andwf	___ftdiv@f2+1,f,c
  4299  001932  0E00               	movlw	0
  4300  001934  1629               	andwf	___ftdiv@f2+2,f,c
  4301  001936  0E18               	movlw	24
  4302  001938  6E2D               	movwf	___ftdiv@cntr,c
  4303  00193A                     l1681:
  4304  00193A  90D8               	bcf	status,0,c
  4305  00193C  362E               	rlcf	___ftdiv@f3,f,c
  4306  00193E  362F               	rlcf	___ftdiv@f3+1,f,c
  4307  001940  3630               	rlcf	___ftdiv@f3+2,f,c
  4308  001942  5027               	movf	___ftdiv@f2,w,c
  4309  001944  5C24               	subwf	___ftdiv@f1,w,c
  4310  001946  5028               	movf	___ftdiv@f2+1,w,c
  4311  001948  5825               	subwfb	___ftdiv@f1+1,w,c
  4312  00194A  5029               	movf	___ftdiv@f2+2,w,c
  4313  00194C  5826               	subwfb	___ftdiv@f1+2,w,c
  4314  00194E  A0D8               	btfss	status,0,c
  4315  001950  D007               	goto	l482
  4316  001952  5027               	movf	___ftdiv@f2,w,c
  4317  001954  5E24               	subwf	___ftdiv@f1,f,c
  4318  001956  5028               	movf	___ftdiv@f2+1,w,c
  4319  001958  5A25               	subwfb	___ftdiv@f1+1,f,c
  4320  00195A  5029               	movf	___ftdiv@f2+2,w,c
  4321  00195C  5A26               	subwfb	___ftdiv@f1+2,f,c
  4322  00195E  802E               	bsf	___ftdiv@f3,0,c
  4323  001960                     l482:
  4324  001960  90D8               	bcf	status,0,c
  4325  001962  3624               	rlcf	___ftdiv@f1,f,c
  4326  001964  3625               	rlcf	___ftdiv@f1+1,f,c
  4327  001966  3626               	rlcf	___ftdiv@f1+2,f,c
  4328  001968  2E2D               	decfsz	___ftdiv@cntr,f,c
  4329  00196A  D7E7               	goto	l1681
  4330  00196C  C02E  F00F         	movff	___ftdiv@f3,___ftpack@arg
  4331  001970  C02F  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4332  001974  C030  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4333  001978  C031  F012         	movff	___ftdiv@exp,___ftpack@exp
  4334  00197C  C032  F013         	movff	___ftdiv@sign,___ftpack@sign
  4335  001980  EC08  F00E         	call	___ftpack	;wreg free
  4336  001984  C00F  F024         	movff	?___ftpack,?___ftdiv
  4337  001988  C010  F025         	movff	?___ftpack+1,?___ftdiv+1
  4338  00198C  C011  F026         	movff	?___ftpack+2,?___ftdiv+2
  4339  001990  0012               	return	
  4340  001992                     __end_of___ftdiv:
  4341                           	opt stack 0
  4342                           tblptru	equ	0xFF8
  4343                           tblptrh	equ	0xFF7
  4344                           tblptrl	equ	0xFF6
  4345                           tablat	equ	0xFF5
  4346                           prodh	equ	0xFF4
  4347                           prodl	equ	0xFF3
  4348                           intcon	equ	0xFF2
  4349                           postinc0	equ	0xFEE
  4350                           wreg	equ	0xFE8
  4351                           postdec1	equ	0xFE5
  4352                           fsr1l	equ	0xFE1
  4353                           indf2	equ	0xFDF
  4354                           postinc2	equ	0xFDE
  4355                           postdec2	equ	0xFDD
  4356                           fsr2h	equ	0xFDA
  4357                           fsr2l	equ	0xFD9
  4358                           status	equ	0xFD8
  4359                           
  4360 ;; *************** function _detectFrequency *****************
  4361 ;; Defined at:
  4362 ;;		line 492 in file "yesgoodfinalprojectpleasework.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  n               1    wreg     unsigned char 
  4365 ;;  frequency       3   48[COMRAM] float 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  n               1   64[COMRAM] unsigned char 
  4368 ;;  finishTimeMi    4   59[COMRAM] unsigned long 
  4369 ;;  startTimeMic    4   55[COMRAM] unsigned long 
  4370 ;;  x               1   63[COMRAM] unsigned char 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  3   48[COMRAM] float 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4380 ;;      Params:         3       0       0       0       0       0       0       0       0
  4381 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4382 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4383 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4384 ;;Total ram usage:       17 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    3
  4387 ;; This function calls:
  4388 ;;		___lldiv
  4389 ;;		___lltoft
  4390 ;;		___lmul
  4391 ;;		_getTimeMicroSec
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text17
  4398  001A72                     __ptext17:
  4399                           	opt stack 0
  4400  001A72                     _detectFrequency:
  4401                           	opt stack 27
  4402                           
  4403                           ;incstack = 0
  4404                           ;detectFrequency@n stored from wreg
  4405  001A72  6E41               	movwf	detectFrequency@n,c
  4406                           
  4407                           ;yesgoodfinalprojectpleasework.c: 493: char x = 0;
  4408  001A74  0E00               	movlw	0
  4409  001A76  6E40               	movwf	detectFrequency@x,c
  4410  001A78                     l163:
  4411  001A78  B880               	btfsc	3968,4,c	;volatile
  4412  001A7A  D7FE               	goto	l163
  4413  001A7C                     l166:
  4414  001A7C  A880               	btfss	3968,4,c	;volatile
  4415  001A7E  D7FE               	goto	l166
  4416                           
  4417                           ;yesgoodfinalprojectpleasework.c: 501: }
  4418                           ;yesgoodfinalprojectpleasework.c: 502: startTimeMicroSec = getTimeMicroSec();
  4419  001A80  ECAA  F00F         	call	_getTimeMicroSec	;wreg free
  4420  001A84  C00F  F038         	movff	?_getTimeMicroSec,detectFrequency@startTimeMicroSec
  4421  001A88  C010  F039         	movff	?_getTimeMicroSec+1,detectFrequency@startTimeMicroSec+1
  4422  001A8C  C011  F03A         	movff	?_getTimeMicroSec+2,detectFrequency@startTimeMicroSec+2
  4423  001A90  C012  F03B         	movff	?_getTimeMicroSec+3,detectFrequency@startTimeMicroSec+3
  4424                           
  4425                           ;yesgoodfinalprojectpleasework.c: 503: while (x < n) {
  4426  001A94  D005               	goto	l1987
  4427  001A96                     l171:
  4428  001A96  B880               	btfsc	3968,4,c	;volatile
  4429  001A98  D7FE               	goto	l171
  4430  001A9A                     l174:
  4431  001A9A  A880               	btfss	3968,4,c	;volatile
  4432  001A9C  D7FE               	goto	l174
  4433                           
  4434                           ;yesgoodfinalprojectpleasework.c: 507: }
  4435                           ;yesgoodfinalprojectpleasework.c: 508: x++;
  4436  001A9E  2A40               	incf	detectFrequency@x,f,c
  4437  001AA0                     l1987:
  4438  001AA0  5041               	movf	detectFrequency@n,w,c
  4439  001AA2  5C40               	subwf	detectFrequency@x,w,c
  4440  001AA4  A0D8               	btfss	status,0,c
  4441  001AA6  D7F7               	goto	l171
  4442                           
  4443                           ;yesgoodfinalprojectpleasework.c: 509: }
  4444                           ;yesgoodfinalprojectpleasework.c: 510: finishTimeMicroSec = getTimeMicroSec();
  4445  001AA8  ECAA  F00F         	call	_getTimeMicroSec	;wreg free
  4446  001AAC  C00F  F03C         	movff	?_getTimeMicroSec,detectFrequency@finishTimeMicroSec
  4447  001AB0  C010  F03D         	movff	?_getTimeMicroSec+1,detectFrequency@finishTimeMicroSec+1
  4448  001AB4  C011  F03E         	movff	?_getTimeMicroSec+2,detectFrequency@finishTimeMicroSec+2
  4449  001AB8  C012  F03F         	movff	?_getTimeMicroSec+3,detectFrequency@finishTimeMicroSec+3
  4450                           
  4451                           ;yesgoodfinalprojectpleasework.c: 513: frequency = (n * 1000000) / (finishTimeMicroSec -
      +                           startTimeMicroSec);
  4452  001ABC  C038  F034         	movff	detectFrequency@startTimeMicroSec,??_detectFrequency
  4453  001AC0  C039  F035         	movff	detectFrequency@startTimeMicroSec+1,??_detectFrequency+1
  4454  001AC4  C03A  F036         	movff	detectFrequency@startTimeMicroSec+2,??_detectFrequency+2
  4455  001AC8  C03B  F037         	movff	detectFrequency@startTimeMicroSec+3,??_detectFrequency+3
  4456  001ACC  1E34               	comf	??_detectFrequency,f,c
  4457  001ACE  1E35               	comf	??_detectFrequency+1,f,c
  4458  001AD0  1E36               	comf	??_detectFrequency+2,f,c
  4459  001AD2  1E37               	comf	??_detectFrequency+3,f,c
  4460  001AD4  2A34               	incf	??_detectFrequency,f,c
  4461  001AD6  0E00               	movlw	0
  4462  001AD8  2235               	addwfc	??_detectFrequency+1,f,c
  4463  001ADA  2236               	addwfc	??_detectFrequency+2,f,c
  4464  001ADC  2237               	addwfc	??_detectFrequency+3,f,c
  4465  001ADE  503C               	movf	detectFrequency@finishTimeMicroSec,w,c
  4466  001AE0  2434               	addwf	??_detectFrequency,w,c
  4467  001AE2  6E1F               	movwf	___lldiv@divisor,c
  4468  001AE4  503D               	movf	detectFrequency@finishTimeMicroSec+1,w,c
  4469  001AE6  2035               	addwfc	??_detectFrequency+1,w,c
  4470  001AE8  6E20               	movwf	___lldiv@divisor+1,c
  4471  001AEA  503E               	movf	detectFrequency@finishTimeMicroSec+2,w,c
  4472  001AEC  2036               	addwfc	??_detectFrequency+2,w,c
  4473  001AEE  6E21               	movwf	___lldiv@divisor+2,c
  4474  001AF0  503F               	movf	detectFrequency@finishTimeMicroSec+3,w,c
  4475  001AF2  2037               	addwfc	??_detectFrequency+3,w,c
  4476  001AF4  6E22               	movwf	___lldiv@divisor+3,c
  4477  001AF6  5041               	movf	detectFrequency@n,w,c
  4478  001AF8  6E0F               	movwf	___lmul@multiplier,c
  4479  001AFA  6A10               	clrf	___lmul@multiplier+1,c
  4480  001AFC  6A11               	clrf	___lmul@multiplier+2,c
  4481  001AFE  6A12               	clrf	___lmul@multiplier+3,c
  4482  001B00  0E40               	movlw	64
  4483  001B02  6E13               	movwf	___lmul@multiplicand,c
  4484  001B04  0E42               	movlw	66
  4485  001B06  6E14               	movwf	___lmul@multiplicand+1,c
  4486  001B08  0E0F               	movlw	15
  4487  001B0A  6E15               	movwf	___lmul@multiplicand+2,c
  4488  001B0C  0E00               	movlw	0
  4489  001B0E  6E16               	movwf	___lmul@multiplicand+3,c
  4490  001B10  EC57  F00F         	call	___lmul	;wreg free
  4491  001B14  C00F  F01B         	movff	?___lmul,___lldiv@dividend
  4492  001B18  C010  F01C         	movff	?___lmul+1,___lldiv@dividend+1
  4493  001B1C  C011  F01D         	movff	?___lmul+2,___lldiv@dividend+2
  4494  001B20  C012  F01E         	movff	?___lmul+3,___lldiv@dividend+3
  4495  001B24  ECA7  F00E         	call	___lldiv	;wreg free
  4496  001B28  C01B  F028         	movff	?___lldiv,___lltoft@c
  4497  001B2C  C01C  F029         	movff	?___lldiv+1,___lltoft@c+1
  4498  001B30  C01D  F02A         	movff	?___lldiv+2,___lltoft@c+2
  4499  001B34  C01E  F02B         	movff	?___lldiv+3,___lltoft@c+3
  4500  001B38  EC29  F00F         	call	___lltoft	;wreg free
  4501  001B3C  C028  F031         	movff	?___lltoft,detectFrequency@frequency
  4502  001B40  C029  F032         	movff	?___lltoft+1,detectFrequency@frequency+1
  4503  001B44  C02A  F033         	movff	?___lltoft+2,detectFrequency@frequency+2
  4504  001B48  0012               	return		;funcret
  4505  001B4A                     __end_of_detectFrequency:
  4506                           	opt stack 0
  4507                           tblptru	equ	0xFF8
  4508                           tblptrh	equ	0xFF7
  4509                           tblptrl	equ	0xFF6
  4510                           tablat	equ	0xFF5
  4511                           prodh	equ	0xFF4
  4512                           prodl	equ	0xFF3
  4513                           intcon	equ	0xFF2
  4514                           postinc0	equ	0xFEE
  4515                           wreg	equ	0xFE8
  4516                           postdec1	equ	0xFE5
  4517                           fsr1l	equ	0xFE1
  4518                           indf2	equ	0xFDF
  4519                           postinc2	equ	0xFDE
  4520                           postdec2	equ	0xFDD
  4521                           fsr2h	equ	0xFDA
  4522                           fsr2l	equ	0xFD9
  4523                           status	equ	0xFD8
  4524                           
  4525 ;; *************** function _getTimeMicroSec *****************
  4526 ;; Defined at:
  4527 ;;		line 372 in file "yesgoodfinalprojectpleasework.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  temp            4   22[COMRAM] unsigned long 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  4   14[COMRAM] unsigned long 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4541 ;;      Params:         4       0       0       0       0       0       0       0       0
  4542 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4543 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4544 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4545 ;;Total ram usage:       12 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    1
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_detectFrequency
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text18
  4556  001F54                     __ptext18:
  4557                           	opt stack 0
  4558  001F54                     _getTimeMicroSec:
  4559                           	opt stack 28
  4560                           
  4561                           ;yesgoodfinalprojectpleasework.c: 376: unsigned long temp;
  4562                           ;yesgoodfinalprojectpleasework.c: 377: temp = (tickCount << 16 | TMR0);
  4563                           
  4564                           ;incstack = 0
  4565  001F54  C04D  F013         	movff	_tickCount,??_getTimeMicroSec
  4566  001F58  C04E  F014         	movff	_tickCount+1,??_getTimeMicroSec+1
  4567  001F5C  C04F  F015         	movff	_tickCount+2,??_getTimeMicroSec+2
  4568  001F60  C050  F016         	movff	_tickCount+3,??_getTimeMicroSec+3
  4569  001F64  C014  F016         	movff	??_getTimeMicroSec+1,??_getTimeMicroSec+3
  4570  001F68  C013  F015         	movff	??_getTimeMicroSec,??_getTimeMicroSec+2
  4571  001F6C  6A14               	clrf	??_getTimeMicroSec+1,c
  4572  001F6E  6A13               	clrf	??_getTimeMicroSec,c
  4573  001F70  50D6               	movf	4054,w,c	;volatile
  4574  001F72  1013               	iorwf	??_getTimeMicroSec,w,c
  4575  001F74  6E17               	movwf	getTimeMicroSec@temp,c
  4576  001F76  50D7               	movf	4055,w,c	;volatile
  4577  001F78  1014               	iorwf	??_getTimeMicroSec+1,w,c
  4578  001F7A  6E18               	movwf	getTimeMicroSec@temp+1,c
  4579  001F7C  0E00               	movlw	0
  4580  001F7E  1015               	iorwf	??_getTimeMicroSec+2,w,c
  4581  001F80  6E19               	movwf	getTimeMicroSec@temp+2,c
  4582  001F82  0E00               	movlw	0
  4583  001F84  1016               	iorwf	??_getTimeMicroSec+3,w,c
  4584  001F86  6E1A               	movwf	getTimeMicroSec@temp+3,c
  4585                           
  4586                           ;yesgoodfinalprojectpleasework.c: 379: return temp;
  4587  001F88  C017  F00F         	movff	getTimeMicroSec@temp,?_getTimeMicroSec
  4588  001F8C  C018  F010         	movff	getTimeMicroSec@temp+1,?_getTimeMicroSec+1
  4589  001F90  C019  F011         	movff	getTimeMicroSec@temp+2,?_getTimeMicroSec+2
  4590  001F94  C01A  F012         	movff	getTimeMicroSec@temp+3,?_getTimeMicroSec+3
  4591  001F98  0012               	return	
  4592  001F9A                     __end_of_getTimeMicroSec:
  4593                           	opt stack 0
  4594                           tblptru	equ	0xFF8
  4595                           tblptrh	equ	0xFF7
  4596                           tblptrl	equ	0xFF6
  4597                           tablat	equ	0xFF5
  4598                           prodh	equ	0xFF4
  4599                           prodl	equ	0xFF3
  4600                           intcon	equ	0xFF2
  4601                           postinc0	equ	0xFEE
  4602                           wreg	equ	0xFE8
  4603                           postdec1	equ	0xFE5
  4604                           fsr1l	equ	0xFE1
  4605                           indf2	equ	0xFDF
  4606                           postinc2	equ	0xFDE
  4607                           postdec2	equ	0xFDD
  4608                           fsr2h	equ	0xFDA
  4609                           fsr2l	equ	0xFD9
  4610                           status	equ	0xFD8
  4611                           
  4612 ;; *************** function ___lmul *****************
  4613 ;; Defined at:
  4614 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  multiplier      4   14[COMRAM] unsigned long 
  4617 ;;  multiplicand    4   18[COMRAM] unsigned long 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  product         4   22[COMRAM] unsigned long 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  4   14[COMRAM] unsigned long 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4629 ;;      Params:         8       0       0       0       0       0       0       0       0
  4630 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4632 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4633 ;;Total ram usage:       12 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    1
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_detectFrequency
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text19
  4644  001EAE                     __ptext19:
  4645                           	opt stack 0
  4646  001EAE                     ___lmul:
  4647                           	opt stack 28
  4648                           
  4649                           ;incstack = 0
  4650  001EAE  0E00               	movlw	0
  4651  001EB0  6E17               	movwf	___lmul@product,c
  4652  001EB2  0E00               	movlw	0
  4653  001EB4  6E18               	movwf	___lmul@product+1,c
  4654  001EB6  0E00               	movlw	0
  4655  001EB8  6E19               	movwf	___lmul@product+2,c
  4656  001EBA  0E00               	movlw	0
  4657  001EBC  6E1A               	movwf	___lmul@product+3,c
  4658  001EBE                     l1571:
  4659  001EBE  A00F               	btfss	___lmul@multiplier,0,c
  4660  001EC0  D008               	goto	l1575
  4661  001EC2  5013               	movf	___lmul@multiplicand,w,c
  4662  001EC4  2617               	addwf	___lmul@product,f,c
  4663  001EC6  5014               	movf	___lmul@multiplicand+1,w,c
  4664  001EC8  2218               	addwfc	___lmul@product+1,f,c
  4665  001ECA  5015               	movf	___lmul@multiplicand+2,w,c
  4666  001ECC  2219               	addwfc	___lmul@product+2,f,c
  4667  001ECE  5016               	movf	___lmul@multiplicand+3,w,c
  4668  001ED0  221A               	addwfc	___lmul@product+3,f,c
  4669  001ED2                     l1575:
  4670  001ED2  90D8               	bcf	status,0,c
  4671  001ED4  3613               	rlcf	___lmul@multiplicand,f,c
  4672  001ED6  3614               	rlcf	___lmul@multiplicand+1,f,c
  4673  001ED8  3615               	rlcf	___lmul@multiplicand+2,f,c
  4674  001EDA  3616               	rlcf	___lmul@multiplicand+3,f,c
  4675  001EDC  90D8               	bcf	status,0,c
  4676  001EDE  3212               	rrcf	___lmul@multiplier+3,f,c
  4677  001EE0  3211               	rrcf	___lmul@multiplier+2,f,c
  4678  001EE2  3210               	rrcf	___lmul@multiplier+1,f,c
  4679  001EE4  320F               	rrcf	___lmul@multiplier,f,c
  4680  001EE6  500F               	movf	___lmul@multiplier,w,c
  4681  001EE8  1010               	iorwf	___lmul@multiplier+1,w,c
  4682  001EEA  1011               	iorwf	___lmul@multiplier+2,w,c
  4683  001EEC  1012               	iorwf	___lmul@multiplier+3,w,c
  4684  001EEE  A4D8               	btfss	status,2,c
  4685  001EF0  D7E6               	goto	l1571
  4686  001EF2  C017  F00F         	movff	___lmul@product,?___lmul
  4687  001EF6  C018  F010         	movff	___lmul@product+1,?___lmul+1
  4688  001EFA  C019  F011         	movff	___lmul@product+2,?___lmul+2
  4689  001EFE  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  4690  001F02  0012               	return		;funcret
  4691  001F04                     __end_of___lmul:
  4692                           	opt stack 0
  4693                           tblptru	equ	0xFF8
  4694                           tblptrh	equ	0xFF7
  4695                           tblptrl	equ	0xFF6
  4696                           tablat	equ	0xFF5
  4697                           prodh	equ	0xFF4
  4698                           prodl	equ	0xFF3
  4699                           intcon	equ	0xFF2
  4700                           postinc0	equ	0xFEE
  4701                           wreg	equ	0xFE8
  4702                           postdec1	equ	0xFE5
  4703                           fsr1l	equ	0xFE1
  4704                           indf2	equ	0xFDF
  4705                           postinc2	equ	0xFDE
  4706                           postdec2	equ	0xFDD
  4707                           fsr2h	equ	0xFDA
  4708                           fsr2l	equ	0xFD9
  4709                           status	equ	0xFD8
  4710                           
  4711 ;; *************** function ___lltoft *****************
  4712 ;; Defined at:
  4713 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  c               4   39[COMRAM] unsigned long 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  exp             1   47[COMRAM] unsigned char 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  3   39[COMRAM] float 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4727 ;;      Params:         4       0       0       0       0       0       0       0       0
  4728 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4729 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4730 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4731 ;;Total ram usage:        9 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    2
  4734 ;; This function calls:
  4735 ;;		___ftpack
  4736 ;; This function is called by:
  4737 ;;		_detectFrequency
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text20
  4742  001E52                     __ptext20:
  4743                           	opt stack 0
  4744  001E52                     ___lltoft:
  4745                           	opt stack 27
  4746                           
  4747                           ;incstack = 0
  4748  001E52  0E8E               	movlw	142
  4749  001E54  6E30               	movwf	___lltoft@exp,c
  4750  001E56  D006               	goto	l1791
  4751  001E58                     l1789:
  4752  001E58  90D8               	bcf	status,0,c
  4753  001E5A  322B               	rrcf	___lltoft@c+3,f,c
  4754  001E5C  322A               	rrcf	___lltoft@c+2,f,c
  4755  001E5E  3229               	rrcf	___lltoft@c+1,f,c
  4756  001E60  3228               	rrcf	___lltoft@c,f,c
  4757  001E62  2A30               	incf	___lltoft@exp,f,c
  4758  001E64                     l1791:
  4759  001E64  0E00               	movlw	0
  4760  001E66  1428               	andwf	___lltoft@c,w,c
  4761  001E68  6E2C               	movwf	??___lltoft& (0+255),c
  4762  001E6A  0E00               	movlw	0
  4763  001E6C  1429               	andwf	___lltoft@c+1,w,c
  4764  001E6E  6E2D               	movwf	(??___lltoft+1)& (0+255),c
  4765  001E70  0E00               	movlw	0
  4766  001E72  142A               	andwf	___lltoft@c+2,w,c
  4767  001E74  6E2E               	movwf	(??___lltoft+2)& (0+255),c
  4768  001E76  0EFF               	movlw	255
  4769  001E78  142B               	andwf	___lltoft@c+3,w,c
  4770  001E7A  6E2F               	movwf	(??___lltoft+3)& (0+255),c
  4771  001E7C  502C               	movf	??___lltoft,w,c
  4772  001E7E  102D               	iorwf	??___lltoft+1,w,c
  4773  001E80  102E               	iorwf	??___lltoft+2,w,c
  4774  001E82  102F               	iorwf	??___lltoft+3,w,c
  4775  001E84  A4D8               	btfss	status,2,c
  4776  001E86  D7E8               	goto	l1789
  4777  001E88  C028  F00F         	movff	___lltoft@c,___ftpack@arg
  4778  001E8C  C029  F010         	movff	___lltoft@c+1,___ftpack@arg+1
  4779  001E90  C02A  F011         	movff	___lltoft@c+2,___ftpack@arg+2
  4780  001E94  C030  F012         	movff	___lltoft@exp,___ftpack@exp
  4781  001E98  0E00               	movlw	0
  4782  001E9A  6E13               	movwf	___ftpack@sign,c
  4783  001E9C  EC08  F00E         	call	___ftpack	;wreg free
  4784  001EA0  C00F  F028         	movff	?___ftpack,?___lltoft
  4785  001EA4  C010  F029         	movff	?___ftpack+1,?___lltoft+1
  4786  001EA8  C011  F02A         	movff	?___ftpack+2,?___lltoft+2
  4787  001EAC  0012               	return	
  4788  001EAE                     __end_of___lltoft:
  4789                           	opt stack 0
  4790                           tblptru	equ	0xFF8
  4791                           tblptrh	equ	0xFF7
  4792                           tblptrl	equ	0xFF6
  4793                           tablat	equ	0xFF5
  4794                           prodh	equ	0xFF4
  4795                           prodl	equ	0xFF3
  4796                           intcon	equ	0xFF2
  4797                           postinc0	equ	0xFEE
  4798                           wreg	equ	0xFE8
  4799                           postdec1	equ	0xFE5
  4800                           fsr1l	equ	0xFE1
  4801                           indf2	equ	0xFDF
  4802                           postinc2	equ	0xFDE
  4803                           postdec2	equ	0xFDD
  4804                           fsr2h	equ	0xFDA
  4805                           fsr2l	equ	0xFD9
  4806                           status	equ	0xFD8
  4807                           
  4808 ;; *************** function ___ftpack *****************
  4809 ;; Defined at:
  4810 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  arg             3   14[COMRAM] unsigned um
  4813 ;;  exp             1   17[COMRAM] unsigned char 
  4814 ;;  sign            1   18[COMRAM] unsigned char 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  3   14[COMRAM] float 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4826 ;;      Params:         5       0       0       0       0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4828 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4829 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4830 ;;Total ram usage:        8 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		___ftadd
  4837 ;;		___ftdiv
  4838 ;;		___ftmul
  4839 ;;		___lltoft
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text21
  4844  001C10                     __ptext21:
  4845                           	opt stack 0
  4846  001C10                     ___ftpack:
  4847                           	opt stack 27
  4848                           
  4849                           ;incstack = 0
  4850  001C10  5012               	movf	___ftpack@exp,w,c
  4851  001C12  B4D8               	btfsc	status,2,c
  4852  001C14  D005               	goto	l1483
  4853  001C16  500F               	movf	___ftpack@arg,w,c
  4854  001C18  1010               	iorwf	___ftpack@arg+1,w,c
  4855  001C1A  1011               	iorwf	___ftpack@arg+2,w,c
  4856  001C1C  A4D8               	btfss	status,2,c
  4857  001C1E  D00C               	goto	l1489
  4858  001C20                     l1483:
  4859  001C20  0E00               	movlw	0
  4860  001C22  6E0F               	movwf	?___ftpack,c
  4861  001C24  0E00               	movlw	0
  4862  001C26  6E10               	movwf	?___ftpack+1,c
  4863  001C28  0E00               	movlw	0
  4864  001C2A  6E11               	movwf	?___ftpack+2,c
  4865  001C2C  0012               	return	
  4866  001C2E                     l1487:
  4867  001C2E  2A12               	incf	___ftpack@exp,f,c
  4868  001C30  90D8               	bcf	status,0,c
  4869  001C32  3211               	rrcf	___ftpack@arg+2,f,c
  4870  001C34  3210               	rrcf	___ftpack@arg+1,f,c
  4871  001C36  320F               	rrcf	___ftpack@arg,f,c
  4872  001C38                     l1489:
  4873  001C38  0E00               	movlw	0
  4874  001C3A  140F               	andwf	___ftpack@arg,w,c
  4875  001C3C  6E14               	movwf	??___ftpack& (0+255),c
  4876  001C3E  0E00               	movlw	0
  4877  001C40  1410               	andwf	___ftpack@arg+1,w,c
  4878  001C42  6E15               	movwf	(??___ftpack+1)& (0+255),c
  4879  001C44  0EFE               	movlw	254
  4880  001C46  1411               	andwf	___ftpack@arg+2,w,c
  4881  001C48  6E16               	movwf	(??___ftpack+2)& (0+255),c
  4882  001C4A  5014               	movf	??___ftpack,w,c
  4883  001C4C  1015               	iorwf	??___ftpack+1,w,c
  4884  001C4E  1016               	iorwf	??___ftpack+2,w,c
  4885  001C50  B4D8               	btfsc	status,2,c
  4886  001C52  D00C               	goto	l1495
  4887  001C54  D7EC               	goto	l1487
  4888  001C56                     l1491:
  4889  001C56  2A12               	incf	___ftpack@exp,f,c
  4890  001C58  0E01               	movlw	1
  4891  001C5A  260F               	addwf	___ftpack@arg,f,c
  4892  001C5C  0E00               	movlw	0
  4893  001C5E  2210               	addwfc	___ftpack@arg+1,f,c
  4894  001C60  0E00               	movlw	0
  4895  001C62  2211               	addwfc	___ftpack@arg+2,f,c
  4896  001C64  90D8               	bcf	status,0,c
  4897  001C66  3211               	rrcf	___ftpack@arg+2,f,c
  4898  001C68  3210               	rrcf	___ftpack@arg+1,f,c
  4899  001C6A  320F               	rrcf	___ftpack@arg,f,c
  4900  001C6C                     l1495:
  4901  001C6C  0E00               	movlw	0
  4902  001C6E  140F               	andwf	___ftpack@arg,w,c
  4903  001C70  6E14               	movwf	??___ftpack& (0+255),c
  4904  001C72  0E00               	movlw	0
  4905  001C74  1410               	andwf	___ftpack@arg+1,w,c
  4906  001C76  6E15               	movwf	(??___ftpack+1)& (0+255),c
  4907  001C78  0EFF               	movlw	255
  4908  001C7A  1411               	andwf	___ftpack@arg+2,w,c
  4909  001C7C  6E16               	movwf	(??___ftpack+2)& (0+255),c
  4910  001C7E  5014               	movf	??___ftpack,w,c
  4911  001C80  1015               	iorwf	??___ftpack+1,w,c
  4912  001C82  1016               	iorwf	??___ftpack+2,w,c
  4913  001C84  B4D8               	btfsc	status,2,c
  4914  001C86  D006               	goto	l1499
  4915  001C88  D7E6               	goto	l1491
  4916  001C8A                     l1497:
  4917  001C8A  0612               	decf	___ftpack@exp,f,c
  4918  001C8C  90D8               	bcf	status,0,c
  4919  001C8E  360F               	rlcf	___ftpack@arg,f,c
  4920  001C90  3610               	rlcf	___ftpack@arg+1,f,c
  4921  001C92  3611               	rlcf	___ftpack@arg+2,f,c
  4922  001C94                     l1499:
  4923  001C94  BE10               	btfsc	___ftpack@arg+1,7,c
  4924  001C96  D003               	goto	l424
  4925  001C98  0E02               	movlw	2
  4926  001C9A  6012               	cpfslt	___ftpack@exp,c
  4927  001C9C  D7F6               	goto	l1497
  4928  001C9E                     l424:
  4929  001C9E  A012               	btfss	___ftpack@exp,0,c
  4930  001CA0  9E10               	bcf	___ftpack@arg+1,7,c
  4931  001CA2  90D8               	bcf	status,0,c
  4932  001CA4  3212               	rrcf	___ftpack@exp,f,c
  4933  001CA6  5012               	movf	___ftpack@exp,w,c
  4934  001CA8  1211               	iorwf	___ftpack@arg+2,f,c
  4935  001CAA  5013               	movf	___ftpack@sign,w,c
  4936  001CAC  A4D8               	btfss	status,2,c
  4937  001CAE  8E11               	bsf	___ftpack@arg+2,7,c
  4938  001CB0  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  4939  001CB4  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  4940  001CB8  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  4941  001CBC  0012               	return	
  4942  001CBE                     __end_of___ftpack:
  4943                           	opt stack 0
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           prodh	equ	0xFF4
  4949                           prodl	equ	0xFF3
  4950                           intcon	equ	0xFF2
  4951                           postinc0	equ	0xFEE
  4952                           wreg	equ	0xFE8
  4953                           postdec1	equ	0xFE5
  4954                           fsr1l	equ	0xFE1
  4955                           indf2	equ	0xFDF
  4956                           postinc2	equ	0xFDE
  4957                           postdec2	equ	0xFDD
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function ___lldiv *****************
  4963 ;; Defined at:
  4964 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  dividend        4   26[COMRAM] unsigned long 
  4967 ;;  divisor         4   30[COMRAM] unsigned long 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  quotient        4   34[COMRAM] unsigned long 
  4970 ;;  counter         1   38[COMRAM] unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  4   26[COMRAM] unsigned long 
  4973 ;; Registers used:
  4974 ;;		wreg, status,2, status,0
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4980 ;;      Params:         8       0       0       0       0       0       0       0       0
  4981 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4983 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4984 ;;Total ram usage:       13 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    1
  4987 ;; This function calls:
  4988 ;;		Nothing
  4989 ;; This function is called by:
  4990 ;;		_detectFrequency
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text22
  4995  001D4E                     __ptext22:
  4996                           	opt stack 0
  4997  001D4E                     ___lldiv:
  4998                           	opt stack 28
  4999                           
  5000                           ;incstack = 0
  5001  001D4E  0E00               	movlw	0
  5002  001D50  6E23               	movwf	___lldiv@quotient,c
  5003  001D52  0E00               	movlw	0
  5004  001D54  6E24               	movwf	___lldiv@quotient+1,c
  5005  001D56  0E00               	movlw	0
  5006  001D58  6E25               	movwf	___lldiv@quotient+2,c
  5007  001D5A  0E00               	movlw	0
  5008  001D5C  6E26               	movwf	___lldiv@quotient+3,c
  5009  001D5E  501F               	movf	___lldiv@divisor,w,c
  5010  001D60  1020               	iorwf	___lldiv@divisor+1,w,c
  5011  001D62  1021               	iorwf	___lldiv@divisor+2,w,c
  5012  001D64  1022               	iorwf	___lldiv@divisor+3,w,c
  5013  001D66  B4D8               	btfsc	status,2,c
  5014  001D68  D02A               	goto	l549
  5015  001D6A  0E01               	movlw	1
  5016  001D6C  6E27               	movwf	___lldiv@counter,c
  5017  001D6E  D006               	goto	l1773
  5018  001D70                     l1771:
  5019  001D70  90D8               	bcf	status,0,c
  5020  001D72  361F               	rlcf	___lldiv@divisor,f,c
  5021  001D74  3620               	rlcf	___lldiv@divisor+1,f,c
  5022  001D76  3621               	rlcf	___lldiv@divisor+2,f,c
  5023  001D78  3622               	rlcf	___lldiv@divisor+3,f,c
  5024  001D7A  2A27               	incf	___lldiv@counter,f,c
  5025  001D7C                     l1773:
  5026  001D7C  AE22               	btfss	___lldiv@divisor+3,7,c
  5027  001D7E  D7F8               	goto	l1771
  5028  001D80                     l1775:
  5029  001D80  90D8               	bcf	status,0,c
  5030  001D82  3623               	rlcf	___lldiv@quotient,f,c
  5031  001D84  3624               	rlcf	___lldiv@quotient+1,f,c
  5032  001D86  3625               	rlcf	___lldiv@quotient+2,f,c
  5033  001D88  3626               	rlcf	___lldiv@quotient+3,f,c
  5034  001D8A  501F               	movf	___lldiv@divisor,w,c
  5035  001D8C  5C1B               	subwf	___lldiv@dividend,w,c
  5036  001D8E  5020               	movf	___lldiv@divisor+1,w,c
  5037  001D90  581C               	subwfb	___lldiv@dividend+1,w,c
  5038  001D92  5021               	movf	___lldiv@divisor+2,w,c
  5039  001D94  581D               	subwfb	___lldiv@dividend+2,w,c
  5040  001D96  5022               	movf	___lldiv@divisor+3,w,c
  5041  001D98  581E               	subwfb	___lldiv@dividend+3,w,c
  5042  001D9A  A0D8               	btfss	status,0,c
  5043  001D9C  D009               	goto	l1783
  5044  001D9E  501F               	movf	___lldiv@divisor,w,c
  5045  001DA0  5E1B               	subwf	___lldiv@dividend,f,c
  5046  001DA2  5020               	movf	___lldiv@divisor+1,w,c
  5047  001DA4  5A1C               	subwfb	___lldiv@dividend+1,f,c
  5048  001DA6  5021               	movf	___lldiv@divisor+2,w,c
  5049  001DA8  5A1D               	subwfb	___lldiv@dividend+2,f,c
  5050  001DAA  5022               	movf	___lldiv@divisor+3,w,c
  5051  001DAC  5A1E               	subwfb	___lldiv@dividend+3,f,c
  5052  001DAE  8023               	bsf	___lldiv@quotient,0,c
  5053  001DB0                     l1783:
  5054  001DB0  90D8               	bcf	status,0,c
  5055  001DB2  3222               	rrcf	___lldiv@divisor+3,f,c
  5056  001DB4  3221               	rrcf	___lldiv@divisor+2,f,c
  5057  001DB6  3220               	rrcf	___lldiv@divisor+1,f,c
  5058  001DB8  321F               	rrcf	___lldiv@divisor,f,c
  5059  001DBA  2E27               	decfsz	___lldiv@counter,f,c
  5060  001DBC  D7E1               	goto	l1775
  5061  001DBE                     l549:
  5062  001DBE  C023  F01B         	movff	___lldiv@quotient,?___lldiv
  5063  001DC2  C024  F01C         	movff	___lldiv@quotient+1,?___lldiv+1
  5064  001DC6  C025  F01D         	movff	___lldiv@quotient+2,?___lldiv+2
  5065  001DCA  C026  F01E         	movff	___lldiv@quotient+3,?___lldiv+3
  5066  001DCE  0012               	return		;funcret
  5067  001DD0                     __end_of___lldiv:
  5068                           	opt stack 0
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           prodh	equ	0xFF4
  5074                           prodl	equ	0xFF3
  5075                           intcon	equ	0xFF2
  5076                           postinc0	equ	0xFEE
  5077                           wreg	equ	0xFE8
  5078                           postdec1	equ	0xFE5
  5079                           fsr1l	equ	0xFE1
  5080                           indf2	equ	0xFDF
  5081                           postinc2	equ	0xFDE
  5082                           postdec2	equ	0xFDD
  5083                           fsr2h	equ	0xFDA
  5084                           fsr2l	equ	0xFD9
  5085                           status	equ	0xFD8
  5086                           
  5087 ;; *************** function _tc_int *****************
  5088 ;; Defined at:
  5089 ;;		line 363 in file "yesgoodfinalprojectpleasework.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;		None
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;		None
  5094 ;; Return value:  Size  Location     Type
  5095 ;;		None               void
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0
  5104 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5105 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5106 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5107 ;;Total ram usage:       14 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; This function calls:
  5110 ;;		Nothing
  5111 ;; This function is called by:
  5112 ;;		Interrupt level 2
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	intcode
  5117  000008                     __pintcode:
  5118                           	opt stack 0
  5119  000008                     _tc_int:
  5120                           	opt stack 26
  5121                           
  5122                           ;incstack = 0
  5123  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5124  00000A  CFFA F001          	movff	pclath,??_tc_int
  5125  00000E  CFFB F002          	movff	pclatu,??_tc_int+1
  5126  000012  EDE8  F00E         	call	int_func,f	;refresh shadow registers
  5127                           pclatu	equ	0xFFB
  5128                           pclath	equ	0xFFA
  5129                           tblptru	equ	0xFF8
  5130                           tblptrh	equ	0xFF7
  5131                           tblptrl	equ	0xFF6
  5132                           tablat	equ	0xFF5
  5133                           prodh	equ	0xFF4
  5134                           prodl	equ	0xFF3
  5135                           intcon	equ	0xFF2
  5136                           postinc0	equ	0xFEE
  5137                           wreg	equ	0xFE8
  5138                           postdec1	equ	0xFE5
  5139                           fsr1l	equ	0xFE1
  5140                           indf2	equ	0xFDF
  5141                           postinc2	equ	0xFDE
  5142                           postdec2	equ	0xFDD
  5143                           fsr2h	equ	0xFDA
  5144                           fsr2l	equ	0xFD9
  5145                           status	equ	0xFD8
  5146                           
  5147                           	psect	intcode_body
  5148  001DD0                     __pintcode_body:
  5149                           	opt stack 26
  5150  001DD0                     int_func:
  5151                           	opt stack 26
  5152  001DD0  0006               	pop		; remove dummy address from shadow register refresh
  5153  001DD2  CFE9 F003          	movff	fsr0l,??_tc_int+2
  5154  001DD6  CFEA F004          	movff	fsr0h,??_tc_int+3
  5155  001DDA  CFE1 F005          	movff	fsr1l,??_tc_int+4
  5156  001DDE  CFE2 F006          	movff	fsr1h,??_tc_int+5
  5157  001DE2  CFD9 F007          	movff	fsr2l,??_tc_int+6
  5158  001DE6  CFDA F008          	movff	fsr2h,??_tc_int+7
  5159  001DEA  CFF3 F009          	movff	prodl,??_tc_int+8
  5160  001DEE  CFF4 F00A          	movff	prodh,??_tc_int+9
  5161  001DF2  CFF6 F00B          	movff	tblptrl,??_tc_int+10
  5162  001DF6  CFF7 F00C          	movff	tblptrh,??_tc_int+11
  5163  001DFA  CFF8 F00D          	movff	tblptru,??_tc_int+12
  5164  001DFE  CFF5 F00E          	movff	tablat,??_tc_int+13
  5165                           
  5166                           ;yesgoodfinalprojectpleasework.c: 364: if (TMR0IE && TMR0IF) {
  5167  001E02  BAF2               	btfsc	intcon,5,c	;volatile
  5168  001E04  A4F2               	btfss	intcon,2,c	;volatile
  5169  001E06  D007               	goto	i2l109
  5170                           
  5171                           ;yesgoodfinalprojectpleasework.c: 365: TMR0IF = 0;
  5172  001E08  94F2               	bcf	intcon,2,c	;volatile
  5173                           
  5174                           ;yesgoodfinalprojectpleasework.c: 366: ++tickCount;
  5175  001E0A  0E01               	movlw	1
  5176  001E0C  264D               	addwf	_tickCount,f,c
  5177  001E0E  0E00               	movlw	0
  5178  001E10  224E               	addwfc	_tickCount+1,f,c
  5179  001E12  224F               	addwfc	_tickCount+2,f,c
  5180  001E14  2250               	addwfc	_tickCount+3,f,c
  5181  001E16                     i2l109:
  5182  001E16  C00E  FFF5         	movff	??_tc_int+13,tablat
  5183  001E1A  C00D  FFF8         	movff	??_tc_int+12,tblptru
  5184  001E1E  C00C  FFF7         	movff	??_tc_int+11,tblptrh
  5185  001E22  C00B  FFF6         	movff	??_tc_int+10,tblptrl
  5186  001E26  C00A  FFF4         	movff	??_tc_int+9,prodh
  5187  001E2A  C009  FFF3         	movff	??_tc_int+8,prodl
  5188  001E2E  C008  FFDA         	movff	??_tc_int+7,fsr2h
  5189  001E32  C007  FFD9         	movff	??_tc_int+6,fsr2l
  5190  001E36  C006  FFE2         	movff	??_tc_int+5,fsr1h
  5191  001E3A  C005  FFE1         	movff	??_tc_int+4,fsr1l
  5192  001E3E  C004  FFEA         	movff	??_tc_int+3,fsr0h
  5193  001E42  C003  FFE9         	movff	??_tc_int+2,fsr0l
  5194  001E46  C002  FFFB         	movff	??_tc_int+1,pclatu
  5195  001E4A  C001  FFFA         	movff	??_tc_int,pclath
  5196  001E4E  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5197  001E50  0011               	retfie		f
  5198  001E52                     __end_of_tc_int:
  5199                           	opt stack 0
  5200                           pclatu	equ	0xFFB
  5201                           pclath	equ	0xFFA
  5202                           tblptru	equ	0xFF8
  5203                           tblptrh	equ	0xFF7
  5204                           tblptrl	equ	0xFF6
  5205                           tablat	equ	0xFF5
  5206                           prodh	equ	0xFF4
  5207                           prodl	equ	0xFF3
  5208                           intcon	equ	0xFF2
  5209                           postinc0	equ	0xFEE
  5210                           fsr0h	equ	0xFEA
  5211                           fsr0l	equ	0xFE9
  5212                           wreg	equ	0xFE8
  5213                           postdec1	equ	0xFE5
  5214                           fsr1h	equ	0xFE2
  5215                           fsr1l	equ	0xFE1
  5216                           indf2	equ	0xFDF
  5217                           postinc2	equ	0xFDE
  5218                           postdec2	equ	0xFDD
  5219                           fsr2h	equ	0xFDA
  5220                           fsr2l	equ	0xFD9
  5221                           status	equ	0xFD8
  5222                           pclatu	equ	0xFFB
  5223                           pclath	equ	0xFFA
  5224                           tblptru	equ	0xFF8
  5225                           tblptrh	equ	0xFF7
  5226                           tblptrl	equ	0xFF6
  5227                           tablat	equ	0xFF5
  5228                           prodh	equ	0xFF4
  5229                           prodl	equ	0xFF3
  5230                           intcon	equ	0xFF2
  5231                           postinc0	equ	0xFEE
  5232                           fsr0h	equ	0xFEA
  5233                           fsr0l	equ	0xFE9
  5234                           wreg	equ	0xFE8
  5235                           postdec1	equ	0xFE5
  5236                           fsr1h	equ	0xFE2
  5237                           fsr1l	equ	0xFE1
  5238                           indf2	equ	0xFDF
  5239                           postinc2	equ	0xFDE
  5240                           postdec2	equ	0xFDD
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           
  5245                           	psect	rparam
  5246  0000                     pclatu	equ	0xFFB
  5247                           pclath	equ	0xFFA
  5248                           tblptru	equ	0xFF8
  5249                           tblptrh	equ	0xFF7
  5250                           tblptrl	equ	0xFF6
  5251                           tablat	equ	0xFF5
  5252                           prodh	equ	0xFF4
  5253                           prodl	equ	0xFF3
  5254                           intcon	equ	0xFF2
  5255                           postinc0	equ	0xFEE
  5256                           fsr0h	equ	0xFEA
  5257                           fsr0l	equ	0xFE9
  5258                           wreg	equ	0xFE8
  5259                           postdec1	equ	0xFE5
  5260                           fsr1h	equ	0xFE2
  5261                           fsr1l	equ	0xFE1
  5262                           indf2	equ	0xFDF
  5263                           postinc2	equ	0xFDE
  5264                           postdec2	equ	0xFDD
  5265                           fsr2h	equ	0xFDA
  5266                           fsr2l	equ	0xFD9
  5267                           status	equ	0xFD8
  5268                           
  5269                           	psect	temp
  5270  000051                     btemp:
  5271                           	opt stack 0
  5272  000051                     	ds	1
  5273  0000                     int$flags	set	btemp
  5274                           pclatu	equ	0xFFB
  5275                           pclath	equ	0xFFA
  5276                           tblptru	equ	0xFF8
  5277                           tblptrh	equ	0xFF7
  5278                           tblptrl	equ	0xFF6
  5279                           tablat	equ	0xFF5
  5280                           prodh	equ	0xFF4
  5281                           prodl	equ	0xFF3
  5282                           intcon	equ	0xFF2
  5283                           postinc0	equ	0xFEE
  5284                           fsr0h	equ	0xFEA
  5285                           fsr0l	equ	0xFE9
  5286                           wreg	equ	0xFE8
  5287                           postdec1	equ	0xFE5
  5288                           fsr1h	equ	0xFE2
  5289                           fsr1l	equ	0xFE1
  5290                           indf2	equ	0xFDF
  5291                           postinc2	equ	0xFDE
  5292                           postdec2	equ	0xFDD
  5293                           fsr2h	equ	0xFDA
  5294                           fsr2l	equ	0xFD9
  5295                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        198
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      80
    BANK0           160     40      40
    BANK1           256      0     198
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    displayClosestNote@secondDisplay	PTR unsigned char  size(2) Largest target is 8
		 -> main@secondDisplay(BANK0[8]), 

    displayClosestNote@firstDisplay	PTR unsigned char  size(2) Largest target is 8
		 -> main@firstDisplay(BANK0[8]), 

    findTargetFreqs@secondDisplay	PTR unsigned char  size(2) Largest target is 8
		 -> main@secondDisplay(BANK0[8]), 

    findTargetFreqs@firstDisplay	PTR unsigned char  size(2) Largest target is 8
		 -> main@firstDisplay(BANK0[8]), 

    update_Displays@firstDisplay	PTR unsigned char  size(2) Largest target is 8
		 -> main@firstDisplay(BANK0[8]), 

    update_Displays@secondDisplay	PTR unsigned char  size(2) Largest target is 8
		 -> main@secondDisplay(BANK0[8]), 

    storeImageD2@image	PTR const unsigned char  size(2) Largest target is 8
		 -> blank(CODE[8]), noteFlat(CODE[8]), noteSharp(CODE[8]), 

    storeImageD2@secondDisplay	PTR unsigned char  size(2) Largest target is 8
		 -> main@secondDisplay(BANK0[8]), 

    storeImageD1@image	PTR const unsigned char  size(2) Largest target is 8
		 -> noteG(CODE[8]), noteF(CODE[8]), noteE(CODE[8]), noteD(CODE[8]), 
		 -> noteC(CODE[8]), noteB(CODE[8]), noteA(CODE[8]), noteFlat(CODE[8]), 
		 -> noteSharp(CODE[8]), 

    storeImageD1@firstDisplay	PTR unsigned char  size(2) Largest target is 8
		 -> main@firstDisplay(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_displayOutOfTune
    _max7219_init->_max7219_write
    _findTargetFreqs->___ftge
    _displayOutOfTune->___ftmul
    ___ftneg->___wmul
    ___ftmul->___ftdiv
    ___ftge->___wmul
    ___ftadd->___ftneg
    _displayClosestNote->___ftdiv
    _update_Displays->_max7219_write
    _max7219_write->_sendData
    ___ftdiv->___ftadd
    _detectFrequency->___lltoft
    ___lltoft->___lldiv
    ___lldiv->___lmul

Critical Paths under _tc_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_displayOutOfTune

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tc_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tc_int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   45290
                                             75 COMRAM     1     1      0
                                             12 BANK0     28    28      0
                    _detectFrequency
                 _displayClosestNote
                   _displayOutOfTune
                    _findTargetFreqs
                    _init_PIC18F2550
                       _max7219_init
 ---------------------------------------------------------------------------------
 (1) _max7219_init                                        15    13      2     965
                                             19 COMRAM    15    13      2
                      _max7219_write
 ---------------------------------------------------------------------------------
 (1) _init_PIC18F2550                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _findTargetFreqs                                     18     7     11   11772
                                             29 COMRAM    18     7     11
                             ___ftge
                             ___wmul
                       _storeImageD1
                       _storeImageD2
                    _update_Displays
 ---------------------------------------------------------------------------------
 (1) _displayOutOfTune                                    22    12     10   16887
                                             65 COMRAM    10     0     10
                                              0 BANK0     12    12      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1951
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     429
                                             20 COMRAM     3     0      3
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2754
                                             50 COMRAM    15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    2312
                                             20 COMRAM     9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4010
                                             23 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _displayClosestNote                                   7     0      7   12331
                                             50 COMRAM     7     0      7
                            ___ftdiv
                       _storeImageD1
                       _storeImageD2
                    _update_Displays
 ---------------------------------------------------------------------------------
 (2) _update_Displays                                      5     1      4    2595
                                             19 COMRAM     5     1      4
                      _max7219_write
 ---------------------------------------------------------------------------------
 (2) _max7219_write                                        2     1      1     625
                                             17 COMRAM     2     1      1
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             3     3      0      69
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _storeImageD2                                         7     3      4    1926
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _storeImageD1                                         7     3      4    1926
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4372
                                             35 COMRAM    15     9      6
                            ___ftadd (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _detectFrequency                                     17    14      3    3017
                                             48 COMRAM    17    14      3
                            ___lldiv
                           ___lltoft
                             ___lmul
                    _getTimeMicroSec
 ---------------------------------------------------------------------------------
 (2) _getTimeMicroSec                                     12     8      4      23
                                             14 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     322
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2203
                                             39 COMRAM     9     5      4
                           ___ftpack
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2070
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                             26 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tc_int                                              14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _detectFrequency
     ___lldiv
       ___lmul (ARG)
     ___lltoft
       ___ftpack
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
     ___lmul
     _getTimeMicroSec
   _displayClosestNote
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     _storeImageD1
     _storeImageD2
     _update_Displays
       _max7219_write
         _sendData
   _displayOutOfTune
     ___ftadd
       ___ftneg (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftge
       ___wmul (ARG)
     ___ftmul
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
     ___ftneg
       ___wmul (ARG)
     ___wmul
   _findTargetFreqs
     ___ftge
       ___wmul (ARG)
     ___wmul
     _storeImageD1
     _storeImageD2
     _update_Displays
       _max7219_write
         _sendData
   _init_PIC18F2550
   _max7219_init
     _max7219_write
       _sendData

 _tc_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C6       7       77.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      28       5       25.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      50       1       85.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13E      20        0.0%
DATA                 0      0     13E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Mar 24 17:30:10 2017

               _displayClosestNote 0852                                 l70 1FDA  
                               l71 1FBE                                 l72 1FC0  
                               l69 1FB4                                 l79 1F10  
      displayOutOfTune@closestNote 0045                        __CFG_BOR$ON 000000  
              ___wmul@multiplicand 0011                        __CFG_BORV$3 000000  
                 update_Displays@i 0018                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000               __end_of_max7219_init 17B8  
                     ___ftadd@exp1 0023                       ___ftadd@exp2 0022  
                      __CFG_LVP$ON 000000                       ___ftadd@sign 0021  
                              l171 1A96                                l163 1A78  
                              l174 1A9A                                l166 1A7C  
                              l424 1C9E                                l504 20D8  
                              l193 0D34                                l451 1534  
                              l462 15E4                                l471 1600  
                              l447 150A                                l482 1960  
                              l549 1DBE                       __CFG_CPB$OFF 000000  
                              _RA0 007C00                                _RA2 007C02  
                              _RA4 007C04                ?_displayClosestNote 0033  
                     __CFG_CPD$OFF 000000                                wreg 000FE8  
          __end_of_detectFrequency 1B4A           __end_of_displayOutOfTune 1200  
                     ___ftdiv@cntr 002D              __end_of_max7219_write 2112  
                     ___ftdiv@sign 0032                       __CFG_WDT$OFF 000000  
                             l2003 0922                               l2021 0A5A  
                             l2015 09F2                               l2033 0B2A  
                             l2009 098A                               l2051 0C62  
                             l2027 0AC2                               l2045 0BFA  
                             l2039 0B92                               l1521 202C  
                             l2057 0CCA                               l1517 2024  
                             l1533 1FEA                               l1541 1F08  
                             l1621 15B0                               l1701 17E0  
                             l1615 1594                               l2079 19E2  
                             l1529 1FE2                               l1617 159E  
                             l1609 1572                               l1721 183A  
                             l1491 1C56                               l1483 1C20  
                             l1571 1EBE                               l1635 161C  
                             l1627 15D2                               l1619 15A8  
                             l1731 1862                               l1707 1808  
                             l1811 168C                               l1661 18FC  
                             l1645 164C                               l1629 15DC  
                             l1725 184A                               l1495 1C6C  
                             l1487 1C2E                               l1575 1ED2  
                             l1655 18D4                               l1751 1D1E  
                             l1735 1872                               l1911 14BC  
                             l1831 1720                               l1823 16EA  
                             l1815 16B4                               l1807 167E  
                             l1497 1C8A                               l1489 1C38  
                             l1681 193A                               l1593 1542  
                             l1771 1D70                               l1499 1C94  
                             l1587 1518                               l1747 1CEE  
                             l1851 179A                               l1843 1764  
                             l1835 172E                               l1827 16F8  
                             l1819 16C2                               l1773 1D7C  
                             l1757 1D4A                               l1917 0D44  
                             l1909 14B8                               l1783 1DB0  
                             l1775 1D80                               l1791 1E64  
                             l1951 104C                               l1871 12CE  
                             l1863 1270                               l1855 1212  
                             l1847 178C                               l1839 1756  
                             l1873 12EA                               l1947 102E  
                             l1891 13BC                               l1789 1E58  
                             l1877 1320                               l1895 140C  
                             l1879 132A                               l1977 11E2  
                             l1987 1AA0                               l1899 141E  
                             l1997 08BA                               u1100 1FDA  
                             u1501 18E4                               u1271 14D6  
                             u1281 14EA                               u2137 1998  
                             u1531 17C8                               u1551 17F0  
                             u1481 18BC                               u1790 13D8  
                             _TMR0 000FD6                getTimeMicroSec@temp 0017  
                             _main 1992                       ___ftpack@arg 000F  
                ??_findTargetFreqs 0029                       ___ftpack@exp 0012  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9               ??_displayClosestNote 003A  
                             btemp 0051                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 0016                      __CFG_IESO$OFF 000000  
            __size_of_storeImageD1 0042              __size_of_storeImageD2 0042  
                    __CFG_MCLRE$ON 000000                       ___ftmul@cntr 0040  
                     ___param_bank 000010                       ___ftmul@sign 0041  
         displayOutOfTune@midpoint 0066     findTargetFreqs@targetFreqSharp 0025  
                    __CFG_PLLDIV$1 000000            __end_of_update_Displays 1F54  
                   __CFG_CCP2MX$ON 000000                              ?_main 0001  
                  __end_of___ftadd 1672                    __end_of___ftdiv 1992  
                  __end_of___ftneg 20E6                    __end_of___lldiv 1DD0  
                  __end_of___ftmul 18AC                              _T0CON 000FD5  
                            i2l109 1E16                      __CFG_USBDIV$1 000000  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                ___lmul@multiplicand 0013  
                    __CFG_WRT3$OFF 000000                       ___lltoft@exp 0030  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
  displayClosestNote@secondDisplay 0038                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                            _blank 0801                              _noteA 0809  
                            _noteB 0811                              _noteC 0819  
                            _noteD 0821                              _noteE 0829  
                            _noteF 0831                              _noteG 0841  
                    ___ftpack@sign 0013                       _storeImageD1 2020  
                     _storeImageD2 1FDE                              tablat 000FF5  
                            status 000FD8  detectFrequency@finishTimeMicroSec 003C  
                   __CFG_PBADEN$ON 000000      displayClosestNote@closestNote 0033  
         storeImageD1@firstDisplay 0011                    __initialization 2062  
                     __end_of_main 1A72                             ??_main 004C  
                    __activetblptr 000001                   ?_detectFrequency 0031  
                           _ADCON1 000FC1                   __end_of___ftpack 1CBE  
                 __end_of___lltoft 1EAE                             _TMR0IE 007F95  
                           _TMR0IF 007F92                      main@frequency 0085  
                   __CFG_XINST$OFF 000000                             ___ftge 1CBE  
                           ___lmul 1EAE              __size_of_max7219_init 0146  
                           ___wmul 209C                          ??___ftadd 001E  
                   __CFG_STVREN$ON 000000                          ??___ftdiv 002A  
                        ??___ftneg 0018                          ??___lldiv 0023  
                        ??___ftmul 0039                             _tc_int 0008  
                 ?_update_Displays 0014                   __end_of_sendData 1FDE  
            ___ftmul@f3_as_product 003D                   __end_of_noteFlat 0841  
 detectFrequency@startTimeMicroSec 0038                      _frequencyList 0100  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                  _getTimeMicroSec 1F54                         __accesstop 0060  
          __end_of__initialization 208A                    __CFG_FOSC$XT_XT 000000  
                       ___ftadd@f1 0018                         ___ftadd@f2 001B  
                     _max7219_init 1672                         ___ftge@ff1 0015  
                       ___ftge@ff2 0018                      ___rparam_used 000001  
                       ___ftdiv@f1 0024                         ___ftdiv@f2 0027  
                       ___ftdiv@f3 002E                         ___ftneg@f1 0015  
                       ___ftmul@f1 0033                         ___ftmul@f2 0036  
                   __pcstackCOMRAM 0001           detectFrequency@frequency 0031  
                     __pidataBANK1 1B4A                      __end_of_blank 0809  
                       ___lltoft@c 0028                      __end_of_noteA 0811  
                    __end_of_noteB 0819                      __end_of_noteC 0821  
                    __end_of_noteD 0829                      __end_of_noteE 0831  
                    __end_of_noteF 0839                      __end_of_noteG 0849  
                main@secondDisplay 0074                      max7219_init@i 0017  
         __size_of_init_PIC18F2550 001C                    _findTargetFreqs 1200  
                ?_displayOutOfTune 0042                 ??_displayOutOfTune 004C  
   displayClosestNote@firstDisplay 0036                            ?___ftge 0015  
                          ?___lmul 000F                            ?___wmul 000F  
                   ___lmul@product 0017                            ?_tc_int 0001  
                        ?___ftpack 000F                          ?___lltoft 0028  
         max7219_init@noOfDisplays 0014            __end_of_getTimeMicroSec 1F9A  
                 main@noOfDisplays 007C                    __CFG_VREGEN$OFF 000000  
                storeImageD1@image 000F                  storeImageD2@image 000F  
max7219_write@leastSignificantByte 0012        __size_of_displayClosestNote 04E4  
                        ?_sendData 0001                            __Hparam 0000  
                          __Lparam 0000                    __size_of___ftge 0090  
                  __size_of___lmul 0056                            ___ftadd 14C6  
                          ___ftdiv 18AC                            ___ftneg 20C2  
                          ___lldiv 1D4E                    __size_of___wmul 0026  
                          ___ftmul 17B8                       __psmallconst 0800  
                 main@firstDisplay 006C             __size_of_max7219_write 0010  
          __end_of_findTargetFreqs 14C6                            __pcinit 2062  
                       ??___ftpack 0014                            __ramtop 0800  
                  __size_of_tc_int 1E4A                         ??___lltoft 002C  
                          __ptext0 1992                            __ptext1 1672  
                          __ptext2 20E6                            __ptext3 1200  
                          __ptext4 0D36                            __ptext5 209C  
                          __ptext6 20C2                            __ptext7 17B8  
                          __ptext8 1CBE                            __ptext9 14C6  
                ??_init_PIC18F2550 000F                     __pintcode_body 1DD0  
             end_of_initialization 208A                  __end_of_noteSharp 0851  
                          int_func 1DD0       update_Displays@secondDisplay 0016  
                       ??_sendData 000F                    ___lldiv@divisor 001F  
                  ___lldiv@counter 0027                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE                          _PORTAbits 000F80  
                 ?_getTimeMicroSec 000F                      _max7219_write 2102  
         __size_of_detectFrequency 00D8                        ___ftdiv@exp 0031  
                      ___ftmul@exp 003C           findTargetFreqs@frequency 001E  
                displayOutOfTune@a 0060                  displayOutOfTune@b 0063  
                displayOutOfTune@c 0069                     __end_of___ftge 1D4E  
                   __end_of___lmul 1F04                     __end_of___wmul 20C2  
                 ?_findTargetFreqs 001E                     __end_of_tc_int 1E52  
              start_initialization 2062                  max7219_init@i_314 0019  
                max7219_init@i_315 001B                  max7219_init@i_316 001D  
                max7219_init@i_317 001F                  max7219_init@i_318 0021  
         __size_of_update_Displays 0050                     ?_max7219_write 0012  
        storeImageD2@secondDisplay 0011                main@targetFreqSharp 0081  
             findTargetFreqs@count 002E               findTargetFreqs@found 002C  
                         ??___ftge 001B                           ??___lmul 0017  
        __size_of_displayOutOfTune 04CA                           ??___wmul 0013  
                      __pdataBANK1 0100                   __CFG_LPT1OSC$OFF 000000  
                         ??_tc_int 0001                       sendData@data 000F  
                __size_of___ftpack 00AE                  __size_of___lltoft 005C  
                      __pbssCOMRAM 004D                      __pcstackBANK0 0060  
                    ?_storeImageD1 000F                      ?_storeImageD2 000F  
                __size_of_sendData 0044                          __pintcode 0008  
                ??_detectFrequency 0034                           ?___ftadd 0018  
                         ?___ftdiv 0024                           ?___ftneg 0015  
                         ?___lldiv 001B                    main@closestNote 007E  
                         ?___ftmul 0033                    _init_PIC18F2550 20E6  
                      __smallconst 0800    displayOutOfTune@targetFreqSharp 0048  
                  ??_max7219_write 0013        update_Displays@firstDisplay 0014  
                   ??_storeImageD1 0013                     ??_storeImageD2 0013  
                    storeImageD1@i 0015                      storeImageD2@i 0015  
       __end_of_displayClosestNote 0D36                     ___wmul@product 0013  
                ??_update_Displays 0018          displayOutOfTune@frequency 0042  
                        _tickCount 004D                          _noteSharp 0849  
                         _UCFGbits 000F6F                   __CFG_WDTPS$32768 000000  
    findTargetFreqs@targetFreqFlat 0027                           _UCONbits 000F6D  
      findTargetFreqs@firstDisplay 0021                  ___wmul@multiplier 000F  
                ___lmul@multiplier 000F                          copy_data0 207E  
                    ?_max7219_init 0014                 main@targetFreqFlat 0083  
                         __Hrparam 0000            __end_of_init_PIC18F2550 2102  
                         __Lrparam 0000                       __Lsmallconst 0800  
                 _displayOutOfTune 0D36                   __size_of___ftadd 01AC  
                 __size_of___ftdiv 00E6                   __size_of___ftneg 0024  
                 __size_of___lldiv 0082                   __size_of___ftmul 00F4  
                         ___ftpack 1C10                           ___lltoft 1E52  
                 detectFrequency@n 0041                   detectFrequency@x 0040  
                        sendData@i 0010                           __ptext10 0852  
                         __ptext11 1F04                           __ptext20 1E52  
                         __ptext12 2102                           __ptext21 1C10  
                         __ptext13 1F9A                           __ptext22 1D4E  
                         __ptext14 1FDE                           __ptext15 2020  
                         __ptext16 18AC                           __ptext17 1A72  
                         __ptext18 1F54                           __ptext19 1EAE  
   displayOutOfTune@targetFreqFlat 004A           __size_of_getTimeMicroSec 0046  
                   ??_max7219_init 0016                      __size_of_main 00E0  
                         _sendData 1F9A                           _noteFlat 0839  
                         int$flags 0051               __end_of_storeImageD1 2062  
             __end_of_storeImageD2 2020              __CFG_CPUDIV$OSC1_PLL2 000000  
                       _INTCONbits 000FF2           __size_of_findTargetFreqs 02C6  
                         intlevel2 0000                    _detectFrequency 1A72  
                 ___lldiv@dividend 001B                   ?_init_PIC18F2550 0001  
                 ___lldiv@quotient 0023       findTargetFreqs@secondDisplay 0023  
                  _update_Displays 1F04   max7219_write@mostSignificantByte 0013  
                ??_getTimeMicroSec 0013  
